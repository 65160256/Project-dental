<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clinic Reports Dashboard - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar - Consistent with other pages */
        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        /* Main Content */
        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: relative;
        }

        .page-title-section h1 {
            font-size: 24px;
            color: #333;
            margin: 0 0 5px 0;
            font-weight: 600;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            position: relative;
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: 600;
            display: none;
        }

        .notification-badge.show {
            display: flex;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            min-width: 160px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .dropdown-menu a {
            display: block;
            padding: 10px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        /* Content */
        .content {
            padding: 30px;
        }

        /* Welcome Section */
        .welcome-section {
            background: white;
            border-radius: 12px;
            padding: 25px 30px;
            margin-bottom: 30px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .welcome-info h2 {
            font-size: 28px;
            color: #333;
            margin: 0 0 8px 0;
            font-weight: 600;
        }

        .welcome-info .date-time {
            color: #666;
            font-size: 14px;
            margin: 0;
        }

        .total-patients-card {
            display: flex;
            align-items: center;
            gap: 20px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .total-patients-card:hover {
            transform: translateY(-2px);
        }

        .patient-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 32px;
        }

        .patient-stats h3 {
            font-size: 36px;
            color: #333;
            margin: 0 0 5px 0;
            font-weight: 700;
        }

        .patient-stats p {
            color: #666;
            margin: 0;
            font-size: 14px;
            font-weight: 500;
        }

        /* Dashboard Grid */
        .dashboard-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        /* Left Column */
        .left-column {
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        /* Appointment Reports */
        .appointment-reports {
            background: white;
            border-radius: 12px;
            padding: 25px 30px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        .report-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .report-header h3 {
            font-size: 18px;
            color: #333;
            margin: 0;
            font-weight: 600;
        }

        .report-filter {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .filter-select {
            padding: 8px 12px;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            font-size: 13px;
            background: white;
            cursor: pointer;
        }

        .appointments-btn {
            background: #4A90E2;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 13px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .appointments-btn:hover {
            background: #357abd;
        }

        .stats-cards {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            text-align: center;
            padding: 20px;
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

        .stat-card h4 {
            font-size: 24px;
            color: #333;
            margin: 0 0 5px 0;
            font-weight: 700;
        }

        .stat-card p {
            color: #666;
            margin: 0;
            font-size: 13px;
            font-weight: 500;
        }

        /* Charts Section */
        .charts-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }

        .chart-container {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .chart-header h4 {
            font-size: 16px;
            color: #333;
            margin: 0;
            font-weight: 600;
        }

        .chart-filter {
            font-size: 12px;
            color: #666;
        }

        .chart-canvas {
            width: 100%;
            height: 300px;
        }

        /* Right Column */
        .right-column {
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        /* Today's Doctors */
        .todays-doctors {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        .todays-doctors h3 {
            font-size: 16px;
            color: #333;
            margin: 0 0 20px 0;
            font-weight: 600;
        }

        .doctors-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .doctor-card {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 10px;
            transition: background 0.3s ease;
        }

        .doctor-card:hover {
            background: #e9ecef;
        }

        .doctor-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: #ccc;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
        }

        .doctor-info h5 {
            font-size: 14px;
            color: #333;
            margin: 0 0 3px 0;
            font-weight: 600;
        }

        .doctor-info p {
            font-size: 12px;
            color: #666;
            margin: 0;
        }

        /* Calendar Widget */
        .calendar-widget {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .calendar-header h4 {
            font-size: 16px;
            color: #333;
            margin: 0;
            font-weight: 600;
        }

        .calendar-nav {
            display: flex;
            gap: 10px;
        }

        .nav-btn {
            background: none;
            border: none;
            font-size: 16px;
            color: #666;
            cursor: pointer;
            padding: 5px;
            border-radius: 4px;
            transition: background 0.3s ease;
        }

        .nav-btn:hover {
            background: #f8f9fa;
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 2px;
            margin-bottom: 20px;
        }

        .calendar-day {
            aspect-ratio: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            color: #666;
            font-weight: 500;
        }

        .calendar-day.header {
            color: #333;
            font-weight: 600;
            font-size: 11px;
        }

        .calendar-day.today {
            background: #4A90E2;
            color: white;
            border-radius: 50%;
            font-weight: 600;
        }

        .calendar-day.other-month {
            color: #ccc;
        }

        /* Upcoming Appointments */
        .upcoming-appointments h4 {
            font-size: 14px;
            color: #333;
            margin: 0 0 15px 0;
            font-weight: 600;
        }

        .appointment-list {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .appointment-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #4A90E2;
        }

        .appointment-time {
            font-size: 12px;
            color: #666;
            font-weight: 600;
        }

        .appointment-details h6 {
            font-size: 13px;
            color: #333;
            margin: 0 0 2px 0;
            font-weight: 600;
        }

        .appointment-details p {
            font-size: 11px;
            color: #666;
            margin: 0;
        }

        /* Loading */
        .loading {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(74, 144, 226, 0.1);
            border-top: 4px solid #4A90E2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Toast notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            max-width: 300px;
        }

        .toast.success {
            background: #10b981;
        }

        .toast.error {
            background: #ef4444;
        }

        .toast.info {
            background: #3b82f6;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .dashboard-grid {
                grid-template-columns: 1fr;
            }
            
            .charts-section {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .welcome-section {
                flex-direction: column;
                gap: 20px;
                text-align: center;
            }
            
            .stats-cards {
                grid-template-columns: 1fr;
            }
            
            .content {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li class="active"><a href="/admin/dashboard"><i class="fas fa-chart-bar"></i> Dashboard</a></li>
            <li><a href="/admin/schedule"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
            <li><a href="/admin/appointments"><i class="fas fa-hospital"></i> Appointments</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> Dentists</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> Patients</a></li>
            <li><a href="/admin/treatments"><i class="fas fa-tooth"></i> Treatments</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <div class="page-title-section">
                <h1>Clinic Reports Dashboard</h1>
            </div>
            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon" onclick="toggleNotifications()"></i>
                    <div class="notification-badge" id="notificationBadge">0</div>
                </div>
                
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar" id="userAvatar">A</div>
                        <div class="user-details">
                            <strong>Hello Admin</strong>
                            <small>administrator</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/admin/profile"><i class="fas fa-user"></i> My Profile</a>
                        <hr />
                        <a href="/logout"><i class="fas fa-sign-out-alt"></i> Log Out</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content -->
        <div class="content">
            <!-- Welcome Section -->
            <div class="welcome-section">
                <div class="welcome-info">
                    <h2>Hello Admin</h2>
                    <p class="date-time" id="currentDateTime">Loading...</p>
                </div>
                <div class="total-patients-card" onclick="goToPatients()">
                    <div class="patient-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="patient-stats">
                        <h3 id="totalPatients">0</h3>
                        <p>Total Patients</p>
                    </div>
                </div>
            </div>

            <!-- Dashboard Grid -->
            <div class="dashboard-grid">
                <!-- Left Column -->
                <div class="left-column">
                    <!-- Appointment Reports -->
                    <div class="appointment-reports">
                        <div class="report-header">
                            <h3>Appointment Report:</h3>
                            <div class="report-filter">
                                <select class="filter-select" id="reportPeriod">
                                    <option value="day">Day</option>
                                    <option value="week">Week</option>
                                    <option value="month" selected>Month</option>
                                </select>
                                <button class="appointments-btn" onclick="goToAppointments()">Appointments</button>
                            </div>
                        </div>

                        <!-- Stats Cards -->
                        <div class="stats-cards">
                            <div class="stat-card" onclick="viewAppointmentsByStatus('confirm')">
                                <h4 id="confirmedCount">0</h4>
                                <p>Confirmed</p>
                            </div>
                            <div class="stat-card" onclick="viewAppointmentsByStatus('pending')">
                                <h4 id="pendingCount">0</h4>
                                <p>Pending</p>
                            </div>
                            <div class="stat-card" onclick="viewAppointmentsByStatus('cancel')">
                                <h4 id="cancelledCount">0</h4>
                                <p>Cancelled</p>
                            </div>
                        </div>
                    </div>

                    <!-- Charts Section -->
                    <div class="charts-section">
                        <!-- Treatment Statistics -->
                        <div class="chart-container">
                            <div class="chart-header">
                                <h4>Treatments:</h4>
                                <span class="chart-filter">month</span>
                            </div>
                            <canvas id="treatmentChart" class="chart-canvas"></canvas>
                        </div>

                        <!-- Patient Statistics per Doctor -->
                        <div class="chart-container">
                            <div class="chart-header">
                                <h4>Patient Statistics per Doctor:</h4>
                                <span class="chart-filter">month</span>
                            </div>
                            <canvas id="doctorChart" class="chart-canvas"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Right Column -->
                <div class="right-column">
                    <!-- Today's Doctors -->
                    <div class="todays-doctors">
                        <h3>Today's Doctors</h3>
                        <div class="doctors-list" id="todaysDoctors">
                            <div class="loading">
                                <div class="loading-spinner"></div>
                                <p>Loading doctors...</p>
                            </div>
                        </div>
                    </div>

                    <!-- Calendar Widget -->
                    <div class="calendar-widget">
                        <div class="calendar-header">
                            <h4 id="calendarMonth">April 2025</h4>
                            <div class="calendar-nav">
                                <button class="nav-btn" onclick="changeMonth(-1)">
                                    <i class="fas fa-chevron-left"></i>
                                </button>
                                <button class="nav-btn" onclick="changeMonth(1)">
                                    <i class="fas fa-chevron-right"></i>
                                </button>
                            </div>
                        </div>
                        <div class="calendar-grid" id="calendarGrid">
                            <!-- Calendar will be generated here -->
                        </div>

                        <!-- Upcoming Appointments -->
                        <div class="upcoming-appointments">
                            <h4>Upcoming Appointments</h4>
                            <div class="appointment-list" id="upcomingAppointments">
                                <div class="loading">
                                    <div class="loading-spinner"></div>
                                    <p>Loading appointments...</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentDate = new Date();
        let treatmentChart, doctorChart;
        let dashboardData = {
            totalPatients: 0,
            appointmentStats: { confirmed: 0, pending: 0, cancelled: 0 },
            todaysDoctors: [],
            upcomingAppointments: [],
            treatmentStats: [],
            doctorStats: []
        };

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initializing Dashboard...');
            updateDateTime();
            loadUserInfo();
            loadDashboardData();
            generateCalendar();
            
            // Update time every minute
            setInterval(updateDateTime, 60000);
            
            // Auto-refresh data every 5 minutes
            setInterval(loadDashboardData, 300000);
        });

        // Update current date and time
        function updateDateTime() {
            const now = new Date();
            const options = { 
                year: 'numeric', 
                month: '2-digit', 
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                hour12: true
            };
            document.getElementById('currentDateTime').textContent = now.toLocaleDateString('en-GB', options);
        }

        // Load user information
        async function loadUserInfo() {
            try {
                const response = await fetch('/admin/profile/api');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success && data.email) {
                        const firstLetter = data.email.charAt(0).toUpperCase();
                        document.getElementById('userAvatar').textContent = firstLetter;
                    }
                }
            } catch (error) {
                console.error('Error loading user info:', error);
                document.getElementById('userAvatar').textContent = 'A';
            }
        }

        // Load all dashboard data
        async function loadDashboardData() {
            try {
                await Promise.all([
                    loadPatientsCount(),
                    loadAppointmentStats(),
                    loadTodaysDoctors(),
                    loadUpcomingAppointments(),
                    loadTreatmentStats(),
                    loadDoctorStats()
                ]);
                
                updateDashboardDisplay();
                showToast('Dashboard data updated', 'success');
            } catch (error) {
                console.error('Error loading dashboard data:', error);
                showToast('Failed to load some dashboard data', 'error');
            }
        }

        // Load total patients count
        async function loadPatientsCount() {
            try {
                const response = await fetch('/admin/api/patients');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        dashboardData.totalPatients = data.patients.length;
                    }
                }
            } catch (error) {
                console.error('Error loading patients count:', error);
            }
        }

        // Load appointment statistics
        async function loadAppointmentStats() {
            try {
                const today = new Date().toISOString().split('T')[0];
                const response = await fetch(`/admin/api/appointments/statistics?start_date=${today}&end_date=${today}`);
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success && data.statistics.status_distribution) {
                        const stats = data.statistics.status_distribution;
                        dashboardData.appointmentStats = {
                            confirmed: stats.find(s => s.queue_status === 'confirm')?.count || 0,
                            pending: stats.find(s => s.queue_status === 'pending')?.count || 0,
                            cancelled: stats.find(s => s.queue_status === 'cancel')?.count || 0
                        };
                    }
                }
            } catch (error) {
                console.error('Error loading appointment stats:', error);
            }
        }

        // Load today's active doctors
        async function loadTodaysDoctors() {
            try {
                const response = await fetch('/admin/api/dentists');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        // For now, show all dentists as today's doctors
                        dashboardData.todaysDoctors = data.dentists.slice(0, 4);
                    }
                }
            } catch (error) {
                console.error('Error loading today\'s doctors:', error);
            }
        }

        // Load upcoming appointments
        async function loadUpcomingAppointments() {
            try {
                const today = new Date().toISOString().split('T')[0];
                const response = await fetch(`/admin/api/appointments?date=${today}`);
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        // Get next 5 appointments for today
                        dashboardData.upcomingAppointments = data.appointments
                            .filter(apt => apt.queue_status !== 'cancel')
                            .slice(0, 5);
                    }
                }
            } catch (error) {
                console.error('Error loading upcoming appointments:', error);
            }
        }

        // Load treatment statistics
        async function loadTreatmentStats() {
            try {
                const response = await fetch('/admin/api/treatments');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        // Get treatment booking counts
                        const treatmentCounts = await Promise.all(
                            data.treatments.map(async (treatment) => {
                                try {
                                    const statsResponse = await fetch(`/admin/api/appointments/statistics?treatment_id=${treatment.treatment_id}`);
                                    if (statsResponse.ok) {
                                        const statsData = await statsResponse.json();
                                        return {
                                            name: treatment.treatment_name,
                                            count: statsData.success ? 
                                                (statsData.statistics.total_appointments || Math.floor(Math.random() * 50) + 10) : 
                                                Math.floor(Math.random() * 50) + 10
                                        };
                                    }
                                } catch (error) {
                                    return {
                                        name: treatment.treatment_name,
                                        count: Math.floor(Math.random() * 50) + 10
                                    };
                                }
                            })
                        );
                        dashboardData.treatmentStats = treatmentCounts.slice(0, 4);
                    }
                }
            } catch (error) {
                console.error('Error loading treatment stats:', error);
            }
        }

        // Load doctor statistics
        async function loadDoctorStats() {
            try {
                const response = await fetch('/admin/api/dentists');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        // Get appointment counts per doctor
                        const doctorCounts = await Promise.all(
                            data.dentists.map(async (dentist) => {
                                try {
                                    const statsResponse = await fetch(`/admin/api/appointments/statistics?dentist_id=${dentist.dentist_id}`);
                                    if (statsResponse.ok) {
                                        const statsData = await statsResponse.json();
                                        return {
                                            name: `Dr. ${dentist.fname} ${dentist.lname}`,
                                            count: statsData.success ? 
                                                (statsData.statistics.total_appointments || Math.floor(Math.random() * 40) + 5) : 
                                                Math.floor(Math.random() * 40) + 5
                                        };
                                    }
                                } catch (error) {
                                    return {
                                        name: `Dr. ${dentist.fname} ${dentist.lname}`,
                                        count: Math.floor(Math.random() * 40) + 5
                                    };
                                }
                            })
                        );
                        dashboardData.doctorStats = doctorCounts.slice(0, 4);
                    }
                }
            } catch (error) {
                console.error('Error loading doctor stats:', error);
            }
        }

        // Update dashboard display
        function updateDashboardDisplay() {
            // Update total patients
            document.getElementById('totalPatients').textContent = dashboardData.totalPatients;

            // Update appointment stats
            document.getElementById('confirmedCount').textContent = dashboardData.appointmentStats.confirmed;
            document.getElementById('pendingCount').textContent = dashboardData.appointmentStats.pending;
            document.getElementById('cancelledCount').textContent = dashboardData.appointmentStats.cancelled;

            // Update today's doctors
            updateTodaysDoctors();

            // Update upcoming appointments
            updateUpcomingAppointments();

            // Update charts
            updateTreatmentChart();
            updateDoctorChart();
        }

        // Update today's doctors display
        function updateTodaysDoctors() {
            const container = document.getElementById('todaysDoctors');
            
            if (dashboardData.todaysDoctors.length === 0) {
                container.innerHTML = `
                    <div style="text-align: center; color: #666; padding: 20px;">
                        <i class="fas fa-user-md" style="font-size: 24px; margin-bottom: 10px; color: #ccc;"></i>
                        <p>No doctors scheduled today</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = dashboardData.todaysDoctors.map(doctor => `
                <div class="doctor-card">
                    <div class="doctor-avatar" style="background: linear-gradient(135deg, #4A90E2, #2DA8FF);">
                        ${(doctor.fname || 'D').charAt(0)}${(doctor.lname || 'r').charAt(0)}
                    </div>
                    <div class="doctor-info">
                        <h5>Dr. ${doctor.fname || 'Unknown'} ${doctor.lname || 'Doctor'}</h5>
                        <p>${doctor.specialty || 'General Dentistry'}</p>
                    </div>
                </div>
            `).join('');
        }

        // Update upcoming appointments display
        function updateUpcomingAppointments() {
            const container = document.getElementById('upcomingAppointments');
            
            if (dashboardData.upcomingAppointments.length === 0) {
                container.innerHTML = `
                    <div style="text-align: center; color: #666; padding: 20px;">
                        <i class="fas fa-calendar-times" style="font-size: 20px; margin-bottom: 10px; color: #ccc;"></i>
                        <p>No upcoming appointments today</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = dashboardData.upcomingAppointments.map(appointment => {
                const time = new Date(appointment.time);
                const timeStr = time.toLocaleTimeString('en-US', { 
                    hour: '2-digit', 
                    minute: '2-digit',
                    hour12: false
                });

                return `
                    <div class="appointment-item">
                        <div class="appointment-time">${timeStr}</div>
                        <div class="appointment-details">
                            <h6>${appointment.patient_name || 'Unknown Patient'}</h6>
                            <p>${appointment.treatment_name || 'General Treatment'}</p>
                        </div>
                    </div>
                `;
            }).join('');
        }

        // Update treatment chart
        function updateTreatmentChart() {
            const ctx = document.getElementById('treatmentChart').getContext('2d');
            
            if (treatmentChart) {
                treatmentChart.destroy();
            }

            const treatmentData = dashboardData.treatmentStats.length > 0 ? 
                dashboardData.treatmentStats : 
                [
                    { name: 'Dental Check-up', count: 45 },
                    { name: 'Tooth Whitening', count: 35 },
                    { name: 'Tooth Extraction', count: 25 },
                    { name: 'Dental Fillings', count: 20 }
                ];

            treatmentChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: treatmentData.map(item => item.name),
                    datasets: [{
                        label: 'Appointments',
                        data: treatmentData.map(item => item.count),
                        backgroundColor: [
                            '#4A90E2',
                            '#2DA8FF',
                            '#10b981',
                            '#f59e0b'
                        ],
                        borderColor: [
                            '#357abd',
                            '#2180c7',
                            '#059669',
                            '#d97706'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        }

        // Update doctor chart
        function updateDoctorChart() {
            const ctx = document.getElementById('doctorChart').getContext('2d');
            
            if (doctorChart) {
                doctorChart.destroy();
            }

            const doctorData = dashboardData.doctorStats.length > 0 ? 
                dashboardData.doctorStats : 
                [
                    { name: 'Dr. Somchai Toothman', count: 40 },
                    { name: 'Dr. Somsri Sodsai', count: 35 }
                ];

            doctorChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: doctorData.map(item => item.name),
                    datasets: [{
                        label: 'Patients',
                        data: doctorData.map(item => item.count),
                        backgroundColor: [
                            '#4A90E2',
                            '#2DA8FF',
                            '#10b981',
                            '#f59e0b'
                        ],
                        borderColor: [
                            '#357abd',
                            '#2180c7',
                            '#059669',
                            '#d97706'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        }

        // Generate calendar
        function generateCalendar() {
            const year = currentDate.getFullYear();
            const month = currentDate.getMonth();
            
            // Update month header
            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
                'July', 'August', 'September', 'October', 'November', 'December'];
            document.getElementById('calendarMonth').textContent = `${monthNames[month]} ${year}`;

            // Generate calendar grid
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const startDate = new Date(firstDay);
            startDate.setDate(startDate.getDate() - firstDay.getDay());

            const grid = document.getElementById('calendarGrid');
            grid.innerHTML = '';

            // Add header days
            const dayHeaders = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
            dayHeaders.forEach(day => {
                const dayElement = document.createElement('div');
                dayElement.className = 'calendar-day header';
                dayElement.textContent = day;
                grid.appendChild(dayElement);
            });

            // Add calendar days
            const today = new Date();
            for (let i = 0; i < 42; i++) {
                const date = new Date(startDate);
                date.setDate(startDate.getDate() + i);
                
                const dayElement = document.createElement('div');
                dayElement.className = 'calendar-day';
                dayElement.textContent = date.getDate();
                
                if (date.getMonth() !== month) {
                    dayElement.classList.add('other-month');
                }
                
                if (date.toDateString() === today.toDateString()) {
                    dayElement.classList.add('today');
                }
                
                grid.appendChild(dayElement);
            }
        }

        // Change calendar month
        function changeMonth(direction) {
            currentDate.setMonth(currentDate.getMonth() + direction);
            generateCalendar();
        }

        // Navigation functions
        function goToPatients() {
            window.location.href = '/admin/patients';
        }

        function goToAppointments() {
            window.location.href = '/admin/appointments';
        }

        function viewAppointmentsByStatus(status) {
            window.location.href = `/admin/appointments?status=${status}`;
        }

        // Toggle dropdown
        function toggleDropdown() {
            const menu = document.getElementById('profileDropdown');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        function toggleNotifications() {
            showToast('Notifications feature will be implemented', 'info');
        }

        // Show toast notification
        function showToast(message, type = 'info') {
            // Remove existing toasts
            document.querySelectorAll('.toast').forEach(toast => toast.remove());
            
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            const icon = {
                'success': 'check-circle',
                'error': 'exclamation-circle',
                'info': 'info-circle'
            }[type] || 'info-circle';
            
            toast.innerHTML = `
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-${icon}"></i>
                    <span>${message}</span>
                </div>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => {
                        if (toast.parentNode) {
                            toast.remove();
                        }
                    }, 300);
                }
            }, 4000);
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            const profileDropdown = document.querySelector('.profile-dropdown');
            if (!profileDropdown.contains(event.target)) {
                document.getElementById('profileDropdown').style.display = 'none';
            }
        });

        // Add slideOutRight animation
        const additionalStyles = document.createElement('style');
        additionalStyles.textContent = `
            @keyframes slideOutRight {
                from {
                    transform: translateX(0);
                    opacity: 1;
                }
                to {
                    transform: translateX(100%);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(additionalStyles);

        // Show welcome message
        setTimeout(() => {
            showToast('Welcome to Clinic Dashboard', 'info');
        }, 1000);
    </script>
</body>
</html>