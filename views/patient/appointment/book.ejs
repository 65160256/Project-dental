<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Appointment - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Header */
        .header {
            background: white;
            padding: 15px 30px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
            color: #4A90E2;
            font-size: 20px;
            font-weight: 600;
        }

        .logo i {
            font-size: 24px;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .user-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 14px;
        }

        .nav-links {
            display: flex;
            gap: 15px;
        }

        .nav-links a {
            color: #666;
            text-decoration: none;
            padding: 8px 12px;
            border-radius: 6px;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 14px;
        }

        .nav-links a:hover, .nav-links a.active {
            background: rgba(74, 144, 226, 0.1);
            color: #4A90E2;
        }

        /* Main Container */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 20px;
        }

        /* Progress Steps */
        .progress-section {
            background: white;
            border-radius: 12px;
            padding: 25px 30px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .progress-steps {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 40px;
        }

        .step {
            display: flex;
            align-items: center;
            color: #6c757d;
            flex-direction: column;
            text-align: center;
            min-width: 120px;
        }

        .step.active {
            color: #4A90E2;
            font-weight: 600;
        }

        .step.completed {
            color: #10b981;
        }

        .step-number {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 12px;
            font-size: 18px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .step.active .step-number {
            background: #4A90E2;
            color: white;
            transform: scale(1.05);
        }

        .step.completed .step-number {
            background: #10b981;
            color: white;
        }

        .step-label {
            font-size: 14px;
            font-weight: 500;
        }

        .step-connector {
            flex: 1;
            height: 2px;
            background: #e9ecef;
            max-width: 100px;
        }

        .step.completed + .step-connector {
            background: #10b981;
        }

        /* Content Sections */
        .step-content {
            display: none;
        }

        .step-content.active {
            display: block;
            animation: fadeIn 0.4s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Form Styles */
        .form-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .section-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-title i {
            color: #4A90E2;
            font-size: 20px;
        }

        /* Treatment Filter */
        .filter-grid {
            display: grid;
            grid-template-columns: 1fr auto;
            gap: 15px;
            align-items: end;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
        }

        .form-control {
            padding: 10px 14px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .form-control:focus {
            outline: none;
            border-color: #4A90E2;
            background: white;
            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        }

        /* Calendar Styles */
        .calendar-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .calendar-title {
            font-size: 22px;
            font-weight: 600;
            color: #333;
        }

        .calendar-nav {
            background: none;
            border: none;
            color: #4A90E2;
            font-size: 18px;
            cursor: pointer;
            padding: 8px 12px;
            border-radius: 6px;
            transition: all 0.3s ease;
        }

        .calendar-nav:hover {
            background: rgba(74, 144, 226, 0.1);
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 2px;
            background: #f1f3f4;
            border-radius: 8px;
            overflow: hidden;
        }

        .weekday {
            padding: 12px;
            text-align: center;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            font-weight: 600;
            font-size: 13px;
        }

        .calendar-day {
            background: white;
            min-height: 90px;
            padding: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .calendar-day:hover {
            background: #f8f9fa;
            border: 2px solid #4A90E2;
            transform: translateY(-2px);
        }

        .calendar-day.selected {
            background: rgba(74, 144, 226, 0.1);
            border: 2px solid #4A90E2;
            transform: translateY(-2px);
        }

        .calendar-day.past {
            background: #f8f9fa;
            color: #999;
            cursor: not-allowed;
            opacity: 0.5;
        }

        .calendar-day.past:hover {
            background: #f8f9fa;
            border: 2px solid transparent;
            transform: none;
        }

        .calendar-day.unavailable {
            background: #fed7d7;
            color: #c53030;
            cursor: not-allowed;
        }

        .day-number {
            font-weight: 600;
            font-size: 15px;
            margin-bottom: 8px;
            color: #333;
        }

        .calendar-day.past .day-number {
            color: #999;
        }

        .day-doctors {
            display: flex;
            flex-direction: column;
            gap: 4px;
        }

        .doctor-item {
            display: flex;
            align-items: center;
            gap: 6px;
            padding: 4px 6px;
            border-radius: 4px;
            background: rgba(74, 144, 226, 0.1);
            font-size: 11px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .doctor-item:hover {
            background: rgba(74, 144, 226, 0.2);
        }

        .doctor-mini-avatar {
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 9px;
        }

        .doctor-status {
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background: #10b981;
            margin-left: auto;
        }

        .doctor-status.busy {
            background: #ef4444;
        }

        /* Available Doctors */
        .doctors-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .doctors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
        }

        .doctor-card {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .doctor-card:hover {
            border-color: #4A90E2;
            background: white;
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(74, 144, 226, 0.15);
        }

        .doctor-card.selected {
            border-color: #4A90E2;
            background: rgba(74, 144, 226, 0.1);
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(74, 144, 226, 0.2);
        }

        .doctor-card-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }

        .doctor-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 20px;
        }

        .doctor-details h5 {
            margin: 0 0 5px 0;
            color: #333;
            font-size: 16px;
            font-weight: 600;
        }

        .doctor-details p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }

        .doctor-treatments {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
            margin-bottom: 15px;
        }

        .treatment-tag {
            background: rgba(74, 144, 226, 0.1);
            color: #4A90E2;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
        }

        .doctor-availability {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .time-slot {
            display: inline-block;
            background: #e8f5e8;
            color: #2e7d32;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 500;
        }

        .time-slot.busy {
            background: #fce4ec;
            color: #c2185b;
        }

        /* Time Selection */
        .time-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .selected-doctor-info {
            background: linear-gradient(135deg, rgba(74, 144, 226, 0.1), rgba(45, 168, 255, 0.1));
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .date-selector {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            margin-bottom: 20px;
        }

        .date-nav {
            background: none;
            border: none;
            color: #4A90E2;
            font-size: 18px;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .date-nav:hover {
            background: rgba(74, 144, 226, 0.1);
        }

        .selected-date {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            text-align: center;
            min-width: 250px;
        }

        .time-slots-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 12px;
        }

        .time-slot-btn {
            padding: 12px 10px;
            border: 2px solid #e9ecef;
            background: #f8f9fa;
            border-radius: 8px;
            cursor: pointer;
            text-align: center;
            transition: all 0.3s ease;
            font-size: 14px;
            font-weight: 500;
        }

        .time-slot-btn:hover {
            border-color: #4A90E2;
            background: rgba(74, 144, 226, 0.1);
            transform: translateY(-2px);
        }

        .time-slot-btn.available {
            border-color: #10b981;
            background: #d1f2eb;
            color: #0c5a40;
        }

        .time-slot-btn.selected {
            border-color: #4A90E2;
            background: #4A90E2;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .time-slot-btn.unavailable, .time-slot-btn.too-soon {
            border-color: #ef4444;
            background: #fee2e2;
            color: #991b1b;
            cursor: not-allowed;
            opacity: 0.7;
        }

        /* Appointment Details */
        .appointment-details {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 20px;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 100px;
            font-family: inherit;
        }

        /* Confirmation */
        .confirmation-section {
            background: white;
            border-radius: 12px;
            padding: 40px;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

        .booking-success {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            padding: 25px;
            border-radius: 10px;
            margin-bottom: 30px;
            font-size: 20px;
            font-weight: 600;
        }

        .booking-details {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            margin: 25px 0;
            text-align: left;
        }

        .booking-details h4 {
            margin: 0 0 20px 0;
            color: #333;
            text-align: center;
            font-size: 18px;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid #e9ecef;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            color: #666;
            font-weight: 500;
            font-size: 14px;
        }

        .detail-value {
            color: #333;
            font-weight: 600;
            font-size: 14px;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-confirmed {
            background: #d1f2eb;
            color: #065f46;
        }

        /* Buttons */
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            justify-content: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(74, 144, 226, 0.3);
        }

        .btn-primary:disabled {
            background: #e9ecef;
            color: #666;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #666;
            border: 2px solid #e9ecef;
        }

        .btn-secondary:hover {
            background: #e9ecef;
            transform: translateY(-1px);
        }

        .btn-success {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.3);
        }

        /* Navigation */
        .step-navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
            margin-top: 20px;
        }

        /* Loading */
        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 50px;
            color: #666;
        }

        .loading-spinner {
            width: 36px;
            height: 36px;
            border: 3px solid rgba(74, 144, 226, 0.1);
            border-top: 3px solid #4A90E2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Toast Notifications */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 18px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            min-width: 280px;
            display: none;
            align-items: center;
            gap: 10px;
        }

        .toast.show {
            display: flex;
            animation: slideInRight 0.3s ease;
        }

        .toast.success {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .toast.error {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        .toast.info {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
        }

        .toast.warning {
            background: linear-gradient(135deg, #f59e0b, #d97706);
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* Alert Messages */
        .alert {
            padding: 15px 18px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 14px;
        }

        .alert-warning {
            background: #fff3cd;
            color: #856404;
            border: 2px solid #ffc107;
        }

        .alert-info {
            background: #d1ecf1;
            color: #0c5460;
            border: 2px solid #17a2b8;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 20px 10px;
            }
            
            .progress-steps {
                flex-direction: column;
                gap: 20px;
            }
            
            .step-connector {
                display: none;
            }
            
            .calendar-header {
                flex-direction: column;
                gap: 15px;
            }
            
            .doctors-grid {
                grid-template-columns: 1fr;
            }
            
            .time-slots-grid {
                grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            }
            
            .step-navigation {
                flex-direction: column;
                gap: 15px;
            }
            
            .filter-grid {
                grid-template-columns: 1fr;
            }

            .header-content {
                flex-direction: column;
                gap: 12px;
            }

            .nav-links {
                flex-wrap: wrap;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <div class="header-content">
            <div class="logo">
                <i class="fas fa-tooth"></i>
                <span>Smile Clinic</span>
            </div>
            
            <div class="nav-links">
                <a href="/patient/dashboard">Dashboard</a>
                <a href="/patient/appointment/schedule" class="active">Book Appointment</a>
                <a href="/patient/history">My Appointments</a>
                <a href="/patient/dentists">Our Dentists</a>
            </div>

            <div class="user-info">
                <div class="user-avatar" id="userAvatar">P</div>
                <div style="text-align: right;">
                    <div style="font-weight: 600; color: #333; font-size: 13px;" id="userName">Patient</div>
                    <div style="font-size: 11px; color: #666;">Patient</div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Progress Section -->
        <div class="progress-section">
            <div class="progress-steps">
                <div class="step active" id="step1">
                    <div class="step-number">1</div>
                    <div class="step-label">Select Date & Doctor</div>
                </div>
                <div class="step-connector"></div>
                <div class="step" id="step2">
                    <div class="step-number">2</div>
                    <div class="step-label">Choose Time & Details</div>
                </div>
                <div class="step-connector"></div>
                <div class="step" id="step3">
                    <div class="step-number">3</div>
                    <div class="step-label">Confirm Booking</div>
                </div>
            </div>
        </div>

        <!-- Toast Messages -->
        <div class="toast" id="toastMessage">
            <i class="fas fa-check-circle"></i>
            <span></span>
        </div>

        <!-- Step 1: Date and Doctor Selection -->
        <div class="step-content active" id="step1Content">
            <!-- Treatment Filter -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-filter"></i>
                    Filter by Treatment (Optional)
                </h3>
                <div class="filter-grid">
                    <div class="form-group">
                        <label for="treatmentFilter">Select Treatment Type:</label>
                        <select id="treatmentFilter" class="form-control">
                            <option value="">All Treatments</option>
                        </select>
                    </div>
                    <div>
                        <button type="button" class="btn btn-primary" onclick="applyTreatmentFilter()">
                            <i class="fas fa-filter"></i> Apply Filter
                        </button>
                    </div>
                </div>
            </div>

            <!-- Calendar -->
            <div class="calendar-section">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    <div>
                        <strong>Booking Policy:</strong> You can book appointments up to 24 hours in advance. 
                        Appointments cannot be booked within 24 hours of the appointment time.
                    </div>
                </div>

                <div class="calendar-header">
                    <button type="button" class="calendar-nav" onclick="changeCalendarMonth(-1)">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="calendar-title" id="calendarTitle">Loading...</div>
                    <button type="button" class="calendar-nav" onclick="changeCalendarMonth(1)">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
                
                <div class="calendar-grid" id="calendarGrid">
                    <div class="weekday">Sun</div>
                    <div class="weekday">Mon</div>
                    <div class="weekday">Tue</div>
                    <div class="weekday">Wed</div>
                    <div class="weekday">Thu</div>
                    <div class="weekday">Fri</div>
                    <div class="weekday">Sat</div>
                </div>
            </div>

            <!-- Available Doctors -->
            <div class="doctors-section" id="doctorsSection" style="display: none;">
                <h3 class="section-title">
                    <i class="fas fa-user-md"></i>
                    Available Doctors for <span id="selectedDateText"></span>
                </h3>
                <div class="doctors-grid" id="doctorsGrid"></div>
            </div>

            <!-- Navigation -->
            <div class="step-navigation">
                <a href="/patient/dashboard" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                </a>
                <button type="button" class="btn btn-primary" onclick="nextStep(2)" id="step1Next" disabled>
                    Next: Choose Time <i class="fas fa-arrow-right"></i>
                </button>
            </div>
        </div>

        <!-- Step 2: Time and Details -->
        <div class="step-content" id="step2Content">
            <!-- Selected Doctor Info -->
            <div class="time-section">
                <div class="selected-doctor-info" id="selectedDoctorInfo">
                    <div class="doctor-avatar" id="selectedDoctorAvatar">D</div>
                    <div class="doctor-details">
                        <h3 id="selectedDoctorName">Dr. Name</h3>
                        <p id="selectedDoctorSpecialty">Specialty</p>
                    </div>
                </div>

                <!-- Date Navigation -->
                <div class="date-selector">
                    <button type="button" class="date-nav" onclick="changeSelectedDate(-1)">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="selected-date" id="selectedDateDisplay">Today</div>
                    <button type="button" class="date-nav" onclick="changeSelectedDate(1)">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>

                <!-- Time Slots -->
                <h4 style="margin-bottom: 15px; color: #333; font-size: 16px; font-weight: 600;">
                    <i class="fas fa-clock" style="color: #4A90E2; margin-right: 8px;"></i>
                    Available Time Slots
                </h4>
                <div class="time-slots-grid" id="timeSlotsGrid">
                    <div class="loading" style="grid-column: 1 / -1;">
                        <div class="loading-spinner"></div>
                        <span>Loading available time slots...</span>
                    </div>
                </div>
            </div>

            <!-- Appointment Details -->
            <div class="appointment-details">
                <h3 class="section-title">
                    <i class="fas fa-clipboard-list"></i>
                    Appointment Details
                </h3>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="treatmentSelect">Treatment: *</label>
                        <select id="treatmentSelect" class="form-control" required>
                            <option value="">Select Treatment</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="symptoms">Symptoms/Additional Details:</label>
                        <textarea id="symptoms" 
                                class="form-control" 
                                rows="4" 
                                placeholder="Please describe your symptoms, concerns, or any additional details..."
                                style="resize: vertical; min-height: 100px;"></textarea>
                    </div>
                </div>
            </div>

            <!-- Navigation -->
            <div class="step-navigation">
                <button type="button" class="btn btn-secondary" onclick="previousStep(1)">
                    <i class="fas fa-arrow-left"></i> Back
                </button>
                <button type="button" class="btn btn-primary" onclick="nextStep(3)" id="step2Next" disabled>
                    Next: Confirm Booking <i class="fas fa-arrow-right"></i>
                </button>
            </div>
        </div>

        <!-- Step 3: Booking Confirmation -->
        <div class="step-content" id="step3Content">
            <div class="confirmation-section">
                <div class="booking-success" id="bookingSuccess">
                    <i class="fas fa-calendar-check"></i>
                    Ready to Book Your Appointment
                </div>

                <div class="booking-details">
                    <h4><i class="fas fa-file-alt"></i> Appointment Summary</h4>
                    <div class="detail-row">
                        <span class="detail-label">Patient Name:</span>
                        <span class="detail-value" id="finalPatientName">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Treatment:</span>
                        <span class="detail-value" id="finalTreatment">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Doctor:</span>
                        <span class="detail-value" id="finalDoctor">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Date:</span>
                        <span class="detail-value" id="finalDate">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Time:</span>
                        <span class="detail-value" id="finalTime">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Notes:</span>
                        <span class="detail-value" id="finalSymptoms">-</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Status:</span>
                        <span class="status-badge status-pending">Pending Confirmation</span>
                    </div>
                </div>

                <div class="step-navigation">
                    <button type="button" class="btn btn-secondary" onclick="previousStep(2)">
                        <i class="fas fa-edit"></i> Edit Details
                    </button>
                    <button type="button" class="btn btn-success" onclick="confirmBooking()">
                        <i class="fas fa-check"></i> Confirm Booking
                    </button>
                </div>

                <!-- Final Actions -->
                <div class="step-navigation" style="margin-top: 30px;">
                    <button type="button" class="btn btn-secondary" onclick="startNewBooking()">
                        <i class="fas fa-plus"></i> Book Another Appointment
                    </button>
                    <a href="/patient/history" class="btn btn-primary">
                        <i class="fas fa-list"></i> View My Appointments
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let currentStep = 1;
        let selectedDoctor = null;
        let selectedDate = null;
        let selectedTime = null;
        let currentCalendarDate = new Date();
        let doctorsData = [];
        let treatmentsData = [];
        let filteredTreatmentId = '';

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            initializePage();
            setupFormValidation();
        });

        async function initializePage() {
            try {
                showToast('Loading appointment booking system...', 'info');
                
                await Promise.all([
                    loadTreatments(),
                    loadUserInfo()
                ]);
                
                generateCalendar();
                showToast('Ready to book your appointment!', 'success');
                
            } catch (error) {
                console.error('Error initializing page:', error);
                showToast('Error loading booking system. Please refresh the page.', 'error');
            }
        }

        async function loadUserInfo() {
            try {
                const patient = {
                    fname: 'Patient',
                    lname: 'User'
                };
                
                if (patient.fname) {
                    document.getElementById('userAvatar').textContent = patient.fname.charAt(0).toUpperCase();
                }
            } catch (error) {
                console.error('Error loading user info:', error);
            }
        }

        async function loadTreatments() {
            try {
                treatmentsData = [
                    { treatment_id: 1, treatment_name: 'Dental Check-up', duration: 30 },
                    { treatment_id: 2, treatment_name: 'Teeth Cleaning', duration: 45 },
                    { treatment_id: 3, treatment_name: 'Tooth Extraction', duration: 60 },
                    { treatment_id: 4, treatment_name: 'Dental Filling', duration: 45 },
                    { treatment_id: 5, treatment_name: 'Teeth Whitening', duration: 90 }
                ];
                populateTreatmentFilter();
                populateTreatmentSelect();
            } catch (error) {
                console.error('Error loading treatments:', error);
            }
        }

        function populateTreatmentFilter() {
            const select = document.getElementById('treatmentFilter');
            select.innerHTML = '<option value="">All Treatments</option>';
            
            treatmentsData.forEach(treatment => {
                const option = document.createElement('option');
                option.value = treatment.treatment_id;
                option.textContent = treatment.treatment_name;
                select.appendChild(option);
            });
        }

        function populateTreatmentSelect() {
            const select = document.getElementById('treatmentSelect');
            select.innerHTML = '<option value="">Select Treatment</option>';
            
            treatmentsData.forEach(treatment => {
                const option = document.createElement('option');
                option.value = treatment.treatment_id;
                option.textContent = `${treatment.treatment_name} (${treatment.duration} min)`;
                select.appendChild(option);
            });
        }

        function changeCalendarMonth(direction) {
            currentCalendarDate.setMonth(currentCalendarDate.getMonth() + direction);
            generateCalendar();
        }

        function generateCalendar() {
            const year = currentCalendarDate.getFullYear();
            const month = currentCalendarDate.getMonth();
            
            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 
                              'July', 'August', 'September', 'October', 'November', 'December'];
            document.getElementById('calendarTitle').textContent = `${monthNames[month]} ${year}`;
            
            const grid = document.getElementById('calendarGrid');
            
            const weekdayHeaders = grid.querySelectorAll('.weekday');
            grid.innerHTML = '';
            weekdayHeaders.forEach(header => grid.appendChild(header));
            
            const firstDay = new Date(year, month, 1);
            const startDate = new Date(firstDay);
            startDate.setDate(startDate.getDate() - firstDay.getDay());
            
            const today = new Date();
            const tomorrow = new Date(today);
            tomorrow.setDate(tomorrow.getDate() + 1);
            
            for (let i = 0; i < 42; i++) {
                const date = new Date(startDate);
                date.setDate(startDate.getDate() + i);
                
                const dayElement = createDayElement(date, month, today, tomorrow);
                grid.appendChild(dayElement);
            }
        }

        function createDayElement(date, currentMonth, today, tomorrow) {
            const day = document.createElement('div');
            day.className = 'calendar-day';
            
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const dayNum = String(date.getDate()).padStart(2, '0');
            const dateString = `${year}-${month}-${dayNum}`;
            
            day.dataset.date = dateString;
            
            const dayOfWeek = date.getDay();
            const compareDate = new Date(date);
            compareDate.setHours(0, 0, 0, 0);
            const todayDate = new Date(today);
            todayDate.setHours(0, 0, 0, 0);
            const tomorrowDate = new Date(tomorrow);
            tomorrowDate.setHours(0, 0, 0, 0);
            
            if (date.getMonth() !== currentMonth) {
                day.classList.add('other-month');
            }
            
            if (compareDate <= tomorrowDate) {
                day.classList.add('past');
                day.style.cursor = 'not-allowed';
            }
            
            if (dayOfWeek === 0) {
                day.classList.add('unavailable');
                day.style.cursor = 'not-allowed';
            }
            
            const dayNumber = document.createElement('div');
            dayNumber.className = 'day-number';
            dayNumber.textContent = date.getDate();
            day.appendChild(dayNumber);
            
            if (compareDate < todayDate) {
                dayNumber.innerHTML += '<br><small style="color: #dc3545; font-size: 10px;">Past</small>';
            } else if (compareDate.getTime() === tomorrowDate.getTime()) {
                dayNumber.innerHTML += '<br><small style="color: #ef4444; font-size: 10px;">Too Soon</small>';
            }
            
            const doctorsContainer = document.createElement('div');
            doctorsContainer.className = 'day-doctors';
            day.appendChild(doctorsContainer);
            
            if (dayOfWeek !== 0 && date.getMonth() === currentMonth && compareDate > tomorrowDate) {
                day.addEventListener('click', () => selectCalendarDate(dateString, day));
                if (Math.random() > 0.3) {
                    const doctorItem = document.createElement('div');
                    doctorItem.className = 'doctor-item';
                    doctorItem.innerHTML = `
                        <div class="doctor-mini-avatar">D</div>
                        <div class="doctor-name-mini">Available</div>
                        <div class="doctor-status"></div>
                    `;
                    doctorsContainer.appendChild(doctorItem);
                }
            }
            
            return day;
        }

        function selectCalendarDate(dateStr, dayElement) {
            const selectedDateObj = new Date(dateStr);
            const now = new Date();
            const timeDiff = selectedDateObj.getTime() - now.getTime();
            const hoursDiff = timeDiff / (1000 * 3600);
            
            if (hoursDiff < 48) {
                showToast('Appointments must be booked at least 48 hours in advance', 'warning');
                return;
            }
            
            document.querySelectorAll('.calendar-day.selected').forEach(day => {
                day.classList.remove('selected');
            });
            
            dayElement.classList.add('selected');
            selectedDate = dateStr;
            
            showAvailableDoctors(dateStr);
        }

        async function showAvailableDoctors(dateStr) {
            const doctorsSection = document.getElementById('doctorsSection');
            const doctorsGrid = document.getElementById('doctorsGrid');
            const dateText = document.getElementById('selectedDateText');
            
            const date = new Date(dateStr);
            dateText.textContent = date.toLocaleDateString('en-US', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            });
            
            doctorsGrid.innerHTML = `
                <div class="loading" style="grid-column: 1 / -1;">
                    <div class="loading-spinner"></div>
                    <span>Loading available doctors...</span>
                </div>
            `;
            
            doctorsSection.style.display = 'block';
            
            setTimeout(() => {
                const mockDoctors = [
                    { dentist_id: 1, fname: 'John', lname: 'Smith', specialty: 'General Dentistry' },
                    { dentist_id: 2, fname: 'Sarah', lname: 'Johnson', specialty: 'Orthodontics' }
                ];
                
                let doctorsHTML = '';
                mockDoctors.forEach(doctor => {
                    doctorsHTML += createDoctorCard(doctor);
                });
                doctorsGrid.innerHTML = doctorsHTML;
                
                doctorsSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }, 1000);
        }

        function createDoctorCard(doctor) {
            const initials = doctor.fname.charAt(0) + doctor.lname.charAt(0);
            
            return `
                <div class="doctor-card" onclick="selectDoctorFromCard(${doctor.dentist_id}, '${doctor.fname}', '${doctor.lname}', '${doctor.specialty}', this)">
                    <div class="doctor-card-header">
                        <div class="doctor-avatar">${initials}</div>
                        <div class="doctor-details">
                            <h5>Dr. ${doctor.fname} ${doctor.lname}</h5>
                            <p>${doctor.specialty}</p>
                        </div>
                    </div>
                    <div class="doctor-treatments">
                        <span class="treatment-tag">General Dentistry</span>
                        <span class="treatment-tag">Consultation</span>
                    </div>
                    <div class="doctor-availability">
                        <strong>Available:</strong><br>
                        <span class="time-slot">5 slots available</span>
                    </div>
                </div>
            `;
        }

        function selectDoctorFromCard(doctorId, fname, lname, specialty, cardElement) {
            document.querySelectorAll('.doctor-card.selected').forEach(card => {
                card.classList.remove('selected');
            });
            
            cardElement.classList.add('selected');
            
            selectedDoctor = {
                id: doctorId,
                name: `${fname} ${lname}`,
                specialty: specialty,
                fname: fname,
                lname: lname
            };
            
            document.getElementById('step1Next').disabled = false;
            showToast(`Dr. ${fname} ${lname} selected`, 'success');
            
            setTimeout(() => {
                document.querySelector('.step-navigation').scrollIntoView({ 
                    behavior: 'smooth', 
                    block: 'end' 
                });
            }, 300);
        }

        function setupFormValidation() {
            const treatmentSelect = document.getElementById('treatmentSelect');
            treatmentSelect.addEventListener('change', validateStep2);
        }

        function validateStep2() {
            const hasTreatment = document.getElementById('treatmentSelect').value !== '';
            const hasTime = selectedTime !== null;
            
            document.getElementById('step2Next').disabled = !(hasTreatment && hasTime);
        }

        function nextStep(step) {
            if (step === 2 && !selectedDoctor) {
                showToast('Please select a doctor first', 'error');
                return;
            }
            
            if (step === 3) {
                const hasTreatment = document.getElementById('treatmentSelect').value;
                const hasTime = selectedTime;
                
                if (!hasTreatment || !hasTime) {
                    showToast('Please fill in all required information', 'error');
                    return;
                }
            }

            currentStep = step;
            updateStepDisplay();
            
            if (step === 2) {
                initializeStep2();
            } else if (step === 3) {
                initializeStep3();
            }
            
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function previousStep(step) {
            currentStep = step;
            updateStepDisplay();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function updateStepDisplay() {
            for (let i = 1; i <= 3; i++) {
                const stepElement = document.getElementById(`step${i}`);
                const contentElement = document.getElementById(`step${i}Content`);
                
                stepElement.classList.remove('active', 'completed');
                contentElement.classList.remove('active');
                
                if (i < currentStep) {
                    stepElement.classList.add('completed');
                } else if (i === currentStep) {
                    stepElement.classList.add('active');
                    contentElement.classList.add('active');
                }
            }
        }

        function initializeStep2() {
            document.getElementById('selectedDoctorName').textContent = `Dr. ${selectedDoctor.name}`;
            document.getElementById('selectedDoctorSpecialty').textContent = selectedDoctor.specialty;
            document.getElementById('selectedDoctorAvatar').textContent = 
                selectedDoctor.fname.charAt(0) + selectedDoctor.lname.charAt(0);
            
            updateSelectedDateDisplay();
            loadTimeSlots();
        }

        function updateSelectedDateDisplay() {
            const date = new Date(selectedDate);
            const options = { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            };
            document.getElementById('selectedDateDisplay').textContent = date.toLocaleDateString('en-US', options);
        }

        function changeSelectedDate(direction) {
            const date = new Date(selectedDate);
            date.setDate(date.getDate() + direction);
            
            const now = new Date();
            const timeDiff = date.getTime() - now.getTime();
            const hoursDiff = timeDiff / (1000 * 3600);
            
            if (hoursDiff < 48) {
                showToast('Cannot select dates within 48 hours', 'warning');
                return;
            }
            
            selectedDate = date.toISOString().split('T')[0];
            updateSelectedDateDisplay();
            loadTimeSlots();
            
            selectedTime = null;
            validateStep2();
        }

        async function loadTimeSlots() {
            const grid = document.getElementById('timeSlotsGrid');
            
            grid.innerHTML = `
                <div class="loading" style="grid-column: 1 / -1;">
                    <div class="loading-spinner"></div>
                    <span>Loading available time slots...</span>
                </div>
            `;

            setTimeout(() => {
                let timeSlots = '';
                for (let hour = 10; hour <= 19; hour++) {
                    const timeStr = `${hour.toString().padStart(2, '0')}:00`;
                    timeSlots += `
                        <div class="time-slot-btn available" 
                             onclick="selectTimeSlot('${timeStr}')"
                             data-time="${timeStr}">
                            <strong>${timeStr}</strong><br>
                            <small>Available</small>
                        </div>
                    `;
                }
                grid.innerHTML = timeSlots;
            }, 800);
        }

        function selectTimeSlot(time) {
            document.querySelectorAll('.time-slot-btn.selected').forEach(btn => {
                btn.classList.remove('selected');
                btn.classList.add('available');
            });
            
            const button = document.querySelector(`[data-time="${time}"]`);
            if (button) {
                button.classList.remove('available');
                button.classList.add('selected');
                selectedTime = time;
                
                validateStep2();
                showToast('Time slot selected', 'success');
            }
        }

        function initializeStep3() {
            const treatmentId = document.getElementById('treatmentSelect').value;
            const symptoms = document.getElementById('symptoms').value;
            
            const selectedTreatment = treatmentsData.find(t => t.treatment_id == treatmentId);
            
            document.getElementById('finalPatientName').textContent = 'Patient User';
            document.getElementById('finalTreatment').textContent = 
                selectedTreatment ? selectedTreatment.treatment_name : 'Unknown';
            document.getElementById('finalDoctor').textContent = `Dr. ${selectedDoctor.name}`;
            document.getElementById('finalDate').textContent = 
                new Date(selectedDate).toLocaleDateString('en-US', { 
                    weekday: 'long', 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                });
            document.getElementById('finalTime').textContent = selectedTime;
            document.getElementById('finalSymptoms').textContent = symptoms || 'None specified';
        }

        async function confirmBooking() {
            const confirmBtn = event.target;
            confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Booking...';
            confirmBtn.disabled = true;
            
            setTimeout(() => {
                showToast('Appointment booked successfully!', 'success');
                
                document.querySelector('.booking-success').innerHTML = `
                    <i class="fas fa-check-circle"></i>
                    Appointment Booked Successfully!
                `;
                document.querySelector('.booking-success').style.background = 
                    'linear-gradient(135deg, #10b981, #059669)';
                
                document.querySelector('.status-pending').textContent = 'Confirmed';
                document.querySelector('.status-pending').className = 'status-badge status-confirmed';
                
                confirmBtn.innerHTML = '<i class="fas fa-check"></i> Booking Confirmed!';
                confirmBtn.className = 'btn btn-success';
            }, 1500);
        }

        function startNewBooking() {
            location.reload();
        }

        function applyTreatmentFilter() {
            filteredTreatmentId = document.getElementById('treatmentFilter').value;
            
            if (filteredTreatmentId) {
                const selectedTreatment = treatmentsData.find(t => t.treatment_id == filteredTreatmentId);
                showToast(`Filtered by: ${selectedTreatment.treatment_name}`, 'info');
            } else {
                showToast('Showing all treatments', 'info');
            }
        }

        function showToast(message, type = 'success') {
            const toast = document.getElementById('toastMessage');
            const icon = toast.querySelector('i');
            
            toast.className = `toast ${type} show`;
            
            switch(type) {
                case 'success':
                    icon.className = 'fas fa-check-circle';
                    break;
                case 'error':
                    icon.className = 'fas fa-exclamation-circle';
                    break;
                case 'warning':
                    icon.className = 'fas fa-exclamation-triangle';
                    break;
                default:
                    icon.className = 'fas fa-info-circle';
            }
            
            toast.querySelector('span').textContent = message;
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 4000);
        }
    </script>
</body>
</html>