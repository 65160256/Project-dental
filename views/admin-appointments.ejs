<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Appointments - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar */
        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        /* Main Content */
        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: relative;
        }

        .search-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .search-section label {
            font-weight: 500;
            color: #555;
            font-size: 14px;
        }

        .search-box {
            background: #f8f9fa;
            border: 1px solid #e1e5e9;
            border-radius: 20px;
            padding: 8px 15px;
            display: flex;
            align-items: center;
            width: 250px;
        }

        .search-box i {
            color: #666;
            margin-right: 8px;
            font-size: 14px;
        }

        .search-box input {
            border: none;
            background: transparent;
            outline: none;
            width: 100%;
            font-size: 13px;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            position: relative;
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: 600;
            display: none;
        }

        .notification-badge.show {
            display: flex;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .notification-dropdown {
            position: absolute;
            top: 100%;
            right: -10px;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            min-width: 380px;
            max-width: 420px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            z-index: 2000;
            display: none;
            max-height: 500px;
            overflow: hidden;
        }

        .notification-dropdown.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .notification-header {
            padding: 20px;
            border-bottom: 1px solid #e1e5e9;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .notification-header h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

        .notification-content {
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-item {
            padding: 15px 20px;
            border-bottom: 1px solid #f1f3f4;
            transition: background 0.2s ease;
            cursor: pointer;
            position: relative;
        }

        .notification-item:hover {
            background: #f8f9fa;
        }

        .notification-item:last-child {
            border-bottom: none;
        }

        .notification-item.unread {
            background: linear-gradient(90deg, rgba(74, 144, 226, 0.05), transparent);
            border-left: 3px solid #4A90E2;
        }

        .notification-item.unread::before {
            content: '';
            position: absolute;
            top: 20px;
            right: 20px;
            width: 8px;
            height: 8px;
            background: #4A90E2;
            border-radius: 50%;
        }

        .notification-text {
            font-size: 14px;
            color: #333;
            line-height: 1.4;
            margin-bottom: 5px;
        }

        .notification-text strong {
            color: #2c3e50;
            font-weight: 600;
        }

        .notification-text .new-tag {
            background: #ff4757;
            color: white;
            padding: 2px 6px;
            border-radius: 10px;
            font-size: 10px;
            font-weight: 600;
            margin-right: 8px;
        }

        .notification-date {
            font-size: 12px;
            color: #666;
            margin-bottom: 8px;
        }

        .notification-actions {
            display: flex;
            gap: 10px;
        }

        .notification-btn {
            padding: 4px 12px;
            border: none;
            border-radius: 15px;
            font-size: 11px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .view-details-btn {
            background: #4A90E2;
            color: white;
        }

        .view-details-btn:hover {
            background: #357abd;
        }

        .mark-read-btn {
            background: #e1e5e9;
            color: #666;
        }

        .mark-read-btn:hover {
            background: #d1d5db;
        }

        .no-notifications {
            padding: 40px 20px;
            text-align: center;
            color: #666;
            font-style: italic;
        }

        .notification-footer {
            padding: 15px 20px;
            border-top: 1px solid #e1e5e9;
            background: #f8f9fa;
            text-align: center;
        }

        .clear-all-btn {
            background: none;
            border: none;
            color: #4A90E2;
            cursor: pointer;
            font-size: 13px;
            text-decoration: underline;
        }

        .clear-all-btn:hover {
            color: #357abd;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            min-width: 160px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .dropdown-menu a {
            display: block;
            padding: 10px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        /* Content */
        .content {
            padding: 0;
        }

        .page-header {
            background: white;
            padding: 20px 30px;
            border-bottom: 1px solid #e1e5e9;
        }

        .page-title {
            font-size: 24px;
            color: #333;
            margin: 0 0 5px 0;
            font-weight: 600;
        }

        .page-subtitle {
            color: #666;
            margin: 0;
            font-size: 13px;
        }

        /* Date Strip */
        .date-strip {
            background: white;
            padding: 15px 30px;
            border-bottom: 1px solid #e1e5e9;
        }

        .calendar-bar {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .arrow-btn {
            background: #f8f9fa;
            border: 1px solid #e1e5e9;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            cursor: pointer;
            font-size: 16px;
            color: #666;
            transition: all 0.2s ease;
        }

        .arrow-btn:hover {
            background: #4A90E2;
            color: white;
            border-color: #4A90E2;
        }

        .calendar-day {
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            padding: 10px;
            text-align: center;
            cursor: pointer;
            font-size: 12px;
            line-height: 1.3;
            color: #666;
            transition: all 0.2s ease;
            min-width: 70px;
        }

        .calendar-day:hover {
            background: #f8f9fa;
            border-color: #4A90E2;
        }

        .calendar-day.active {
            background: #4A90E2;
            color: white;
            border-color: #4A90E2;
        }

        .calendar-day.today {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border-color: #28a745;
        }

        .calendar-day.today.active {
            background: #4A90E2;
        }

        /* Tools Bar */
        .tools-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #e1e5e9;
        }

        .tools-bar span {
            color: #666;
            font-size: 14px;
        }

        .tools-bar span i {
            color: #4A90E2;
            margin-right: 5px;
        }

        .tool-buttons {
            display: flex;
            gap: 10px;
        }

        .btn-light {
            background: #f8f9fa;
            color: #666;
            border: 1px solid #e1e5e9;
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .btn-light:hover {
            background: #e2e6ea;
        }

        .btn-blue {
            background: #4A90E2;
            color: white;
            border: 1px solid #4A90E2;
            padding: 8px 16px;
            border-radius: 6px;
            text-decoration: none;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .btn-blue:hover {
            background: #357abd;
        }

        /* Appointments Table */
        .table-container {
            background: white;
            margin: 0;
            overflow-x: auto;
        }

        .appointments-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 14px;
        }

        .appointments-table th {
            background: #f8f9fa;
            padding: 15px 20px;
            text-align: left;
            font-weight: 600;
            color: #555;
            border-bottom: 1px solid #e1e5e9;
            white-space: nowrap;
        }

        .appointments-table td {
            padding: 15px 20px;
            border-bottom: 1px solid #f1f3f4;
            color: #333;
            vertical-align: middle;
        }

        .appointments-table tr:hover {
            background: #f8f9fa;
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }

        .status-confirm {
            background: #d1f2eb;
            color: #0c5a40;
            border: 1px solid #7dd3fc;
        }

        .status-cancel {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .time-cell {
            font-family: 'Courier New', monospace;
            color: #4A90E2;
            font-weight: 500;
        }

        .patient-name {
            font-weight: 500;
            color: #2c3e50;
        }

        .dentist-name {
            color: #28a745;
            font-weight: 500;
        }

        /* Loading */
        .loading {
            text-align: center;
            padding: 60px;
            color: #666;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 4px solid rgba(74, 144, 226, 0.1);
            border-top: 4px solid #4A90E2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 30px;
            color: #666;
        }

        .empty-state i {
            font-size: 48px;
            color: #ddd;
            margin-bottom: 20px;
        }

        .empty-state h3 {
            margin: 0 0 10px 0;
            color: #999;
        }

        .empty-state p {
            margin: 0;
            color: #aaa;
        }

        /* Toast notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
        }

        .toast.success {
            background: #10b981;
        }

        .toast.error {
            background: #ef4444;
        }

        .toast.info {
            background: #3b82f6;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOutRight {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        /* Modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 3000;
            display: none;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            border-radius: 12px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e1e5e9;
        }

        .modal-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #666;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .close:hover {
            color: #333;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .calendar-bar {
                flex-wrap: wrap;
                gap: 5px;
            }
            
            .calendar-day {
                min-width: 60px;
                padding: 8px;
                font-size: 11px;
            }
            
            .tools-bar {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }
            
            .table-container {
                margin: 0;
            }
            
            .appointments-table {
                font-size: 12px;
            }
            
            .appointments-table th,
            .appointments-table td {
                padding: 10px;
            }
        }

        /* Custom scrollbar */
        .notification-content::-webkit-scrollbar {
            width: 6px;
        }

        .notification-content::-webkit-scrollbar-track {
            background: #f1f3f4;
        }

        .notification-content::-webkit-scrollbar-thumb {
            background: #c1c8cd;
            border-radius: 3px;
        }

        .notification-content::-webkit-scrollbar-thumb:hover {
            background: #a8b0b5;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
            <li class="active"><a href="/admin/appointments"><i class="fas fa-hospital"></i> Appointments</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> Dentists</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> Patients</a></li>
            <li><a href="/admin/treatments"><i class="fas fa-tooth"></i> Treatments</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <div class="search-section">
                <label>Search:</label>
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Patient name, treatment..." id="searchInput" />
                </div>
            </div>
            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon" onclick="toggleNotifications()"></i>
                    <div class="notification-badge" id="notificationBadge">0</div>
                    
                    <div class="notification-dropdown" id="notificationDropdown">
                        <div class="notification-header">
                            <h3>Notifications</h3>
                        </div>
                        <div class="notification-content" id="notificationContent">
                            <!-- Notifications will be loaded here -->
                        </div>
                        <div class="notification-footer">
                            <button class="clear-all-btn" onclick="markAllAsRead()">Mark all as read</button>
                        </div>
                    </div>
                </div>
                
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar">👨‍💼</div>
                        <div class="user-details">
                            <strong>Hello Admin</strong>
                            <small>administrator</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/admin/profile">My Profile</a>
                        <hr />
                        <a href="/logout">Log Out</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="content">
            <!-- Page Header -->
            <div class="page-header">
                <h1 class="page-title">Appointments</h1>
                <p class="page-subtitle">Manage and view all patient appointments</p>
            </div>

            <!-- Date Strip -->
            <div class="date-strip">
                <div class="calendar-bar" id="calendarBar">
                    <button id="prevWeek" class="arrow-btn">❮</button>
                    <div id="dateButtons">
                        <!-- Date buttons will be generated here -->
                    </div>
                    <button id="nextWeek" class="arrow-btn">❯</button>
                </div>
            </div>

            <!-- Tools Bar -->
            <div class="tools-bar">
                <span><i class="fas fa-users"></i> <span id="appointmentCount">0</span> total appointments</span>
                <div class="tool-buttons">
                    <button class="btn-light" onclick="toggleFilters()">
                        <i class="fas fa-filter"></i> Filters
                    </button>
                    <a href="/admin/appointments/add" class="btn-blue">
                        <i class="fas fa-plus"></i> Add Appointment
                    </a>
                </div>
            </div>

            <!-- Loading -->
            <div class="loading" id="loading" style="display: none;">
                <div class="loading-spinner"></div>
                <p>Loading appointments...</p>
            </div>

            <!-- Appointments Table -->
            <div class="table-container">
                <table class="appointments-table">
                    <thead>
                        <tr>
                            <th>Time</th>
                            <th>Patient Name</th>
                            <th>Treatment</th>
                            <th>Dentist</th>
                            <th>Phone</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="appointmentTableBody">
                        <!-- Appointments will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Notification Detail Modal -->
    <div id="notificationModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="modalTitle">Notification Details</h3>
                <button class="close" onclick="closeNotificationModal()">&times;</button>
            </div>
            <div id="modalBody">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let weekOffset = 0;
        let selectedDate = new Date().toISOString().split('T')[0];
        let notificationData = [];
        let appointmentsData = [];
        let notificationDropdownOpen = false;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            generateDateButtons();
            loadAppointments();
            loadNotifications();
            
            // Bind events
            document.getElementById('prevWeek').addEventListener('click', () => {
                weekOffset--;
                generateDateButtons();
                loadAppointments();
            });

            document.getElementById('nextWeek').addEventListener('click', () => {
                weekOffset++;
                generateDateButtons();
                loadAppointments();
            });

            // Search functionality
            document.getElementById('searchInput').addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();
                filterAppointments(searchTerm);
            });

            // Auto-refresh every minute
            setInterval(() => {
                loadNotifications();
                loadAppointments();
            }, 60000);
        });

        // Generate date buttons for calendar bar
        function generateDateButtons() {
            const container = document.getElementById('dateButtons');
            const today = new Date();
            const buttons = [];
            
            for (let i = 0; i < 7; i++) {
                const date = new Date();
                date.setDate(today.getDate() + weekOffset * 7 + i);
                const iso = date.toISOString().split('T')[0];
                const isToday = date.toDateString() === today.toDateString();
                const isSelected = selectedDate === iso;
                
                const button = document.createElement('button');
                button.className = `calendar-day ${isSelected ? 'active' : ''} ${isToday ? 'today' : ''}`;
                button.dataset.date = iso;
                button.innerHTML = `
                    ${date.toLocaleDateString('en-US', { weekday: 'short' })}<br>
                    ${date.getDate()}
                `;
                
                button.addEventListener('click', () => {
                    document.querySelectorAll('.calendar-day').forEach(b => b.classList.remove('active'));
                    button.classList.add('active');
                    selectedDate = iso;
                    loadAppointments();
                });
                
                buttons.push(button);
            }
            
            container.innerHTML = '';
            buttons.forEach(btn => container.appendChild(btn));
        }

        // Load appointments from database
        async function loadAppointments() {
            try {
                document.getElementById('loading').style.display = 'block';
                
                const response = await fetch(`/admin/api/appointments?date=${selectedDate}`);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.success) {
                    appointmentsData = data.appointments;
                    renderAppointments(appointmentsData);
                    updateAppointmentCount(appointmentsData.length);
                } else {
                    throw new Error(data.error || 'Failed to load appointments');
                }
            } catch (error) {
                console.error('Error loading appointments:', error);
                showToast('Failed to load appointments: ' + error.message, 'error');
                renderEmptyState('Failed to load appointments');
            } finally {
                document.getElementById('loading').style.display = 'none';
            }
        }

        // Render appointments table
        function renderAppointments(appointments) {
            const tbody = document.getElementById('appointmentTableBody');
            
            if (appointments.length === 0) {
                renderEmptyState('No appointments found for this date');
                return;
            }
            
            tbody.innerHTML = appointments.map(appointment => `
                <tr>
                    <td class="time-cell">${formatDateTime(appointment.time)}</td>
                    <td class="patient-name">${appointment.patient_name || 'N/A'}</td>
                    <td>${appointment.treatment_name || 'N/A'}</td>
                    <td class="dentist-name">Dr. ${appointment.dentist_name || 'N/A'}</td>
                    <td>${appointment.phone || 'N/A'}</td>
                    <td>
                        <span class="status-badge status-${appointment.queue_status}">
                            ${appointment.queue_status}
                        </span>
                    </td>
                    <td>
                        <button class="btn-light" onclick="viewAppointment(${appointment.queue_id})" style="padding: 4px 8px; font-size: 12px;">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn-light" onclick="editAppointment(${appointment.queue_id})" style="padding: 4px 8px; font-size: 12px; margin-left: 5px;">
                            <i class="fas fa-edit"></i>
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // Render empty state
        function renderEmptyState(message) {
            const tbody = document.getElementById('appointmentTableBody');
            tbody.innerHTML = `
                <tr>
                    <td colspan="7" class="empty-state">
                        <i class="fas fa-calendar-times"></i>
                        <h3>${message}</h3>
                        <p>Try selecting a different date or check your search filters</p>
                    </td>
                </tr>
            `;
        }

        // Format date time for display
        function formatDateTime(dateTime) {
            if (!dateTime) return 'N/A';
            
            const date = new Date(dateTime);
            return date.toLocaleString('en-GB', {
                day: '2-digit',
                month: 'short',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                hour12: false,
                timeZone: 'Asia/Bangkok'
            });
        }

        // Update appointment count
        function updateAppointmentCount(count) {
            document.getElementById('appointmentCount').textContent = count;
        }

        // Filter appointments based on search
        function filterAppointments(searchTerm) {
            if (!searchTerm) {
                renderAppointments(appointmentsData);
                updateAppointmentCount(appointmentsData.length);
                return;
            }
            
            const filtered = appointmentsData.filter(appointment => 
                (appointment.patient_name && appointment.patient_name.toLowerCase().includes(searchTerm)) ||
                (appointment.treatment_name && appointment.treatment_name.toLowerCase().includes(searchTerm)) ||
                (appointment.dentist_name && appointment.dentist_name.toLowerCase().includes(searchTerm)) ||
                (appointment.phone && appointment.phone.includes(searchTerm))
            );
            
            renderAppointments(filtered);
            updateAppointmentCount(filtered.length);
        }

        // View appointment details
        function viewAppointment(queueId) {
            // Implement appointment detail view
            showToast('View appointment details - Feature coming soon!', 'info');
        }

        // Edit appointment
        function editAppointment(queueId) {
            // Implement appointment editing
            showToast('Edit appointment - Feature coming soon!', 'info');
        }

        // Toggle filters
        function toggleFilters() {
            showToast('Filters panel - Feature coming soon!', 'info');
        }

        // Load notifications from database (same as dashboard)
        async function loadNotifications() {
            try {
                const response = await fetch('/admin/api/notifications');
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        notificationData = data.notifications;
                    }
                } else {
                    // Create sample notifications as fallback
                    await createSampleNotifications();
                }
                
                renderNotifications();
                updateNotificationBadge();
            } catch (error) {
                console.error('Error loading notifications:', error);
                await createSampleNotifications();
                renderNotifications();
                updateNotificationBadge();
            }
        }

        // Create sample notifications
        async function createSampleNotifications() {
            notificationData = [
                {
                    id: 'apt_1',
                    type: 'appointment',
                    title: 'New Appointment Request',
                    message: 'Appointment from: Mr. Somchai Wongdee',
                    date: 'Today at 2:00 PM',
                    isRead: false,
                    isNew: true,
                    timestamp: new Date()
                },
                {
                    id: 'apt_2',
                    type: 'appointment',
                    title: 'Appointment Confirmation',
                    message: 'Mr. Nithipol Pronpa confirmed appointment',
                    date: 'Today at 1:30 PM',
                    isRead: false,
                    isNew: false,
                    timestamp: new Date(Date.now() - 1800000)
                },
                {
                    id: 'apt_3',
                    type: 'cancellation',
                    title: 'Appointment Cancelled',
                    message: 'Ms. Sarah Johnson cancelled appointment',
                    date: 'Today at 12:15 PM',
                    isRead: true,
                    isNew: false,
                    timestamp: new Date(Date.now() - 6900000)
                }
            ];
        }

        // Render notifications dropdown
        function renderNotifications() {
            const notificationContent = document.getElementById('notificationContent');
            
            if (notificationData.length === 0) {
                notificationContent.innerHTML = `
                    <div class="no-notifications">
                        <i class="fas fa-bell-slash" style="font-size: 24px; margin-bottom: 10px; color: #ccc;"></i>
                        <p>No notifications</p>
                    </div>
                `;
                return;
            }

            const sortedNotifications = notificationData.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
            
            notificationContent.innerHTML = sortedNotifications.map(notification => `
                <div class="notification-item ${!notification.isRead ? 'unread' : ''}" data-id="${notification.id}">
                    <div class="notification-text">
                        ${notification.isNew ? '<span class="new-tag">New</span>' : ''}
                        <strong>${notification.title}:</strong> ${notification.message}
                    </div>
                    <div class="notification-date">${notification.date}</div>
                    <div class="notification-actions">
                        <button class="notification-btn view-details-btn" onclick="viewNotificationDetails('${notification.id}')">
                            View Details
                        </button>
                        ${!notification.isRead ? `
                            <button class="notification-btn mark-read-btn" onclick="markAsRead('${notification.id}')">
                                Mark as read
                            </button>
                        ` : ''}
                    </div>
                </div>
            `).join('');
        }

        // Update notification badge
        function updateNotificationBadge() {
            const unreadCount = notificationData.filter(n => !n.isRead).length;
            const badge = document.getElementById('notificationBadge');
            
            if (unreadCount > 0) {
                badge.textContent = unreadCount > 99 ? '99+' : unreadCount;
                badge.classList.add('show');
            } else {
                badge.classList.remove('show');
            }
        }

        // Toggle notifications dropdown
        function toggleNotifications() {
            const dropdown = document.getElementById('notificationDropdown');
            notificationDropdownOpen = !notificationDropdownOpen;
            
            if (notificationDropdownOpen) {
                dropdown.classList.add('show');
                loadNotifications();
            } else {
                dropdown.classList.remove('show');
            }
        }

        // View notification details
        function viewNotificationDetails(id) {
            const notification = notificationData.find(n => n.id == id);
            if (notification) {
                notification.isRead = true;
                notification.isNew = false;
                
                showNotificationModal(notification);
                renderNotifications();
                updateNotificationBadge();
            }
        }

        // Show notification modal
        function showNotificationModal(notification) {
            const modal = document.getElementById('notificationModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalBody = document.getElementById('modalBody');
            
            modalTitle.textContent = notification.title;
            modalBody.innerHTML = `
                <div style="margin-bottom: 20px;">
                    <p style="margin: 0 0 10px 0; color: #333; line-height: 1.5;"><strong>Message:</strong> ${notification.message}</p>
                    <p style="margin: 0 0 10px 0; color: #666; font-size: 13px;">
                        <i class="fas fa-clock"></i> ${notification.date}
                    </p>
                    <p style="margin: 0; color: #666; font-size: 13px;">
                        <i class="fas fa-tag"></i> Type: ${notification.type}
                    </p>
                </div>
                <div style="text-align: right;">
                    <button onclick="closeNotificationModal()" style="
                        background: #4A90E2;
                        color: white;
                        border: none;
                        padding: 10px 20px;
                        border-radius: 6px;
                        cursor: pointer;
                        font-size: 14px;
                    ">Close</button>
                </div>
            `;
            
            modal.style.display = 'flex';
        }

        // Close notification modal
        function closeNotificationModal() {
            const modal = document.getElementById('notificationModal');
            modal.style.display = 'none';
        }

        // Mark notification as read
        function markAsRead(id) {
            const notification = notificationData.find(n => n.id == id);
            if (notification) {
                notification.isRead = true;
                notification.isNew = false;
                
                renderNotifications();
                updateNotificationBadge();
                showToast('Notification marked as read', 'success');
            }
        }

        // Mark all notifications as read
        function markAllAsRead() {
            const unreadCount = notificationData.filter(n => !n.isRead).length;
            
            if (unreadCount === 0) {
                showToast('No unread notifications', 'info');
                return;
            }
            
            notificationData.forEach(n => {
                n.isRead = true;
                n.isNew = false;
            });
            
            renderNotifications();
            updateNotificationBadge();
            showToast(`${unreadCount} notifications marked as read`, 'success');
        }

        // Profile dropdown toggle
        function toggleDropdown() {
            const menu = document.getElementById('profileDropdown');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        // Show toast notification
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.remove();
                    }
                }, 300);
            }, 3000);
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            // Close profile dropdown
            const profileDropdown = document.querySelector('.profile-dropdown');
            if (!profileDropdown.contains(event.target)) {
                document.getElementById('profileDropdown').style.display = 'none';
            }
            
            // Close notification dropdown
            const notificationContainer = document.querySelector('.notification-container');
            if (!notificationContainer.contains(event.target)) {
                document.getElementById('notificationDropdown').classList.remove('show');
                notificationDropdownOpen = false;
            }
            
            // Close modal when clicking outside
            const modal = document.getElementById('notificationModal');
            if (event.target === modal) {
                closeNotificationModal();
            }
        });

        // Auto-refresh on window focus
        window.addEventListener('focus', () => {
            loadNotifications();
            loadAppointments();
        });
    </script>
</body>
</html>