<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book an Appointment - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
            overflow-x: hidden;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 200px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            position: fixed;
            height: 100vh;
            z-index: 1000;
            box-shadow: 4px 0 15px rgba(0,0,0,0.1);
        }

        .sidebar .logo {
            text-align: center;
            padding: 25px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            background: rgba(255,255,255,0.2);
            padding: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            font-size: 28px;
            color: white;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 20px 0;
        }

        .sidebar ul li {
            margin: 3px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 15px 25px;
            color: rgba(255,255,255,0.85);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 12px;
            border-radius: 0 25px 25px 0;
            margin-right: 15px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background: rgba(255,255,255,0.15);
            color: white;
            transform: translateX(5px);
        }

        /* Main Content */
        .main-content {
            margin-left: 200px;
            flex: 1;
            background: white;
            min-height: 100vh;
        }

        /* Header */
        .header {
            background: white;
            padding: 20px 30px;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .header h1 {
            font-size: 24px;
            color: #333;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
        }

        /* Booking Section */
        .booking-section {
            display: flex;
            padding: 30px;
            gap: 30px;
        }

        /* Left Panel - Form */
        .form-panel {
            flex: 1;
            max-width: 400px;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #666;
            border: 2px solid #e9ecef;
            padding: 12px 30px;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-bottom: 10px;
        }

        .btn-secondary:hover {
            background: #e9ecef;
            transform: translateY(-1px);
        }

        /* Right Panel - Calendar */
        .calendar-panel {
            flex: 1;
            max-width: 600px;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 0 10px;
        }

        .calendar-nav {
            background: none;
            border: none;
            color: #667eea;
            font-size: 18px;
            cursor: pointer;
            padding: 8px 12px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .calendar-nav:hover {
            background: rgba(102, 126, 234, 0.1);
        }

        .calendar-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .time-slots-container {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            padding: 20px;
            min-height: 400px;
        }

        .time-slot {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            border-bottom: 1px solid #f1f3f4;
            font-size: 14px;
            color: #666;
            position: relative;
        }

        .time-slot:last-child {
            border-bottom: none;
        }

        .time-label {
            width: 60px;
            font-weight: 500;
        }

        .appointment-block {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 12px;
            font-weight: 600;
            margin-left: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .appointment-block:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .appointment-block.available {
            background: linear-gradient(135deg, #00b894 0%, #00a085 100%);
        }

        .appointment-block.selected {
            background: linear-gradient(135deg, #fdcb6e 0%, #e17055 100%);
            transform: scale(1.02);
        }

        .appointment-block.unavailable {
            background: #ddd;
            color: #666;
            cursor: not-allowed;
        }

        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 60px;
            color: #666;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 3px solid #e9ecef;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .alert {
            padding: 15px 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            display: none;
            align-items: center;
            gap: 10px;
            font-weight: 500;
        }

        .alert.success {
            background: linear-gradient(135deg, #d1f2eb, #a3e9d0);
            color: #0c5a40;
            border-left: 4px solid #00b894;
        }

        .alert.error {
            background: linear-gradient(135deg, #f8d7da, #f1aeb5);
            color: #721c24;
            border-left: 4px solid #dc3545;
        }

        .alert.info {
            background: linear-gradient(135deg, #cce5ff, #99d6ff);
            color: #004085;
            border-left: 4px solid #007bff;
        }

        .selected-info {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
            border-left: 4px solid #667eea;
        }

        .selected-info h4 {
            margin: 0 0 10px 0;
            color: #333;
            font-size: 16px;
        }

        .selected-info p {
            margin: 5px 0;
            color: #666;
            font-size: 14px;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 60px;
            }
            
            .sidebar .logo h3,
            .sidebar ul li a span {
                display: none;
            }
            
            .main-content {
                margin-left: 60px;
            }

            .booking-section {
                flex-direction: column;
                padding: 20px;
            }

            .form-panel, .calendar-panel {
                max-width: none;
            }
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            border-radius: 10px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            min-width: 300px;
        }

        .toast.success {
            background: linear-gradient(135deg, #00b894, #00a085);
        }

        .toast.error {
            background: linear-gradient(135deg, #e17055, #d63031);
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
                <div class="logo-icon">🦷</div>
                <h3>Smile Clinic</h3>
            </div>
            <ul>
                <li><a href="/admin/dashboard"><i class="fas fa-calendar-alt"></i> <span>Schedule</span></a></li>
                <li class="active"><a href="/admin/appointments"><i class="fas fa-hospital"></i> <span>Appointments</span></a></li>
                <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> <span>Dentists</span></a></li>
                <li><a href="/admin/patients"><i class="fas fa-users"></i> <span>Patients</span></a></li>
                <li><a href="/admin/treatments"><i class="fas fa-tooth"></i> <span>Treatments</span></a></li>
            </ul>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header">
                <h1><i class="fas fa-plus-circle"></i> Book an appointment</h1>
                <div class="user-info">
                    <div class="user-avatar" id="userAvatar">A</div>
                    <span id="userName">Hub Admin</span>
                </div>
            </div>

            <!-- Alert Messages -->
            <div style="padding: 0 30px; padding-top: 20px;">
                <div class="alert" id="alertMessage">
                    <i class="fas fa-check-circle"></i>
                    <span></span>
                </div>
            </div>

            <!-- Booking Section -->
            <div class="booking-section">
                <!-- Form Panel -->
                <div class="form-panel">
                    <form id="appointmentForm">
                        <div class="form-group">
                            <label for="patientSelect">Patient</label>
                            <select id="patientSelect" name="patient_id" class="form-control" required>
                                <option value="">Select Patient</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="dentistSelect">Dentist</label>
                            <select id="dentistSelect" name="dentist_id" class="form-control" required>
                                <option value="">Select Dentist</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="treatmentSelect">Treatment</label>
                            <select id="treatmentSelect" name="treatment_id" class="form-control" required>
                                <option value="">Select Treatment</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="appointmentDate">Date</label>
                            <input type="date" id="appointmentDate" name="appointment_date" class="form-control" required>
                        </div>

                        <div class="form-group">
                            <label for="notes">Notes (Optional)</label>
                            <textarea id="notes" name="notes" class="form-control" rows="3" placeholder="Additional notes or comments..."></textarea>
                        </div>

                        <!-- Selected Appointment Info -->
                        <div id="selectedInfo" class="selected-info" style="display: none;">
                            <h4>Selected Appointment</h4>
                            <p><strong>Date:</strong> <span id="selectedDate">-</span></p>
                            <p><strong>Time:</strong> <span id="selectedTime">-</span></p>
                            <p><strong>Dentist:</strong> <span id="selectedDentist">-</span></p>
                            <p><strong>Treatment:</strong> <span id="selectedTreatment">-</span></p>
                        </div>

                        <button type="button" class="btn-secondary" onclick="clearForm()">
                            <i class="fas fa-undo"></i> Clear Form
                        </button>

                        <button type="submit" class="btn-primary" id="submitBtn">
                            <i class="fas fa-calendar-plus"></i> Book Appointment
                        </button>
                    </form>
                </div>

                <!-- Calendar Panel -->
                <div class="calendar-panel">
                    <div class="calendar-header">
                        <button type="button" class="calendar-nav" onclick="changeDate(-1)">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <div class="calendar-title" id="calendarTitle">April 4, 2025</div>
                        <button type="button" class="calendar-nav" onclick="changeDate(1)">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>

                    <div class="time-slots-container" id="timeSlotsContainer">
                        <div class="loading">
                            <div class="loading-spinner"></div>
                            <span>Select a date and dentist to view available time slots</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let selectedDate = new Date().toISOString().split('T')[0];
        let selectedTimeSlot = null;
        let selectedDentistId = null;
        let patientsData = [];
        let dentistsData = [];
        let treatmentsData = [];
        let availableSlots = [];

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            initializePage();
            setupEventListeners();
        });

        // Initialize page data
        async function initializePage() {
            try {
                // Set minimum date to today
                document.getElementById('appointmentDate').min = new Date().toISOString().split('T')[0];
                document.getElementById('appointmentDate').value = selectedDate;
                
                // Load data
                await Promise.all([
                    loadPatients(),
                    loadDentists(),
                    loadTreatments()
                ]);
                
                updateCalendarTitle();
                
            } catch (error) {
                console.error('Error initializing page:', error);
                showAlert('Error loading data. Please refresh the page.', 'error');
            }
        }

        // Setup event listeners
        function setupEventListeners() {
            // Form submission
            document.getElementById('appointmentForm').addEventListener('submit', handleFormSubmit);
            
            // Date change
            document.getElementById('appointmentDate').addEventListener('change', function() {
                selectedDate = this.value;
                updateCalendarTitle();
                loadTimeSlots();
            });
            
            // Dentist change
            document.getElementById('dentistSelect').addEventListener('change', function() {
                selectedDentistId = this.value;
                loadTimeSlots();
                updateSelectedInfo();
            });
            
            // Treatment change
            document.getElementById('treatmentSelect').addEventListener('change', updateSelectedInfo);
        }

        // Load patients from database
        async function loadPatients() {
            try {
                const response = await fetch('/admin/api/patients');
                const data = await response.json();
                
                if (data.success) {
                    patientsData = data.patients;
                    populatePatientSelect();
                } else {
                    throw new Error('Failed to load patients');
                }
            } catch (error) {
                console.error('Error loading patients:', error);
                showAlert('Failed to load patients', 'error');
            }
        }

        // Load dentists from database
        async function loadDentists() {
            try {
                const response = await fetch('/admin/api/dentists');
                const data = await response.json();
                
                if (data.success) {
                    dentistsData = data.dentists;
                    populateDentistSelect();
                } else {
                    throw new Error('Failed to load dentists');
                }
            } catch (error) {
                console.error('Error loading dentists:', error);
                showAlert('Failed to load dentists', 'error');
            }
        }

        // Load treatments from database
        async function loadTreatments() {
            try {
                const response = await fetch('/admin/api/treatments');
                const data = await response.json();
                
                if (data.success) {
                    treatmentsData = data.treatments;
                    populateTreatmentSelect();
                } else {
                    throw new Error('Failed to load treatments');
                }
            } catch (error) {
                console.error('Error loading treatments:', error);
                showAlert('Failed to load treatments', 'error');
            }
        }

        // Populate patient select
        function populatePatientSelect() {
            const select = document.getElementById('patientSelect');
            select.innerHTML = '<option value="">Select Patient</option>';
            
            patientsData.forEach(patient => {
                const option = document.createElement('option');
                option.value = patient.patient_id;
                option.textContent = `${patient.fname} ${patient.lname} - ${patient.phone}`;
                select.appendChild(option);
            });
        }

        // Populate dentist select
        function populateDentistSelect() {
            const select = document.getElementById('dentistSelect');
            select.innerHTML = '<option value="">Select Dentist</option>';
            
            dentistsData.forEach(dentist => {
                const option = document.createElement('option');
                option.value = dentist.dentist_id;
                option.textContent = `Dr. ${dentist.fname} ${dentist.lname} - ${dentist.specialty}`;
                select.appendChild(option);
            });
        }

        // Populate treatment select
        function populateTreatmentSelect() {
            const select = document.getElementById('treatmentSelect');
            select.innerHTML = '<option value="">Select Treatment</option>';
            
            treatmentsData.forEach(treatment => {
                const option = document.createElement('option');
                option.value = treatment.treatment_id;
                option.textContent = `${treatment.treatment_name} (${treatment.duration} min)`;
                select.appendChild(option);
            });
        }

        // Load time slots
        async function loadTimeSlots() {
            if (!selectedDate || !selectedDentistId) {
                showDefaultMessage();
                return;
            }

            const container = document.getElementById('timeSlotsContainer');
            container.innerHTML = `
                <div class="loading">
                    <div class="loading-spinner"></div>
                    <span>Loading available time slots...</span>
                </div>
            `;

            try {
                const response = await fetch(`/admin/api/dentists/${selectedDentistId}/schedule?date=${selectedDate}`);
                
                if (response.ok) {
                    const data = await response.json();
                    renderTimeSlots(data.timeSlots || []);
                } else {
                    renderDefaultTimeSlots();
                }
            } catch (error) {
                console.error('Error loading time slots:', error);
                renderDefaultTimeSlots();
            }
        }

        // Render time slots
        function renderTimeSlots(timeSlots) {
            const container = document.getElementById('timeSlotsContainer');
            
            if (timeSlots.length === 0) {
                renderDefaultTimeSlots();
                return;
            }

            availableSlots = timeSlots;
            let slotsHTML = '';

            // Group by hour
            const hourlySlots = {};
            timeSlots.forEach(slot => {
                const hour = parseInt(slot.time.split(':')[0]);
                if (!hourlySlots[hour]) {
                    hourlySlots[hour] = [];
                }
                hourlySlots[hour].push(slot);
            });

            // Generate HTML for each hour from 10am to 8pm
            for (let hour = 10; hour <= 20; hour++) {
                const timeLabel = formatHour(hour);
                const slots = hourlySlots[hour] || [];
                
                slotsHTML += `<div class="time-slot">
                    <div class="time-label">${timeLabel}</div>`;
                
                if (slots.length > 0) {
                    slots.forEach(slot => {
                        const isAvailable = slot.available;
                        const isSelected = selectedTimeSlot && selectedTimeSlot.time === slot.time;
                        const statusClass = isSelected ? 'selected' : (isAvailable ? 'available' : 'unavailable');
                        
                        slotsHTML += `
                            <div class="appointment-block ${statusClass}" 
                                 onclick="${isAvailable ? `selectTimeSlot('${slot.time}')` : ''}"
                                 data-time="${slot.time}">
                                ${isAvailable ? 'Available' : 'Booked'}
                            </div>
                        `;
                    });
                }
                
                slotsHTML += '</div>';
            }

            container.innerHTML = slotsHTML;
        }

        // Render default time slots
        function renderDefaultTimeSlots() {
            const container = document.getElementById('timeSlotsContainer');
            let slotsHTML = '';

            for (let hour = 10; hour <= 20; hour++) {
                const timeLabel = formatHour(hour);
                const timeValue = `${hour.toString().padStart(2, '0')}:00`;
                
                slotsHTML += `
                    <div class="time-slot">
                        <div class="time-label">${timeLabel}</div>
                        <div class="appointment-block available" 
                             onclick="selectTimeSlot('${timeValue}')"
                             data-time="${timeValue}">
                            Available
                        </div>
                    </div>
                `;
            }

            container.innerHTML = slotsHTML;
        }

        // Show default message
        function showDefaultMessage() {
            const container = document.getElementById('timeSlotsContainer');
            container.innerHTML = `
                <div class="loading">
                    <i class="fas fa-info-circle" style="font-size: 24px; color: #667eea; margin-right: 15px;"></i>
                    <span>Select a date and dentist to view available time slots</span>
                </div>
            `;
        }

        // Format hour for display
        function formatHour(hour) {
            if (hour === 12) return '12pm';
            if (hour > 12) return `${hour - 12}pm`;
            return `${hour}am`;
        }

        // Select time slot
        function selectTimeSlot(time) {
            // Remove previous selection
            document.querySelectorAll('.appointment-block.selected').forEach(block => {
                block.classList.remove('selected');
                if (block.classList.contains('available')) {
                    block.classList.add('available');
                }
            });

            // Add selection to clicked slot
            const clickedSlot = document.querySelector(`[data-time="${time}"]`);
            if (clickedSlot && !clickedSlot.classList.contains('unavailable')) {
                clickedSlot.classList.add('selected');
                clickedSlot.classList.remove('available');
                
                selectedTimeSlot = { time: time };
                updateSelectedInfo();
                showAlert('Time slot selected', 'success');
            }
        }

        // Update selected appointment info
        function updateSelectedInfo() {
            const infoDiv = document.getElementById('selectedInfo');
            const dateSpan = document.getElementById('selectedDate');
            const timeSpan = document.getElementById('selectedTime');
            const dentistSpan = document.getElementById('selectedDentist');
            const treatmentSpan = document.getElementById('selectedTreatment');

            if (selectedDate && selectedTimeSlot && selectedDentistId) {
                const selectedDentist = dentistsData.find(d => d.dentist_id == selectedDentistId);
                const selectedTreatment = treatmentsData.find(t => t.treatment_id == document.getElementById('treatmentSelect').value);

                dateSpan.textContent = new Date(selectedDate).toLocaleDateString('en-US', { 
                    weekday: 'long', 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                });
                timeSpan.textContent = selectedTimeSlot.time;
                dentistSpan.textContent = selectedDentist ? `Dr. ${selectedDentist.fname} ${selectedDentist.lname}` : '-';
                treatmentSpan.textContent = selectedTreatment ? selectedTreatment.treatment_name : '-';

                infoDiv.style.display = 'block';
            } else {
                infoDiv.style.display = 'none';
            }
        }

        // Change date
        function changeDate(direction) {
            const currentDate = new Date(selectedDate);
            currentDate.setDate(currentDate.getDate() + direction);
            
            selectedDate = currentDate.toISOString().split('T')[0];
            document.getElementById('appointmentDate').value = selectedDate;
            
            updateCalendarTitle();
            loadTimeSlots();
        }

        // Update calendar title
        function updateCalendarTitle() {
            const date = new Date(selectedDate);
            const title = date.toLocaleDateString('en-US', { 
                weekday: 'long',
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            });
            document.getElementById('calendarTitle').textContent = title;
        }

        // Handle form submission
        async function handleFormSubmit(event) {
            event.preventDefault();
            
            const submitBtn = document.getElementById('submitBtn');
            const originalContent = submitBtn.innerHTML;
            
            // Validate selection
            if (!selectedTimeSlot) {
                showAlert('Please select a time slot', 'error');
                return;
            }

            // Disable button and show loading
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Booking...';

            try {
                const formData = new FormData(event.target);
                
                const appointmentData = {
                    patient_id: formData.get('patient_id'),
                    dentist_id: formData.get('dentist_id'),
                    treatment_id: formData.get('treatment_id'),
                    appointment_time: `${selectedDate}T${selectedTimeSlot.time}:00`,
                    notes: formData.get('notes') || ''
                };

                // Validate required fields
                if (!appointmentData.patient_id || !appointmentData.dentist_id || !appointmentData.treatment_id) {
                    throw new Error('Please fill in all required fields');
                }

                const response = await fetch('/admin/api/appointments', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(appointmentData)
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    showAlert('Appointment booked successfully!', 'success');
                    
                    // Clear form after success
                    setTimeout(() => {
                        clearForm();
                        // Optionally redirect to appointments list
                        window.location.href = '/admin/appointments';
                    }, 2000);
                } else {
                    throw new Error(result.error || 'Failed to book appointment');
                }

            } catch (error) {
                console.error('Error booking appointment:', error);
                showAlert(error.message, 'error');
            } finally {
                // Restore button
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalContent;
            }
        }

        // Clear form
        function clearForm() {
            document.getElementById('appointmentForm').reset();
            selectedTimeSlot = null;
            selectedDentistId = null;
            
            // Reset date to today
            selectedDate = new Date().toISOString().split('T')[0];
            document.getElementById('appointmentDate').value = selectedDate;
            
            // Hide selected info
            document.getElementById('selectedInfo').style.display = 'none';
            
            // Clear time slots
            showDefaultMessage();
            
            // Update calendar
            updateCalendarTitle();
            
            showAlert('Form cleared', 'info');
        }

        // Show alert message
        function showAlert(message, type = 'info') {
            // Remove existing toasts
            document.querySelectorAll('.toast').forEach(toast => toast.remove());
            
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.innerHTML = `
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                    <span>${message}</span>
                </div>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => {
                        if (toast.parentNode) {
                            toast.remove();
                        }
                    }, 300);
                }
            }, 4000);
        }

        // Load user info
        async function loadUserInfo() {
            try {
                const response = await fetch('/admin/api/user/current');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        document.getElementById('userName').textContent = data.email.split('@')[0];
                        document.getElementById('userAvatar').textContent = data.email.charAt(0).toUpperCase();
                    }
                }
            } catch (error) {
                console.error('Error loading user info:', error);
            }
        }

        // Call loadUserInfo when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadUserInfo();
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Escape to clear form
            if (e.key === 'Escape') {
                clearForm();
            }
            
            // Ctrl+S to submit (if form is valid)
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                if (selectedTimeSlot && document.getElementById('patientSelect').value && 
                    document.getElementById('dentistSelect').value && document.getElementById('treatmentSelect').value) {
                    document.getElementById('appointmentForm').dispatchEvent(new Event('submit'));
                }
            }
        });

        // Auto-refresh time slots every 30 seconds
        setInterval(() => {
            if (selectedDate && selectedDentistId) {
                loadTimeSlots();
            }
        }, 30000);

        // Prevent form submission on Enter in input fields (except submit button)
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && e.target.tagName !== 'BUTTON' && e.target.type !== 'submit') {
                e.preventDefault();
            }
        });
    </script>
</body>
</html>