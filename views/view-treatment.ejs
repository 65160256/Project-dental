<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Treatment Details - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar */
        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        /* Main Content */
        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: relative;
        }

        .page-info h1 {
            margin: 0 0 5px 0;
            font-size: 24px;
            color: #333;
            font-weight: 600;
        }

        .page-info p {
            margin: 0;
            color: #666;
            font-size: 13px;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            position: relative;
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
            font-size: 18px;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: 600;
            display: none;
        }

        .notification-badge.show {
            display: flex;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .notification-dropdown {
            position: absolute;
            top: 100%;
            right: -10px;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            min-width: 380px;
            max-width: 420px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            z-index: 2000;
            display: none;
            max-height: 500px;
            overflow: hidden;
        }

        .notification-dropdown.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .notification-header {
            padding: 20px;
            border-bottom: 1px solid #e1e5e9;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .notification-header h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

        .mark-all-btn {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .mark-all-btn:hover {
            background: rgba(255,255,255,0.3);
        }

        .notification-content {
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-item {
            padding: 15px 20px;
            border-bottom: 1px solid #f1f3f4;
            cursor: pointer;
            transition: background 0.2s ease;
        }

        .notification-item:hover {
            background: #f8f9fa;
        }

        .notification-item.unread {
            background: #f0f8ff;
            border-left: 4px solid #4A90E2;
        }

        .notification-title {
            font-weight: 600;
            color: #333;
            font-size: 14px;
            margin-bottom: 4px;
        }

        .notification-message {
            color: #666;
            font-size: 13px;
            margin-bottom: 6px;
            line-height: 1.4;
        }

        .notification-time {
            color: #999;
            font-size: 11px;
        }

        .empty-notifications {
            padding: 40px 20px;
            text-align: center;
            color: #666;
        }

        .empty-notifications i {
            font-size: 32px;
            color: #ddd;
            margin-bottom: 15px;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            min-width: 160px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .dropdown-menu a {
            display: block;
            padding: 10px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        .dropdown-menu hr {
            margin: 5px 0;
            border: none;
            border-top: 1px solid #e1e5e9;
        }

        /* Content */
        .content {
            padding: 30px;
        }

        /* Back Button */
        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            color: #666;
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
            margin-bottom: 25px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .back-btn:hover {
            background: #f8f9fa;
            transform: translateX(-2px);
        }

        /* Treatment Details Card */
        .treatment-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            overflow: hidden;
            margin-bottom: 25px;
        }

        .treatment-header {
            background: linear-gradient(135deg, rgba(74, 144, 226, 0.1), rgba(45, 168, 255, 0.1));
            padding: 25px 30px;
            border-bottom: 1px solid #e1e5e9;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .treatment-title {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .treatment-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
        }

        .treatment-name h2 {
            margin: 0 0 5px 0;
            font-size: 24px;
            color: #333;
            font-weight: 600;
        }

        .treatment-name p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }

        .treatment-id-badge {
            background: #4A90E2;
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .treatment-body {
            padding: 30px;
        }

        .treatment-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .detail-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #4A90E2;
        }

        .section-title {
            margin: 0 0 15px 0;
            font-size: 16px;
            font-weight: 600;
            color: #333;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .section-title i {
            color: #4A90E2;
        }

        .detail-item {
            margin-bottom: 15px;
        }

        .detail-label {
            display: block;
            font-weight: 500;
            color: #666;
            font-size: 13px;
            margin-bottom: 4px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .detail-value {
            color: #333;
            font-size: 15px;
            font-weight: 500;
        }

        .duration-badge {
            background: #e8f5e8;
            color: #2e7d32;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 13px;
            font-weight: 600;
            display: inline-block;
        }

        .dentist-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 8px;
        }

        .dentist-badge {
            background: #e3f2fd;
            color: #1976d2;
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
        }

        .no-dentists {
            color: #999;
            font-style: italic;
            font-size: 14px;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid #e1e5e9;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .btn-warning {
            background: #ffc107;
            color: #212529;
        }

        .btn-warning:hover {
            background: #e0a800;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(255, 193, 7, 0.3);
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn-danger:hover {
            background: #c82333;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
        }

        /* Loading State */
        .loading {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .loading i {
            font-size: 32px;
            animation: spin 1s linear infinite;
            margin-bottom: 15px;
            display: block;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Error State */
        .error-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .error-state i {
            font-size: 48px;
            color: #dc3545;
            margin-bottom: 20px;
        }

        .error-state h3 {
            margin-bottom: 10px;
            color: #333;
        }

        .error-state p {
            margin-bottom: 20px;
        }

        /* Toast notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            min-width: 300px;
        }

        .toast.success {
            background: #10b981;
        }

        .toast.error {
            background: #ef4444;
        }

        .toast.info {
            background: #3b82f6;
        }

        .toast.warning {
            background: #f59e0b;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        /* Modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 3000;
            display: none;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            border-radius: 12px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            position: relative;
        }

        .modal-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e1e5e9;
        }

        .modal-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: #ffebee;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #d32f2f;
            font-size: 20px;
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .modal-message {
            margin-bottom: 25px;
            color: #666;
            line-height: 1.5;
            font-size: 15px;
        }

        .modal-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #666;
            border: 1px solid #e1e5e9;
        }

        .btn-secondary:hover {
            background: #e9ecef;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }

            .treatment-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .treatment-header {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
            <li><a href="/admin/appointments"><i class="fas fa-hospital"></i> Appointments</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> Dentists</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> Patients</a></li>
            <li class="active"><a href="/admin/treatments"><i class="fas fa-tooth"></i> Treatments</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <div class="page-info">
                <h1>Treatment Details</h1>
                <p>View and manage treatment information</p>
            </div>

            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon" onclick="toggleNotifications()"></i>
                    <div class="notification-badge" id="notificationBadge">0</div>
                    
                    <div class="notification-dropdown" id="notificationDropdown">
                        <div class="notification-header">
                            <h3>Notifications</h3>
                            <button class="mark-all-btn" onclick="markAllAsRead()">Mark all as read</button>
                        </div>
                        <div class="notification-content" id="notificationContent">
                            <div class="empty-notifications">
                                <i class="fas fa-bell-slash"></i>
                                <p>Loading notifications...</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar" id="userAvatar">A</div>
                        <div class="user-details">
                            <strong>Hello Admin</strong>
                            <small>administrator</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/admin/profile">My Profile</a>
                        <hr />
                        <a href="/logout">Log Out</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content -->
        <div class="content">
            <a href="/admin/treatments" class="back-btn">
                <i class="fas fa-arrow-left"></i>
                Back to Treatments
            </a>

            <div class="loading" id="loadingState">
                <i class="fas fa-spinner"></i>
                <p>Loading treatment details...</p>
            </div>

            <div class="treatment-card" id="treatmentCard" style="display: none;">
                <div class="treatment-header">
                    <div class="treatment-title">
                        <div class="treatment-icon">
                            <i class="fas fa-tooth"></i>
                        </div>
                        <div class="treatment-name">
                            <h2 id="treatmentName">Treatment Name</h2>
                            <p id="treatmentDescription">Treatment description and details</p>
                        </div>
                    </div>
                    <div class="treatment-id-badge" id="treatmentIdBadge">
                        ID: #1
                    </div>
                </div>

                <div class="treatment-body">
                    <div class="treatment-grid">
                        <div class="detail-section">
                            <h3 class="section-title">
                                <i class="fas fa-info-circle"></i>
                                Basic Information
                            </h3>
                            <div class="detail-item">
                                <span class="detail-label">Treatment Name</span>
                                <div class="detail-value" id="detailName">-</div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Duration</span>
                                <div class="detail-value">
                                    <span class="duration-badge" id="detailDuration">0 min</span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Treatment ID</span>
                                <div class="detail-value" id="detailId">#1</div>
                            </div>
                        </div>

                        <div class="detail-section">
                            <h3 class="section-title">
                                <i class="fas fa-user-md"></i>
                                Available Dentists
                            </h3>
                            <div class="detail-item">
                                <span class="detail-label">Qualified Dentists</span>
                                <div class="detail-value">
                                    <div class="dentist-list" id="dentistList">
                                        <div class="no-dentists">Loading...</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="action-buttons">
                        <a href="/admin/treatments" class="btn btn-secondary">
                            <i class="fas fa-list"></i>
                            All Treatments
                        </a>
                        <button class="btn btn-warning" onclick="editTreatment()">
                            <i class="fas fa-edit"></i>
                            Edit Treatment
                        </button>
                        <button class="btn btn-danger" onclick="confirmDelete()">
                            <i class="fas fa-trash"></i>
                            Delete Treatment
                        </button>
                    </div>
                </div>
            </div>

            <div class="error-state" id="errorState" style="display: none;">
                <i class="fas fa-exclamation-triangle"></i>
                <h3>Treatment Not Found</h3>
                <p>The treatment you're looking for doesn't exist or has been removed.</p>
                <a href="/admin/treatments" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i>
                    Back to Treatments
                </a>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <h3 class="modal-title">Confirm Deletion</h3>
            </div>
            <div class="modal-message" id="deleteMessage">
                Are you sure you want to delete this treatment?
            </div>
            <div class="modal-actions">
                <button class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                <button id="confirmDeleteBtn" class="btn btn-danger">
                    <i class="fas fa-trash"></i>
                    Delete Treatment
                </button>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let treatmentId = null;
        let treatmentData = null;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            extractTreatmentId();
            loadTreatmentData();
            loadUserInfo();
            loadNotifications();
            setupEventListeners();
        });

        // Extract treatment ID from URL
        function extractTreatmentId() {
            const path = window.location.pathname;
            const matches = path.match(/\/treatments\/(\d+)$/);
            if (matches) {
                treatmentId = parseInt(matches[1]);
                document.getElementById('treatmentIdBadge').textContent = `ID: #${treatmentId}`;
            } else {
                showError();
            }
        }

        // Setup event listeners
        function setupEventListeners() {
            // Close dropdowns when clicking outside
            document.addEventListener('click', function(event) {
                // Close profile dropdown
                const profileDropdown = document.querySelector('.profile-dropdown');
                if (!profileDropdown.contains(event.target)) {
                    document.getElementById('profileDropdown').style.display = 'none';
                }
                
                // Close notification dropdown
                const notificationContainer = document.querySelector('.notification-container');
                if (!notificationContainer.contains(event.target)) {
                    document.getElementById('notificationDropdown').classList.remove('show');
                }

                // Close modal when clicking outside
                const modal = document.getElementById('deleteModal');
                if (event.target === modal) {
                    closeModal();
                }
            });

            // Delete confirmation
            document.getElementById('confirmDeleteBtn').addEventListener('click', async function() {
                await deleteTreatment();
            });

            // Keyboard shortcuts
            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    document.getElementById('notificationDropdown').classList.remove('show');
                    document.getElementById('profileDropdown').style.display = 'none';
                    closeModal();
                }
            });
        }

        // Load treatment data from database
        async function loadTreatmentData() {
            if (!treatmentId) return;

            try {
                showLoading(true);
                
                const response = await fetch(`/admin/api/treatments/${treatmentId}`);
                if (!response.ok) {
                    if (response.status === 404) {
                        showError();
                        return;
                    }
                    throw new Error('Failed to load treatment data');
                }
                
                const data = await response.json();
                
                if (data.success) {
                    treatmentData = data.treatment;
                    populateTreatmentDetails(treatmentData);
                } else {
                    throw new Error(data.error || 'Failed to load treatment data');
                }
                
            } catch (error) {
                console.error('Error loading treatment data:', error);
                showToast('Failed to load treatment data: ' + error.message, 'error');
                showError();
            } finally {
                showLoading(false);
            }
        }

        // Populate treatment details
        function populateTreatmentDetails(treatment) {
            // Header
            document.getElementById('treatmentName').textContent = treatment.treatment_name;
            document.getElementById('treatmentDescription').textContent = `Treatment procedure with ${treatment.duration} minute duration`;
            
            // Details
            document.getElementById('detailName').textContent = treatment.treatment_name;
            document.getElementById('detailDuration').textContent = `${treatment.duration} min`;
            document.getElementById('detailId').textContent = `#${treatment.treatment_id}`;
            
            // Load associated dentists
            loadTreatmentDentists(treatment.treatment_id);
            
            // Show the card
            document.getElementById('treatmentCard').style.display = 'block';
        }

        // Load dentists associated with this treatment
        async function loadTreatmentDentists(treatmentId) {
            try {
                const response = await fetch(`/admin/api/treatments/${treatmentId}/dentists`);
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        displayDentists(data.dentists);
                    } else {
                        displayNoDentists();
                    }
                } else {
                    displayNoDentists();
                }
            } catch (error) {
                console.error('Error loading treatment dentists:', error);
                displayNoDentists();
            }
        }

        // Display dentists list
        function displayDentists(dentists) {
            const dentistList = document.getElementById('dentistList');
            
            if (dentists && dentists.length > 0) {
                dentistList.innerHTML = dentists.map(dentist => 
                    `<span class="dentist-badge">Dr. ${dentist.fname} ${dentist.lname}</span>`
                ).join('');
            } else {
                displayNoDentists();
            }
        }

        // Display no dentists message
        function displayNoDentists() {
            const dentistList = document.getElementById('dentistList');
            dentistList.innerHTML = '<div class="no-dentists">No dentists assigned to this treatment</div>';
        }

        // Edit treatment
        function editTreatment() {
            window.location.href = `/admin/treatments/${treatmentId}/edit`;
        }

        // Confirm delete
        function confirmDelete() {
            if (!treatmentData) return;
            
            document.getElementById('deleteMessage').innerHTML = `
                <p>Are you sure you want to delete <strong>"${treatmentData.treatment_name}"</strong>?</p>
                <p style="color: #f57c00; font-size: 14px; margin-top: 10px;">
                    <i class="fas fa-exclamation-triangle"></i>
                    This action cannot be undone. All related data will be removed.
                </p>
            `;
            document.getElementById('deleteModal').style.display = 'flex';
        }

        // Close modal
        function closeModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }

        // Delete treatment
        async function deleteTreatment() {
            if (!treatmentId) return;

            try {
                const btn = document.getElementById('confirmDeleteBtn');
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
                btn.disabled = true;

                const response = await fetch(`/admin/api/treatments/${treatmentId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    showToast('Treatment deleted successfully', 'success');
                    closeModal();
                    
                    // Create notification
                    try {
                        await fetch('/admin/api/notifications', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                type: 'treatment_delete',
                                title: 'Treatment Deleted',
                                message: `Treatment "${treatmentData.treatment_name}" has been removed from the system`
                            })
                        });
                    } catch (notificationError) {
                        console.warn('Could not create notification:', notificationError);
                    }
                    
                    // Redirect to treatments list after short delay
                    setTimeout(() => {
                        window.location.href = '/admin/treatments';
                    }, 1500);
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to delete treatment');
                }

            } catch (error) {
                console.error('Error deleting treatment:', error);
                showToast('Failed to delete treatment: ' + error.message, 'error');
            } finally {
                const btn = document.getElementById('confirmDeleteBtn');
                btn.innerHTML = '<i class="fas fa-trash"></i> Delete Treatment';
                btn.disabled = false;
            }
        }

        // Show/hide loading state
        function showLoading(show) {
            const loadingState = document.getElementById('loadingState');
            const treatmentCard = document.getElementById('treatmentCard');
            const errorState = document.getElementById('errorState');

            if (show) {
                loadingState.style.display = 'block';
                treatmentCard.style.display = 'none';
                errorState.style.display = 'none';
            } else {
                loadingState.style.display = 'none';
            }
        }

        // Show error state
        function showError() {
            const loadingState = document.getElementById('loadingState');
            const treatmentCard = document.getElementById('treatmentCard');
            const errorState = document.getElementById('errorState');

            loadingState.style.display = 'none';
            treatmentCard.style.display = 'none';
            errorState.style.display = 'block';
        }

        // Load user information for avatar
        async function loadUserInfo() {
            try {
                const response = await fetch('/admin/profile/api');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        const firstLetter = data.email ? data.email.charAt(0).toUpperCase() : 'A';
                        document.getElementById('userAvatar').textContent = firstLetter;
                        
                        // Update user info in dropdown
                        const userDetails = document.querySelector('.user-details strong');
                        if (userDetails) {
                            userDetails.textContent = `Hello ${data.role || 'Admin'}`;
                        }
                    }
                }
            } catch (error) {
                console.error('Error loading user info:', error);
                document.getElementById('userAvatar').textContent = 'A';
            }
        }

        // Load notifications
        async function loadNotifications() {
            try {
                const response = await fetch('/admin/api/notifications?limit=10');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        updateNotificationDisplay(data.notifications, data.pagination.unread_count);
                    }
                }
            } catch (error) {
                console.error('Error loading notifications:', error);
                showEmptyNotifications();
            }
        }

        // Update notification display
        function updateNotificationDisplay(notifications, unreadCount) {
            const badge = document.getElementById('notificationBadge');
            const content = document.getElementById('notificationContent');

            // Update badge
            if (unreadCount > 0) {
                badge.textContent = unreadCount > 99 ? '99+' : unreadCount;
                badge.classList.add('show');
            } else {
                badge.classList.remove('show');
            }

            // Update content
            if (notifications.length === 0) {
                showEmptyNotifications();
                return;
            }

            content.innerHTML = notifications.map(notification => {
                const timeAgo = getTimeAgo(new Date(notification.created_at));
                return `
                    <div class="notification-item ${!notification.is_read ? 'unread' : ''}" 
                         onclick="markAsRead(${notification.id})">
                        <div class="notification-title">${notification.title}</div>
                        <div class="notification-message">${notification.message}</div>
                        <div class="notification-time">${timeAgo}</div>
                    </div>
                `;
            }).join('');
        }

        // Show empty notifications
        function showEmptyNotifications() {
            document.getElementById('notificationContent').innerHTML = `
                <div class="empty-notifications">
                    <i class="fas fa-bell-slash"></i>
                    <p>No new notifications</p>
                </div>
            `;
        }

        // Toggle notifications dropdown
        function toggleNotifications() {
            const dropdown = document.getElementById('notificationDropdown');
            const isVisible = dropdown.classList.contains('show');
            
            if (isVisible) {
                dropdown.classList.remove('show');
            } else {
                dropdown.classList.add('show');
                loadNotifications(); // Refresh notifications
            }
        }

        // Mark notification as read
        async function markAsRead(notificationId) {
            try {
                const response = await fetch(`/admin/api/notifications/${notificationId}/read`, {
                    method: 'POST'
                });
                
                if (response.ok) {
                    loadNotifications(); // Refresh notifications
                }
            } catch (error) {
                console.error('Error marking notification as read:', error);
            }
        }

        // Mark all notifications as read
        async function markAllAsRead() {
            try {
                const response = await fetch('/admin/api/notifications/read-all', {
                    method: 'POST'
                });
                
                if (response.ok) {
                    loadNotifications(); // Refresh notifications
                    showToast('All notifications marked as read', 'success');
                }
            } catch (error) {
                console.error('Error marking all notifications as read:', error);
                showToast('Failed to mark notifications as read', 'error');
            }
        }

        // Toggle profile dropdown
        function toggleDropdown() {
            const menu = document.getElementById('profileDropdown');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        // Show toast notification
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            const icon = {
                success: 'fas fa-check-circle',
                error: 'fas fa-exclamation-triangle',
                warning: 'fas fa-exclamation-circle',
                info: 'fas fa-info-circle'
            };

            toast.innerHTML = `
                <i class="${icon[type]}"></i>
                ${message}
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.remove();
                    }
                }, 300);
            }, 4000);
        }

        // Get time ago text
        function getTimeAgo(date) {
            const now = new Date();
            const diffInSeconds = Math.floor((now - date) / 1000);
            
            if (diffInSeconds < 60) return 'Just now';
            if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;
            if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;
            if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}d ago`;
            
            return date.toLocaleDateString();
        }

        // Auto-refresh notifications every 60 seconds
        setInterval(() => {
            loadNotifications();
        }, 60000);

    </script>
</body>
</html>