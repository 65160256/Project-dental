<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>แดชบอร์ดรายงานคลินิก - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Sarabun', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
            transition: all 0.3s ease;
        }

        .user-info:hover {
            transform: translateY(-1px);
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            min-width: 180px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            z-index: 2000;
            margin-top: 8px;
            overflow: hidden;
        }

        .dropdown-menu.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .dropdown-menu a {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
            color: #4A90E2;
        }

        .dropdown-menu hr {
            margin: 5px 0;
            border: none;
            border-top: 1px solid #e1e5e9;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .content {
            padding: 30px;
        }

        .header-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 16px;
            padding: 30px;
            color: white;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .welcome-text h1 {
            font-size: 28px;
            margin: 0 0 8px 0;
            font-weight: 700;
        }

        .welcome-text p {
            font-size: 16px;
            opacity: 0.9;
            margin: 0;
        }

        .total-patients {
            text-align: center;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .total-patients:hover {
            transform: scale(1.05);
        }

        .total-patients .number {
            font-size: 48px;
            font-weight: 700;
            margin: 0;
            text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .total-patients .label {
            font-size: 14px;
            opacity: 0.9;
            margin: 5px 0 0 0;
        }

        .patient-icon {
            width: 80px;
            height: 80px;
            background: rgba(255,255,255,0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 36px;
            margin: 0 auto 10px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .appointment-report, .todays-doctors, .treatment-section, .upcoming-section, .doctor-stats-section {
            background: white;
            border-radius: 16px;
            padding: 25px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .card-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .period-selector {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 4px;
            display: flex;
            gap: 2px;
        }

        .period-btn {
            padding: 8px 16px;
            background: transparent;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 13px;
            font-weight: 500;
            color: #666;
            transition: all 0.2s ease;
        }

        .period-btn.active {
            background: white;
            color: #4A90E2;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .appointment-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 25px;
        }

        .stat-item {
            text-align: center;
            padding: 20px;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .stat-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .stat-item.confirmed {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }

        .stat-item.pending {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }

        .stat-item.cancelled {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
        }

        .stat-number {
            font-size: 32px;
            font-weight: 700;
            margin: 0;
        }

        .stat-label {
            font-size: 14px;
            margin: 5px 0 0 0;
            opacity: 0.9;
        }

        .doctors-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .doctor-card {
            text-align: center;
            padding: 20px 15px;
            border-radius: 12px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .doctor-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .doctor-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            margin: 0 auto 10px;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 18px;
            overflow: hidden;
        }

        .doctor-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .doctor-name {
            font-size: 13px;
            font-weight: 600;
            color: #333;
            margin: 0 0 5px 0;
        }

        .doctor-specialty {
            font-size: 11px;
            color: #666;
            margin: 0;
        }

        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .chart-container {
            margin-top: 20px;
            height: 300px;
            position: relative;
        }

        .calendar-section {
            background: linear-gradient(135deg, rgba(74, 144, 226, 0.1), rgba(45, 168, 255, 0.1));
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .month-year {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .calendar-nav {
            display: flex;
            gap: 10px;
        }

        .nav-btn {
            width: 32px;
            height: 32px;
            border: none;
            border-radius: 6px;
            background: white;
            color: #666;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .nav-btn:hover {
            background: #4A90E2;
            color: white;
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 8px;
        }

        .calendar-day {
            aspect-ratio: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .calendar-day.header {
            background: none;
            color: #666;
            font-weight: 600;
            cursor: default;
        }

        .calendar-day.today {
            background: #4A90E2;
            color: white;
        }

        .calendar-day.other-month {
            color: #ccc;
        }

        .calendar-day:not(.header):not(.today):hover {
            background: rgba(74, 144, 226, 0.1);
        }

        .appointments-list {
            max-height: 300px;
            overflow-y: auto;
        }

        .appointment-item {
            padding: 12px;
            border-left: 4px solid #4A90E2;
            background: #f8f9fa;
            margin-bottom: 10px;
            border-radius: 0 8px 8px 0;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .appointment-item:hover {
            background: #e9ecef;
            transform: translateX(2px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .appointment-time {
            font-size: 12px;
            color: #666;
            margin-bottom: 5px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .appointment-time i {
            color: #4A90E2;
        }

        .appointment-patient {
            font-weight: 600;
            color: #333;
            margin-bottom: 3px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .appointment-patient i {
            color: #10b981;
        }

        .appointment-treatment {
            font-size: 12px;
            color: #666;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .appointment-treatment i {
            color: #f59e0b;
        }

        .doctor-stats-section {
            margin-bottom: 30px;
        }

        .doctor-stats-chart {
            margin-top: 20px;
            height: 350px;
            position: relative;
        }

        #doctorSummaryTable table {
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            border-radius: 8px;
            overflow: hidden;
        }

        #doctorSummaryTable th {
            text-transform: uppercase;
            font-size: 12px;
            letter-spacing: 0.5px;
            font-weight: 600;
        }

        #doctorSummaryTable td {
            transition: background 0.2s ease;
        }

        #doctorSummaryTable tr:hover td {
            background: #e3f2fd !important;
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            max-width: 300px;
        }

        .toast.success { background: #10b981; }
        .toast.error { background: #ef4444; }
        .toast.info { background: #3b82f6; }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .header-content {
                flex-direction: column;
                gap: 20px;
                text-align: center;
            }
            
            .stats-grid,
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .appointment-stats {
                grid-template-columns: 1fr;
            }
            
            .doctors-grid {
                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            }
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li class="active"><a href="/admin/dashboard"><i class="fas fa-chart-bar"></i> แดชบอร์ด</a></li>
            <li><a href="/admin/schedule"><i class="fas fa-calendar-alt"></i> ตารางเวลา</a></li>
            <li><a href="/admin/appointments"><i class="fas fa-hospital"></i> การนัดหมาย</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> ทันตแพทย์</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> ผู้ป่วย</a></li>
            <li><a href="/admin/treatments"><i class="fas fa-tooth"></i> การรักษา</a></li>
        </ul>
    </div>

    <div class="main">
        <div class="top-bar">
            <div></div>
            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon"></i>
                </div>
                
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar" id="userAvatar">A</div>
                        <div class="user-details">
                            <strong>สวัสดี แอดมิน</strong>
                            <small>ผู้ดูแลระบบ</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/admin/profile"><i class="fas fa-user"></i> โปรไฟล์ของฉัน</a>
                        <hr />
                        <a href="/logout"><i class="fas fa-sign-out-alt"></i> ออกจากระบบ</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="content">
            <div class="header-section">
                <div class="header-content">
                    <div class="welcome-text">
                        <h1>สวัสดี แอดมิน</h1>
                        <p id="currentDateTime">01/10/2568 13:00 น.</p>
                    </div>
                    <div class="total-patients" onclick="window.location.href='/admin/patients'">
                        <div class="patient-icon">
                            <i class="fas fa-user-injured"></i>
                        </div>
                        <h2 class="number" id="totalPatientsDisplay"><%= dashboardData.totalPatients %></h2>
                        <p class="label">ผู้ป่วยทั้งหมด</p>
                    </div>
                </div>
            </div>

            <div class="stats-grid">
                <div class="appointment-report">
                    <div class="card-header">
                        <h3 class="card-title">รายงานการนัดหมาย</h3>
                        <div class="period-selector">
                            <button class="period-btn active" data-period="day">วัน</button>
                            <button class="period-btn" data-period="week">สัปดาห์</button>
                            <button class="period-btn" data-period="month">เดือน</button>
                        </div>
                    </div>
                    
                    <div class="appointment-stats">
                        <div class="stat-item confirmed" onclick="showAppointmentDetails('confirmed')">
                            <h3 class="stat-number" id="confirmedCount"><%= dashboardData.appointmentSummary.confirmed %></h3>
                            <p class="stat-label">ยืนยันแล้ว</p>
                        </div>
                        <div class="stat-item pending" onclick="showAppointmentDetails('pending')">
                            <h3 class="stat-number" id="pendingCount"><%= dashboardData.appointmentSummary.pending %></h3>
                            <p class="stat-label">รอยืนยัน</p>
                        </div>
                        <div class="stat-item cancelled" onclick="showAppointmentDetails('cancelled')">
                            <h3 class="stat-number" id="cancelledCount"><%= dashboardData.appointmentSummary.cancelled %></h3>
                            <p class="stat-label">ยกเลิกแล้ว</p>
                        </div>
                    </div>
                </div>

                <div class="todays-doctors">
                    <h3 class="card-title">ทันตแพทย์ที่ทำงานวันนี้</h3>
                    <div class="doctors-grid" id="doctorsGrid">
                        <% if (dashboardData.todaysDoctors && dashboardData.todaysDoctors.length > 0) { %>
                            <% dashboardData.todaysDoctors.forEach(doctor => { %>
                            <div class="doctor-card" onclick="window.location.href='/admin/dentists/<%= doctor.dentist_id %>'">
                                <div class="doctor-avatar">
                                    <% if (doctor.photo && doctor.photo !== 'default-avatar.png') { %>
                                        <img src="/uploads/<%= doctor.photo %>" alt="<%= doctor.fname %>">
                                    <% } else { %>
                                        <%= doctor.fname.charAt(0) %><%= doctor.lname.charAt(0) %>
                                    <% } %>
                                </div>
                                <p class="doctor-name">ทพ. <%= doctor.fname %> <%= doctor.lname %></p>
                                <p class="doctor-specialty"><%= doctor.specialty || 'ทั่วไป' %></p>
                            </div>
                            <% }); %>
                        <% } else { %>
                            <p style="grid-column: 1 / -1; text-align: center; color: #999; padding: 20px;">
                                ไม่มีทันตแพทย์ที่ทำงานวันนี้
                            </p>
                        <% } %>
                    </div>
                </div>
            </div>

            <div class="content-grid">
                <div class="treatment-section">
                    <div class="card-header">
                        <h3 class="card-title">การรักษา</h3>
                        <div class="period-selector">
                            <button class="period-btn" data-period="week">สัปดาห์</button>
                            <button class="period-btn active" data-period="month">เดือน</button>
                            <button class="period-btn" data-period="year">ปี</button>
                        </div>
                    </div>
                    <div class="chart-container">
                        <canvas id="treatmentChart"></canvas>
                    </div>
                </div>

                <div class="upcoming-section">
                    <h3 class="card-title"><%= dashboardData.currentMonth %></h3>
                    
                    <div class="calendar-section">
                        <div class="calendar-header">
                            <h4 class="month-year" id="calendarMonthYear"><%= dashboardData.currentMonth %></h4>
                            <div class="calendar-nav">
                                <button class="nav-btn" onclick="changeMonth(-1)">
                                    <i class="fas fa-chevron-left"></i>
                                </button>
                                <button class="nav-btn" onclick="changeMonth(1)">
                                    <i class="fas fa-chevron-right"></i>
                                </button>
                            </div>
                        </div>
                        <div class="calendar-grid" id="calendarGrid"></div>
                    </div>

                    <h4 style="margin-bottom: 15px; color: #333;">การนัดหมายที่กำลังจะมาถึง</h4>
                    <div class="appointments-list" id="appointmentsList">
                        <% if (dashboardData.upcomingAppointments && dashboardData.upcomingAppointments.length > 0) { %>
                            <% dashboardData.upcomingAppointments.forEach(appointment => { %>
                            <div class="appointment-item" onclick="viewAppointmentDetail(<%= appointment.queue_id %>)">
                                <div class="appointment-time">
                                    <i class="fas fa-clock"></i>
                                    <%= new Date(appointment.time).toLocaleDateString('th-TH', { 
                                        weekday: 'short', 
                                        day: 'numeric',
                                        month: 'short'
                                    }) %> - <%= new Date(appointment.time).toLocaleTimeString('th-TH', { 
                                        hour: '2-digit', 
                                        minute: '2-digit',
                                        hour12: false 
                                    }) %> น.
                                </div>
                                <div class="appointment-patient">
                                    <i class="fas fa-user"></i>
                                    <%= appointment.patient_name %>
                                </div>
                                <div class="appointment-treatment">
                                    <i class="fas fa-tooth"></i>
                                    <%= appointment.treatment_name %>
                                </div>
                            </div>
                            <% }); %>
                        <% } else { %>
                            <p style="text-align: center; color: #999; padding: 20px;">
                                ไม่มีการนัดหมายที่กำลังจะมาถึง
                            </p>
                        <% } %>
                    </div>
                </div>
            </div>

            <div class="doctor-stats-section">
                <div class="card-header">
                    <h3 class="card-title">📊 สถิติการทำงานของทันตแพทย์</h3>
                    <div class="period-selector">
                        <button class="period-btn" data-period="week">สัปดาห์</button>
                        <button class="period-btn active" data-period="month">เดือน</button>
                        <button class="period-btn" data-period="year">ปี</button>
                    </div>
                </div>
                <div class="doctor-stats-chart">
                    <canvas id="doctorStatsChart"></canvas>
                </div>
                <div id="doctorSummaryTable"></div>
            </div>
        </div>
    </div>

    <script>
        let treatmentChart;
        let doctorStatsChart;
        let currentDate = new Date();
        let currentPeriod = 'month';

        const thaiMonths = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 
                            'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'];
        const thaiDays = ['อา', 'จ', 'อ', 'พ', 'พฤ', 'ศ', 'ส'];

        document.addEventListener('DOMContentLoaded', function() {
            updateDateTime();
            initializeCharts();
            generateCalendar();
            setupEventListeners();
            loadUserInfo();
            setInterval(updateDateTime, 60000);
        });

        function updateDateTime() {
            const now = new Date();
            const thaiYear = now.getFullYear() + 543;
            const day = now.getDate().toString().padStart(2, '0');
            const month = (now.getMonth() + 1).toString().padStart(2, '0');
            const hours = now.getHours().toString().padStart(2, '0');
            const minutes = now.getMinutes().toString().padStart(2, '0');
            
            document.getElementById('currentDateTime').textContent = 
                `${day}/${month}/${thaiYear} ${hours}:${minutes} น.`;
        }

        async function loadUserInfo() {
            try {
                const response = await fetch('/admin/profile/api');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success && data.email) {
                        const firstLetter = data.email.charAt(0).toUpperCase();
                        document.getElementById('userAvatar').textContent = firstLetter;
                    }
                }
            } catch (error) {
                console.error('เกิดข้อผิดพลาดในการโหลดข้อมูลผู้ใช้:', error);
            }
        }

        function initializeCharts() {
            initializeTreatmentChart();
            initializeDoctorStatsChart();
        }

        function initializeTreatmentChart() {
            const ctx = document.getElementById('treatmentChart').getContext('2d');
            const treatmentData = <%- JSON.stringify(dashboardData.treatmentStats) %>;
            
            treatmentChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: treatmentData.map(item => item.treatment_name),
                    datasets: [{
                        label: 'จำนวนการรักษา',
                        data: treatmentData.map(item => item.count),
                        backgroundColor: ['#4A90E2', '#50C878', '#FFB347', '#FF6B6B', '#9B59B6', '#3498DB', '#E74C3C', '#F39C12', '#2ECC71', '#1ABC9C'],
                        borderRadius: 8,
                        borderSkipped: false,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { legend: { display: false } },
                    scales: {
                        y: { beginAtZero: true, grid: { color: '#f1f3f4' } },
                        x: { grid: { display: false } }
                    }
                }
            });
        }

        function initializeDoctorStatsChart() {
            const ctx = document.getElementById('doctorStatsChart').getContext('2d');
            const doctorData = <%- JSON.stringify(dashboardData.doctorStats) %>;
            
            doctorStatsChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: doctorData.map(item => 'ทพ. ' + item.doctor_name),
                    datasets: [{
                        label: 'จำนวนการนัดหมายทั้งหมด',
                        data: doctorData.map(item => item.total_appointments),
                        backgroundColor: ['#4A90E2', '#50C878', '#FFB347', '#FF6B6B', '#9B59B6'],
                        borderRadius: 8,
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: true, position: 'top' },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.8)',
                            padding: 12,
                            callbacks: {
                                label: function(context) {
                                    const index = context.dataIndex;
                                    const doctor = doctorData[index];
                                    return [
                                        'การนัดหมายทั้งหมด: ' + doctor.total_appointments + ' ครั้ง',
                                        'จำนวนผู้ป่วย: ' + doctor.unique_patients + ' คน',
                                        'เฉลี่ยต่อคน: ' + (doctor.total_appointments / doctor.unique_patients || 0).toFixed(1) + ' ครั้ง'
                                    ];
                                }
                            }
                        }
                    },
                    scales: {
                        y: { 
                            beginAtZero: true, 
                            title: { display: true, text: 'จำนวนการนัดหมาย (ครั้ง)' },
                            grid: { color: '#f1f3f4' }
                        },
                        x: { 
                            title: { display: true, text: 'ทันตแพทย์' },
                            grid: { display: false }
                        }
                    }
                }
            });
            
            createDoctorSummaryTable(doctorData);
        }

        function createDoctorSummaryTable(doctorData) {
            const tableContainer = document.getElementById('doctorSummaryTable');
            if (!tableContainer) return;
            
            let tableHTML = `
                <div style="margin-top: 20px; overflow-x: auto;">
                    <table style="width: 100%; border-collapse: collapse;">
                        <thead>
                            <tr style="background: linear-gradient(135deg, #667eea, #764ba2); color: white;">
                                <th style="padding: 12px; text-align: left; border: 1px solid #ddd;">ทันตแพทย์</th>
                                <th style="padding: 12px; text-align: center; border: 1px solid #ddd;">จำนวนผู้ป่วย</th>
                                <th style="padding: 12px; text-align: center; border: 1px solid #ddd;">จำนวนนัดหมาย</th>
                                <th style="padding: 12px; text-align: center; border: 1px solid #ddd;">เฉลี่ยต่อคน</th>
                                <th style="padding: 12px; text-align: center; border: 1px solid #ddd;">สถานะ</th>
                            </tr>
                        </thead>
                        <tbody>
            `;
            
            doctorData.forEach((doctor, index) => {
                const avgPerPatient = doctor.unique_patients > 0 ? (doctor.total_appointments / doctor.unique_patients).toFixed(1) : 0;
                const bgColor = index % 2 === 0 ? '#f8f9fa' : 'white';
                
                let statusBadge = '', statusText = '';
                if (doctor.total_appointments === 0) {
                    statusBadge = 'background: #6c757d;';
                    statusText = 'ไม่มีนัดหมาย';
                } else if (avgPerPatient >= 2) {
                    statusBadge = 'background: #28a745;';
                    statusText = 'ผู้ป่วยติดตาม';
                } else {
                    statusBadge = 'background: #17a2b8;';
                    statusText = 'ผู้ป่วยใหม่';
                }
                
                tableHTML += `
                    <tr style="background: ${bgColor};">
                        <td style="padding: 12px; border: 1px solid #ddd;">
                            <strong>ทพ. ${doctor.doctor_name}</strong><br>
                            <small style="color: #666;">${doctor.specialty || 'ทั่วไป'}</small>
                        </td>
                        <td style="padding: 12px; text-align: center; border: 1px solid #ddd; font-size: 18px; font-weight: bold; color: #4A90E2;">${doctor.unique_patients}</td>
                        <td style="padding: 12px; text-align: center; border: 1px solid #ddd; font-size: 18px; font-weight: bold; color: #50C878;">${doctor.total_appointments}</td>
                        <td style="padding: 12px; text-align: center; border: 1px solid #ddd; font-size: 16px; font-weight: bold;">${avgPerPatient} ครั้ง</td>
                        <td style="padding: 12px; text-align: center; border: 1px solid #ddd;">
                            <span style="${statusBadge} color: white; padding: 6px 12px; border-radius: 20px; font-size: 12px; font-weight: bold;">${statusText}</span>
                        </td>
                    </tr>
                `;
            });
            
            tableHTML += `
                        </tbody>
                    </table>
                </div>
                <div style="margin-top: 15px; padding: 15px; background: #e3f2fd; border-radius: 8px; border-left: 4px solid #2196f3;">
                    <strong style="color: #1976d2;">💡 คำอธิบาย:</strong>
                    <ul style="margin: 10px 0; padding-left: 20px; color: #555;">
                        <li><strong>จำนวนผู้ป่วย</strong> = คนที่มารักษา (นับแต่ละคนครั้งเดียว)</li>
                        <li><strong>จำนวนนัดหมาย</strong> = จำนวนครั้งทั้งหมดที่มีการนัดหมาย</li>
                        <li><strong>เฉลี่ยต่อคน</strong> = ผู้ป่วยแต่ละคนมากี่ครั้งโดยเฉลี่ย</li>
                        <li><strong>ผู้ป่วยติดตาม</strong> = มีผู้ป่วยนัดกลับมารักษาต่อเนื่อง (≥2 ครั้ง)</li>
                        <li><strong>ผู้ป่วยใหม่</strong> = ส่วนใหญ่เป็นผู้ป่วยใหม่ (เฉลี่ย <2 ครั้ง)</li>
                    </ul>
                </div>
            `;
            
            tableContainer.innerHTML = tableHTML;
        }

        function setupEventListeners() {
            document.querySelectorAll('.period-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const section = this.closest('.appointment-report, .treatment-section, .doctor-stats-section');
                    section.querySelectorAll('.period-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    const period = this.dataset.period;
                    updateStats(period);
                });
            });
        }

        async function updateStats(period) {
            try {
                const appointmentResponse = await fetch(`/admin/api/dashboard/appointments?period=${period}`);
                if (appointmentResponse.ok) {
                    const appointmentData = await appointmentResponse.json();
                    if (appointmentData.success) {
                        updateAppointmentDisplay(appointmentData.appointments);
                    }
                }

                const treatmentResponse = await fetch(`/admin/api/dashboard/treatments?period=${period}`);
                if (treatmentResponse.ok) {
                    const treatmentData = await treatmentResponse.json();
                    if (treatmentData.success) {
                        updateTreatmentChart(treatmentData.treatments);
                    }
                }

                showToast(`อัพเดทสถิติสำหรับ${period === 'day' ? 'วัน' : period === 'week' ? 'สัปดาห์' : 'เดือน'}แล้ว`, 'success');
            } catch (error) {
                console.error('เกิดข้อผิดพลาดในการอัพเดทสถิติ:', error);
                showToast('ไม่สามารถอัพเดทสถิติได้', 'error');
            }
        }

        function updateAppointmentDisplay(appointments) {
            const confirmed = appointments.filter(apt => apt.queue_status === 'confirm').length;
            const pending = appointments.filter(apt => apt.queue_status === 'pending').length;
            const cancelled = appointments.filter(apt => apt.queue_status === 'cancel').length;

            document.getElementById('confirmedCount').textContent = confirmed;
            document.getElementById('pendingCount').textContent = pending;
            document.getElementById('cancelledCount').textContent = cancelled;
        }

        function updateTreatmentChart(treatments) {
            treatmentChart.data.labels = treatments.map(item => item.treatment_name);
            treatmentChart.data.datasets[0].data = treatments.map(item => item.count);
            treatmentChart.update();
        }

        function showAppointmentDetails(status) {
            window.location.href = `/admin/appointments?status=${status}`;
        }

        // ฟังก์ชันสำหรับดูรายละเอียดการนัดหมาย
        function viewAppointmentDetail(appointmentId) {
            if (!appointmentId) {
                showToast('ไม่พบรหัสการนัดหมาย', 'error');
                return;
            }
            // เปลี่ยนเส้นทางไปยังหน้ารายละเอียดการนัดหมาย
            window.location.href = `/admin/appointments?highlight=${appointmentId}`;
        }

        function generateCalendar() {
            const year = currentDate.getFullYear();
            const month = currentDate.getMonth();
            const thaiYear = year + 543;
            
            document.getElementById('calendarMonthYear').textContent = `${thaiMonths[month]} ${thaiYear}`;
            
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const daysInMonth = lastDay.getDate();
            const startingDayOfWeek = firstDay.getDay();
            
            const calendarGrid = document.getElementById('calendarGrid');
            calendarGrid.innerHTML = '';
            
            thaiDays.forEach(day => {
                const dayElement = document.createElement('div');
                dayElement.className = 'calendar-day header';
                dayElement.textContent = day;
                calendarGrid.appendChild(dayElement);
            });
            
            for (let i = 0; i < startingDayOfWeek; i++) {
                const dayElement = document.createElement('div');
                dayElement.className = 'calendar-day other-month';
                calendarGrid.appendChild(dayElement);
            }
            
            const today = new Date();
            for (let day = 1; day <= daysInMonth; day++) {
                const dayElement = document.createElement('div');
                dayElement.className = 'calendar-day';
                dayElement.textContent = day;
                
                if (year === today.getFullYear() && month === today.getMonth() && day === today.getDate()) {
                    dayElement.classList.add('today');
                }
                
                calendarGrid.appendChild(dayElement);
            }
        }

        function changeMonth(direction) {
            currentDate.setMonth(currentDate.getMonth() + direction);
            generateCalendar();
        }

        function showToast(message, type = 'info') {
            document.querySelectorAll('.toast').forEach(toast => toast.remove());
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => { if (toast.parentNode) toast.remove(); }, 4000);
        }

        function toggleDropdown() {
            const menu = document.getElementById('profileDropdown');
            menu.classList.toggle('show');
        }

        document.addEventListener('click', function(event) {
            const profileDropdown = document.querySelector('.profile-dropdown');
            if (!profileDropdown.contains(event.target)) {
                document.getElementById('profileDropdown').classList.remove('show');
            }
        });

        window.addEventListener('online', () => showToast('เชื่อมต่ออินเทอร์เน็ตแล้ว', 'success'));
        window.addEventListener('offline', () => showToast('ขาดการเชื่อมต่ออินเทอร์เน็ต', 'error'));
    </script>
</body>
</html>