<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>แก้ไขการรักษา - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Sarabun', 'Segoe UI', sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .page-info h1 {
            margin: 0 0 5px 0;
            font-size: 24px;
            color: #333;
            font-weight: 600;
        }

        .page-info p {
            margin: 0;
            color: #666;
            font-size: 13px;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            cursor: pointer;
            color: #666;
            font-size: 18px;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: none;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: 600;
        }

        .notification-badge.show {
            display: flex;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
        }

        .content {
            padding: 30px;
        }

        .form-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .form-header {
            background: linear-gradient(135deg, rgba(74, 144, 226, 0.1), rgba(45, 168, 255, 0.1));
            padding: 25px 30px;
            border-bottom: 1px solid #e1e5e9;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .form-header h2 {
            margin: 0 0 5px 0;
            font-size: 20px;
            color: #333;
            font-weight: 600;
        }

        .form-header p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }

        .treatment-id-badge {
            background: #4A90E2;
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .form-body {
            padding: 30px;
        }

        .form-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            border-left: 4px solid #4A90E2;
            margin-bottom: 25px;
        }

        .section-title {
            margin: 0 0 20px 0;
            font-size: 16px;
            font-weight: 600;
            color: #333;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-row.single {
            grid-template-columns: 1fr;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            margin-bottom: 6px;
            font-weight: 500;
            color: #333;
            font-size: 14px;
        }

        .required {
            color: #e74c3c;
            margin-left: 2px;
        }

        .form-control {
            padding: 12px 15px;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: white;
        }

        .form-control:focus {
            outline: none;
            border-color: #4A90E2;
            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        }

        .field-help {
            font-size: 12px;
            color: #666;
            margin-top: 4px;
        }

        .field-changed {
            border-color: #f39c12 !important;
            background: #fef9e7 !important;
        }

        .error-message {
            color: #e74c3c;
            font-size: 12px;
            margin-top: 4px;
            display: none;
        }

        .form-group.error .error-message {
            display: block;
        }

        .form-group.error .form-control {
            border-color: #e74c3c;
            background: #fdf2f2;
        }

        .selected-dentists {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
            min-height: 40px;
            padding: 8px;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            background: white;
        }

        .dentist-chip {
            background: #e3f2fd;
            color: #1976d2;
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .dentist-chip .remove-btn {
            cursor: pointer;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background: rgba(25, 118, 210, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
        }

        .dentist-dropdown {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 100;
            display: none;
            max-height: 200px;
            overflow-y: auto;
        }

        .dentist-dropdown.show {
            display: block;
        }

        .dentist-option {
            padding: 12px 15px;
            cursor: pointer;
            transition: background 0.2s ease;
            font-size: 14px;
        }

        .dentist-option:hover {
            background: #f8f9fa;
        }

        .dentist-option.selected {
            background: #e3f2fd;
            color: #1976d2;
        }

        .add-dentist-btn {
            background: #f8f9fa;
            border: 1px dashed #e1e5e9;
            color: #666;
            padding: 8px 12px;
            border-radius: 15px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .add-dentist-btn:hover {
            background: #e9ecef;
            border-color: #4A90E2;
            color: #4A90E2;
        }

        .form-actions {
            background: #f8f9fa;
            padding: 25px 30px;
            border-top: 1px solid #e1e5e9;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .changes-summary {
            font-size: 13px;
            color: #666;
        }

        .changes-count {
            color: #f39c12;
            font-weight: 600;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .btn-primary:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .btn-primary:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #666;
            border: 1px solid #e1e5e9;
        }

        .btn-warning {
            background: #ffc107;
            color: #212529;
        }

        .btn-loading::after {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            display: flex;
            align-items: center;
            gap: 10px;
            min-width: 300px;
        }

        .toast.success { background: #10b981; }
        .toast.error { background: #ef4444; }
        .toast.info { background: #3b82f6; }

        .loading {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 3000;
            display: none;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            border-radius: 12px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }

        .modal-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e1e5e9;
        }

        .modal-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }

        .modal-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            .main {
                margin-left: 0;
            }
            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-chart-bar"></i> แดชบอร์ด</a></li>
            <li><a href="/admin/schedule"><i class="fas fa-calendar-alt"></i> ตารางเวลา</a></li>
            <li><a href="/admin/appointments"><i class="fas fa-hospital"></i> นัดหมาย</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> ทันตแพทย์</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> ผู้ป่วย</a></li>
            <li class="active"><a href="/admin/treatments"><i class="fas fa-tooth"></i> การรักษา</a></li>
        </ul>
    </div>

    <div class="main">
        <div class="top-bar">
            <div class="page-info">
                <h1>แก้ไขการรักษา</h1>
                <p>แก้ไขข้อมูลการรักษาและทันตแพทย์ที่รับผิดชอบ</p>
            </div>
            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon"></i>
                    <div class="notification-badge" id="notificationBadge">0</div>
                </div>
                <div class="avatar" id="userAvatar">A</div>
            </div>
        </div>

        <div class="content">
            <div class="loading" id="loadingState">
                <i class="fas fa-spinner"></i>
                <p>กำลังโหลดข้อมูล...</p>
            </div>

            <form id="editTreatmentForm" class="form-container" style="display: none;">
                <div class="form-header">
                    <div>
                        <h2>ข้อมูลการรักษา</h2>
                        <p>ปรับปรุงรายละเอียดและทันตแพทย์ที่รับผิดชอบ</p>
                    </div>
                    <div class="treatment-id-badge" id="treatmentIdBadge">
                        กำลังโหลด...
                    </div>
                </div>

                <div class="form-body">
                    <div class="form-section">
                        <h3 class="section-title">
                            <i class="fas fa-tooth"></i>
                            รายละเอียดการรักษา
                        </h3>
                        <div class="form-row">
                            <div class="form-group">
                                <label for="treatmentName">ชื่อการรักษา <span class="required">*</span></label>
                                <input type="text" id="treatmentName" name="treatment_name" class="form-control" required />
                                <div class="error-message">กรุณากรอกชื่อการรักษา</div>
                            </div>
                            <div class="form-group">
                                <label for="duration">ระยะเวลา (นาที) <span class="required">*</span></label>
                                <input type="number" id="duration" name="duration" class="form-control" required min="1" max="480" />
                                <div class="field-help">ระยะเวลาเป็นนาที (1-480)</div>
                                <div class="error-message">กรุณากรอกระยะเวลาที่ถูกต้อง</div>
                            </div>
                        </div>
                    </div>

                    <div class="form-section">
                        <h3 class="section-title">
                            <i class="fas fa-user-md"></i>
                            ทันตแพทย์ที่รับผิดชอบ
                        </h3>
                        <div class="form-row single">
                            <div class="form-group">
                                <label>เลือกทันตแพทย์ <span class="required">*</span></label>
                                <div class="dentist-selector" style="position: relative;">
                                    <div class="selected-dentists" id="selectedDentists">
                                        <div class="add-dentist-btn" onclick="toggleDentistDropdown()">
                                            <i class="fas fa-plus"></i>
                                            เพิ่มทันตแพทย์
                                        </div>
                                    </div>
                                    <div class="dentist-dropdown" id="dentistDropdown"></div>
                                </div>
                                <div class="field-help">เลือกทันตแพทย์ที่สามารถทำการรักษานี้ได้</div>
                                <div class="error-message">ต้องเลือกทันตแพทย์อย่างน้อย 1 คน</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-actions">
                    <div class="changes-summary">
                        <span id="changesText">ยังไม่มีการเปลี่ยนแปลง</span>
                    </div>
                    <div>
                        <a href="/admin/treatments" class="btn btn-secondary">
                            <i class="fas fa-times"></i>
                            ยกเลิก
                        </a>
                        <button type="button" class="btn btn-warning" onclick="resetChanges()" id="resetBtn" disabled>
                            <i class="fas fa-undo"></i>
                            รีเซ็ต
                        </button>
                        <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                            <i class="fas fa-save"></i>
                            บันทึก
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div id="confirmModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">ยืนยันการเปลี่ยนแปลง</h3>
            </div>
            <div id="modalMessage" style="margin-bottom: 20px; color: #666;">
                คุณแน่ใจหรือไม่ว่าต้องการบันทึกการเปลี่ยนแปลงเหล่านี้?
            </div>
            <div class="modal-actions">
                <button class="btn btn-secondary" onclick="closeModal()">ยกเลิก</button>
                <button class="btn btn-primary" id="confirmSaveBtn">
                    <i class="fas fa-check"></i>
                    บันทึก
                </button>
            </div>
        </div>
    </div>

    <script>
        let originalData = {};
        let currentData = {};
        let treatmentId = null;
        let isSubmitting = false;
        let hasChanges = false;
        let allDentists = [];
        let selectedDentistIds = [];

        document.addEventListener('DOMContentLoaded', function() {
            extractTreatmentId();
            loadTreatmentData();
            setupFormHandlers();
            setupChangeTracking();
        });

        function extractTreatmentId() {
            const path = window.location.pathname;
            const matches = path.match(/\/treatments\/(\d+)\/edit/);
            if (matches) {
                treatmentId = parseInt(matches[1]);
                document.getElementById('treatmentIdBadge').textContent = `รหัส: ${treatmentId}`;
            } else {
                showToast('รหัสการรักษาไม่ถูกต้อง', 'error');
                setTimeout(() => window.location.href = '/admin/treatments', 2000);
            }
        }

        async function loadTreatmentData() {
            if (!treatmentId) return;

            try {
                showLoading(true);
                
                const treatmentResponse = await fetch(`/admin/api/treatments/${treatmentId}`);
                if (!treatmentResponse.ok) throw new Error('ไม่สามารถโหลดข้อมูลได้');
                
                const treatmentData = await treatmentResponse.json();
                if (!treatmentData.success) throw new Error(treatmentData.error);

                const dentistsResponse = await fetch('/admin/api/dentists');
                if (!dentistsResponse.ok) throw new Error('ไม่สามารถโหลดข้อมูลทันตแพทย์ได้');
                
                const dentistsData = await dentistsResponse.json();
                if (!dentistsData.success) throw new Error(dentistsData.error);

                const treatmentDentistsResponse = await fetch(`/admin/api/treatments/${treatmentId}/dentists`);
                let assignedDentists = [];
                if (treatmentDentistsResponse.ok) {
                    const treatmentDentistsData = await treatmentDentistsResponse.json();
                    if (treatmentDentistsData.success) {
                        assignedDentists = treatmentDentistsData.dentists;
                    }
                }

                allDentists = dentistsData.dentists || [];
                selectedDentistIds = assignedDentists.map(d => d.dentist_id);
                
                populateForm(treatmentData.treatment);
                setupDentistSelector();
                
                originalData = {
                    treatment_name: treatmentData.treatment.treatment_name,
                    duration: treatmentData.treatment.duration,
                    dentist_ids: [...selectedDentistIds]
                };
                currentData = { ...originalData };
                
            } catch (error) {
                console.error('Error:', error);
                showToast('ไม่สามารถโหลดข้อมูลได้: ' + error.message, 'error');
                setTimeout(() => window.location.href = '/admin/treatments', 3000);
            } finally {
                showLoading(false);
            }
        }

        function populateForm(treatment) {
            document.getElementById('treatmentName').value = treatment.treatment_name || '';
            document.getElementById('duration').value = treatment.duration || '';
            document.getElementById('editTreatmentForm').style.display = 'block';
            updateSelectedDentistsDisplay();
        }

        function setupDentistSelector() {
            const dropdown = document.getElementById('dentistDropdown');
            dropdown.innerHTML = allDentists.map(dentist => `
                <div class="dentist-option" data-id="${dentist.dentist_id}" onclick="toggleDentistSelection(${dentist.dentist_id})">
                    ทพ. ${dentist.fname} ${dentist.lname}${dentist.specialty ? ' - ' + dentist.specialty : ''}
                </div>
            `).join('');
            updateDentistOptions();
        }

        function updateSelectedDentistsDisplay() {
            const container = document.getElementById('selectedDentists');
            const selectedDentists = allDentists.filter(d => selectedDentistIds.includes(d.dentist_id));
            
            container.innerHTML = selectedDentists.map(dentist => `
                <div class="dentist-chip">
                    ทพ. ${dentist.fname} ${dentist.lname}
                    <span class="remove-btn" onclick="removeDentist(${dentist.dentist_id})">
                        <i class="fas fa-times"></i>
                    </span>
                </div>
            `).join('') + `
                <div class="add-dentist-btn" onclick="toggleDentistDropdown()">
                    <i class="fas fa-plus"></i>
                    เพิ่มทันตแพทย์
                </div>
            `;
        }

        function updateDentistOptions() {
            const options = document.querySelectorAll('.dentist-option');
            options.forEach(option => {
                const dentistId = parseInt(option.dataset.id);
                if (selectedDentistIds.includes(dentistId)) {
                    option.classList.add('selected');
                } else {
                    option.classList.remove('selected');
                }
            });
        }

        function toggleDentistDropdown() {
            const dropdown = document.getElementById('dentistDropdown');
            dropdown.classList.toggle('show');
            updateDentistOptions();
        }

        function toggleDentistSelection(dentistId) {
            if (selectedDentistIds.includes(dentistId)) {
                selectedDentistIds = selectedDentistIds.filter(id => id !== dentistId);
            } else {
                selectedDentistIds.push(dentistId);
            }
            updateSelectedDentistsDisplay();
            updateDentistOptions();
            trackChange('dentist_ids', selectedDentistIds);
        }

        function removeDentist(dentistId) {
            selectedDentistIds = selectedDentistIds.filter(id => id !== dentistId);
            updateSelectedDentistsDisplay();
            updateDentistOptions();
            trackChange('dentist_ids', selectedDentistIds);
        }

        function setupFormHandlers() {
            document.getElementById('editTreatmentForm').addEventListener('submit', handleFormSubmission);
            
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });
            });

            document.addEventListener('click', function(event) {
                const selector = document.querySelector('.dentist-selector');
                if (selector && !selector.contains(event.target)) {
                    document.getElementById('dentistDropdown').classList.remove('show');
                }
            });
        }

        function setupChangeTracking() {
            const inputs = document.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    const fieldName = this.name;
                    const currentValue = this.value;
                    const originalValue = originalData[fieldName] || '';
                    
                    if (currentValue !== originalValue.toString()) {
                        trackChange(fieldName, currentValue);
                        this.classList.add('field-changed');
                    } else {
                        untrackChange(fieldName);
                        this.classList.remove('field-changed');
                    }
                });
            });
        }

        function trackChange(fieldName, value) {
            currentData[fieldName] = value;
            updateChangesDisplay();
        }

        function untrackChange(fieldName) {
            currentData[fieldName] = originalData[fieldName];
            updateChangesDisplay();
        }

        function updateChangesDisplay() {
            const changedFields = [];
            
            Object.keys(currentData).forEach(key => {
                if (key === 'dentist_ids') {
                    const current = Array.isArray(currentData[key]) ? currentData[key] : [];
                    const original = Array.isArray(originalData[key]) ? originalData[key] : [];
                    if (JSON.stringify(current.sort()) !== JSON.stringify(original.sort())) {
                        changedFields.push(key);
                    }
                } else {
                    if (currentData[key] !== (originalData[key] || '').toString()) {
                        changedFields.push(key);
                    }
                }
            });

            hasChanges = changedFields.length > 0;
            
            const changesText = document.getElementById('changesText');
            const submitBtn = document.getElementById('submitBtn');
            const resetBtn = document.getElementById('resetBtn');

            if (hasChanges) {
                changesText.innerHTML = `<span class="changes-count">${changedFields.length}</span> ฟิลด์ที่เปลี่ยนแปลง`;
                submitBtn.disabled = false;
                resetBtn.disabled = false;
            } else {
                changesText.textContent = 'ยังไม่มีการเปลี่ยนแปลง';
                submitBtn.disabled = true;
                resetBtn.disabled = true;
            }
        }

        function resetChanges() {
            document.getElementById('treatmentName').value = originalData.treatment_name || '';
            document.getElementById('duration').value = originalData.duration || '';
            selectedDentistIds = [...(originalData.dentist_ids || [])];
            updateSelectedDentistsDisplay();
            updateDentistOptions();
            currentData = { ...originalData };
            
            const changedFields = document.querySelectorAll('.field-changed');
            changedFields.forEach(field => field.classList.remove('field-changed'));
            
            updateChangesDisplay();
            showToast('รีเซ็ตการเปลี่ยนแปลงแล้ว', 'info');
        }

        function validateField(field) {
            const group = field.parentElement;
            const value = field.value.trim();

            group.classList.remove('error', 'success');

            if (field.hasAttribute('required') && !value) {
                group.classList.add('error');
                return false;
            }

            if (field.name === 'duration' && value) {
                const duration = parseInt(value);
                if (isNaN(duration) || duration < 1 || duration > 480) {
                    group.classList.add('error');
                    return false;
                }
            }

            return true;
        }

        async function handleFormSubmission(e) {
            e.preventDefault();
            
            if (isSubmitting || !hasChanges) return;

            if (!validateAllFields()) {
                showToast('กรุณาแก้ไขข้อผิดพลาดในฟอร์ม', 'error');
                return;
            }

            if (selectedDentistIds.length === 0) {
                showToast('ต้องเลือกทันตแพทย์อย่างน้อย 1 คน', 'error');
                return;
            }

            showConfirmationModal();
        }

        function showConfirmationModal() {
            const modal = document.getElementById('confirmModal');
            const message = document.getElementById('modalMessage');
            
            const changedFields = [];
            Object.keys(currentData).forEach(key => {
                if (key === 'dentist_ids') {
                    const current = Array.isArray(currentData[key]) ? currentData[key] : [];
                    const original = Array.isArray(originalData[key]) ? originalData[key] : [];
                    if (JSON.stringify(current.sort()) !== JSON.stringify(original.sort())) {
                        changedFields.push('ทันตแพทย์ที่รับผิดชอบ');
                    }
                } else {
                    if (currentData[key] !== (originalData[key] || '').toString()) {
                        changedFields.push(formatFieldName(key));
                    }
                }
            });
            
            message.innerHTML = `
                <p>คุณกำลังจะบันทึกการเปลี่ยนแปลงในฟิลด์:</p>
                <ul style="margin: 10px 0; padding-left: 20px;">
                    ${changedFields.map(field => `<li><strong>${field}</strong></li>`).join('')}
                </ul>
                <p>คุณแน่ใจหรือไม่?</p>
            `;
            
            modal.style.display = 'flex';
        }

        function formatFieldName(fieldName) {
            const fieldNames = {
                treatment_name: 'ชื่อการรักษา',
                duration: 'ระยะเวลา',
                dentist_ids: 'ทันตแพทย์ที่รับผิดชอบ'
            };
            return fieldNames[fieldName] || fieldName;
        }

        function closeModal() {
            document.getElementById('confirmModal').style.display = 'none';
        }

        document.getElementById('confirmSaveBtn').addEventListener('click', async function() {
            closeModal();
            await saveChanges();
        });

        async function saveChanges() {
            isSubmitting = true;
            const submitBtn = document.getElementById('submitBtn');
            
            submitBtn.classList.add('btn-loading');
            submitBtn.disabled = true;

            try {
                const updateData = {
                    treatment_name: currentData.treatment_name,
                    duration: parseInt(currentData.duration),
                    dentist_ids: selectedDentistIds
                };

                const response = await fetch(`/admin/api/treatments/${treatmentId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(updateData)
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    showToast('บันทึกข้อมูลสำเร็จ!', 'success');
                    
                    setTimeout(() => {
                        window.location.href = '/admin/treatments';
                    }, 1500);
                } else {
                    throw new Error(result.error || 'ไม่สามารถบันทึกข้อมูลได้');
                }

            } catch (error) {
                console.error('Error:', error);
                showToast('ไม่สามารถบันทึกข้อมูลได้: ' + error.message, 'error');
            } finally {
                isSubmitting = false;
                submitBtn.classList.remove('btn-loading');
                submitBtn.disabled = false;
            }
        }

        function validateAllFields() {
            const form = document.getElementById('editTreatmentForm');
            const requiredFields = form.querySelectorAll('.form-control[required]');
            let isValid = true;

            requiredFields.forEach(field => {
                if (!validateField(field)) {
                    isValid = false;
                }
            });

            return isValid;
        }

        function showLoading(show) {
            const loadingState = document.getElementById('loadingState');
            const form = document.getElementById('editTreatmentForm');

            if (show) {
                loadingState.style.display = 'block';
                form.style.display = 'none';
            } else {
                loadingState.style.display = 'none';
            }
        }

        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            const icon = {
                success: 'fas fa-check-circle',
                error: 'fas fa-exclamation-triangle',
                info: 'fas fa-info-circle'
            };

            toast.innerHTML = `
                <i class="${icon[type]}"></i>
                ${message}
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.remove();
                }
            }, 4000);
        }

        document.addEventListener('click', function(event) {
            const modal = document.getElementById('confirmModal');
            if (event.target === modal) {
                closeModal();
            }
        });

        document.addEventListener('keydown', function(event) {
            if (event.ctrlKey && event.key === 's') {
                event.preventDefault();
                if (hasChanges) {
                    showConfirmationModal();
                }
            }
            
            if (event.ctrlKey && event.key === 'r') {
                event.preventDefault();
                if (hasChanges) {
                    resetChanges();
                }
            }
            
            if (event.key === 'Escape') {
                document.getElementById('dentistDropdown').classList.remove('show');
                closeModal();
            }
        });

        window.addEventListener('beforeunload', function(e) {
            if (hasChanges && !isSubmitting) {
                e.preventDefault();
                e.returnValue = 'คุณมีการเปลี่ยนแปลงที่ยังไม่ได้บันทึก ต้องการออกจากหน้านี้หรือไม่?';
                return e.returnValue;
            }
        });
    </script>
</body>
</html>