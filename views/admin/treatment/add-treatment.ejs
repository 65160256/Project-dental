<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>เพิ่มการรักษา - คลินิกยิ้ม</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif, 'Sarabun', sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: relative;
        }

        .page-info h1 {
            margin: 0 0 5px 0;
            font-size: 24px;
            color: #333;
            font-weight: 600;
        }

        .page-info p {
            margin: 0;
            color: #666;
            font-size: 13px;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            position: relative;
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
            font-size: 18px;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: 600;
            display: none;
        }

        .notification-badge.show {
            display: flex;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .notification-dropdown {
            position: absolute;
            top: 100%;
            right: -10px;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            min-width: 380px;
            max-width: 420px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            z-index: 2000;
            display: none;
            max-height: 500px;
            overflow: hidden;
        }

        .notification-dropdown.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .notification-header {
            padding: 20px;
            border-bottom: 1px solid #e1e5e9;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .notification-header h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

        .mark-all-btn {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 6px 12px;
            border-radius: 6px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .mark-all-btn:hover {
            background: rgba(255,255,255,0.3);
        }

        .notification-content {
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-item {
            padding: 15px 20px;
            border-bottom: 1px solid #f1f3f4;
            cursor: pointer;
            transition: background 0.2s ease;
        }

        .notification-item:hover {
            background: #f8f9fa;
        }

        .notification-item.unread {
            background: #f0f8ff;
            border-left: 4px solid #4A90E2;
        }

        .notification-title {
            font-weight: 600;
            color: #333;
            font-size: 14px;
            margin-bottom: 4px;
        }

        .notification-message {
            color: #666;
            font-size: 13px;
            margin-bottom: 6px;
            line-height: 1.4;
        }

        .notification-time {
            color: #999;
            font-size: 11px;
        }

        .empty-notifications {
            padding: 40px 20px;
            text-align: center;
            color: #666;
        }

        .empty-notifications i {
            font-size: 32px;
            color: #ddd;
            margin-bottom: 15px;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            min-width: 160px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .dropdown-menu a {
            display: block;
            padding: 10px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        .dropdown-menu hr {
            margin: 5px 0;
            border: none;
            border-top: 1px solid #e1e5e9;
        }

        .content {
            padding: 30px;
        }

        .form-container {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .form-header {
            background: linear-gradient(135deg, rgba(74, 144, 226, 0.1), rgba(45, 168, 255, 0.1));
            padding: 25px 30px;
            border-bottom: 1px solid #e1e5e9;
        }

        .form-header h2 {
            margin: 0 0 5px 0;
            font-size: 20px;
            color: #333;
            font-weight: 600;
        }

        .form-header p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }

        .form-body {
            padding: 30px;
        }

        .form-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            border-left: 4px solid #4A90E2;
            margin-bottom: 25px;
        }

        .section-title {
            margin: 0 0 20px 0;
            font-size: 16px;
            font-weight: 600;
            color: #333;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .section-title i {
            color: #4A90E2;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-row.single {
            grid-template-columns: 1fr;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            margin-bottom: 6px;
            font-weight: 500;
            color: #333;
            font-size: 14px;
        }

        .required {
            color: #e74c3c;
            margin-left: 2px;
        }

        .form-control {
            padding: 12px 15px;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: white;
        }

        .form-control:focus {
            outline: none;
            border-color: #4A90E2;
            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        }

        .field-help {
            font-size: 12px;
            color: #666;
            margin-top: 4px;
        }

        .error-message {
            color: #e74c3c;
            font-size: 12px;
            margin-top: 4px;
            display: none;
        }

        .form-group.error .error-message {
            display: block;
        }

        .form-group.error .form-control {
            border-color: #e74c3c;
            background: #fdf2f2;
        }

        .form-group.success .form-control {
            border-color: #27ae60;
            background: #f0fff4;
        }

        .dentist-selector {
            position: relative;
        }

        .selected-dentists {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
            min-height: 40px;
            padding: 8px;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            background: white;
        }

        .dentist-chip {
            background: #e3f2fd;
            color: #1976d2;
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .dentist-chip .remove-btn {
            cursor: pointer;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background: rgba(25, 118, 210, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            transition: all 0.2s ease;
        }

        .dentist-chip .remove-btn:hover {
            background: rgba(25, 118, 210, 0.3);
        }

        .dentist-dropdown {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 100;
            display: none;
            max-height: 200px;
            overflow-y: auto;
        }

        .dentist-dropdown.show {
            display: block;
        }

        .dentist-option {
            padding: 12px 15px;
            cursor: pointer;
            transition: background 0.2s ease;
            font-size: 14px;
        }

        .dentist-option:hover {
            background: #f8f9fa;
        }

        .dentist-option.selected {
            background: #e3f2fd;
            color: #1976d2;
        }

        .add-dentist-btn {
            background: #f8f9fa;
            border: 1px dashed #e1e5e9;
            color: #666;
            padding: 8px 12px;
            border-radius: 15px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .add-dentist-btn:hover {
            background: #e9ecef;
            border-color: #4A90E2;
            color: #4A90E2;
        }

        .no-dentists {
            color: #999;
            font-style: italic;
            font-size: 14px;
            padding: 20px;
            text-align: center;
        }

        .form-actions {
            background: #f8f9fa;
            padding: 25px 30px;
            border-top: 1px solid #e1e5e9;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .form-info {
            font-size: 13px;
            color: #666;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .btn-primary:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .btn-primary:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #666;
            border: 1px solid #e1e5e9;
        }

        .btn-secondary:hover {
            background: #e9ecef;
        }

        .btn-loading {
            position: relative;
            color: transparent !important;
        }

        .btn-loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        .loading {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .loading i {
            font-size: 32px;
            animation: spin 1s linear infinite;
            margin-bottom: 15px;
            display: block;
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            min-width: 300px;
        }

        .toast.success {
            background: #10b981;
        }

        .toast.error {
            background: #ef4444;
        }

        .toast.info {
            background: #3b82f6;
        }

        .toast.warning {
            background: #f59e0b;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .form-row {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .form-actions {
                flex-direction: column;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>คลินิกยิ้ม</h3>
        </div>
        <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-calendar-alt"></i> ตารางนัด</a></li>
            <li><a href="/admin/appointments"><i class="fas fa-hospital"></i> นัดหมาย</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> ทันตแพทย์</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> ผู้ป่วย</a></li>
            <li class="active"><a href="/admin/treatments"><i class="fas fa-tooth"></i> การรักษา</a></li>
        </ul>
    </div>

    <div class="main">
        <div class="top-bar">
            <div class="page-info">
                <h1>เพิ่มการรักษาใหม่</h1>
                <p>สร้างการรักษาใหม่และมอบหมายทันตแพทย์ที่มีคุณสมบัติ</p>
            </div>

            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon" onclick="toggleNotifications()"></i>
                    <div class="notification-badge" id="notificationBadge">0</div>
                    
                    <div class="notification-dropdown" id="notificationDropdown">
                        <div class="notification-header">
                            <h3>การแจ้งเตือน</h3>
                            <button class="mark-all-btn" onclick="markAllAsRead()">ทำเครื่องหมายอ่านทั้งหมด</button>
                        </div>
                        <div class="notification-content" id="notificationContent">
                            <div class="empty-notifications">
                                <i class="fas fa-bell-slash"></i>
                                <p>กำลังโหลดการแจ้งเตือน...</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar" id="userAvatar">A</div>
                        <div class="user-details">
                            <strong>สวัสดี ผู้ดูแลระบบ</strong>
                            <small>ผู้ดูแลระบบ</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/admin/profile">โปรไฟล์ของฉัน</a>
                        <hr />
                        <a href="/logout">ออกจากระบบ</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="content">
            <div class="loading" id="loadingState">
                <i class="fas fa-spinner"></i>
                <p>กำลังโหลดข้อมูลฟอร์ม...</p>
            </div>

            <form id="addTreatmentForm" class="form-container" style="display: none;">
                <div class="form-header">
                    <h2>ข้อมูลการรักษา</h2>
                    <p>กรอกรายละเอียดสำหรับการรักษาใหม่</p>
                </div>

                <div class="form-body">
                    <div class="form-section">
                        <h3 class="section-title">
                            <i class="fas fa-tooth"></i>
                            รายละเอียดการรักษา
                        </h3>

                        <div class="form-row">
                            <div class="form-group">
                                <label for="treatmentName">ชื่อการรักษา <span class="required">*</span></label>
                                <input type="text" id="treatmentName" name="name" class="form-control" required />
                                <div class="field-help">กรุณาใส่ชื่อที่อธิบายการรักษา</div>
                                <div class="error-message">กรุณากรอกชื่อการรักษา</div>
                            </div>
                            <div class="form-group">
                                <label for="duration">ระยะเวลา (นาที) <span class="required">*</span></label>
                                <input type="number" id="duration" name="duration" class="form-control" required min="1" max="480" />
                                <div class="field-help">ระยะเวลาเป็นนาที (1-480)</div>
                                <div class="error-message">กรุณากรอกระยะเวลาที่ถูกต้อง</div>
                            </div>
                        </div>
                    </div>

                    <div class="form-section">
                        <h3 class="section-title">
                            <i class="fas fa-user-md"></i>
                            มอบหมายทันตแพทย์
                        </h3>

                        <div class="form-row single">
                            <div class="form-group">
                                <label>เลือกทันตแพทย์ <span class="required">*</span></label>
                                <div class="dentist-selector">
                                    <div class="selected-dentists" id="selectedDentists">
                                        <div class="add-dentist-btn" onclick="toggleDentistDropdown()">
                                            <i class="fas fa-plus"></i>
                                            เพิ่มทันตแพทย์
                                        </div>
                                    </div>
                                    <div class="dentist-dropdown" id="dentistDropdown">
                                        <div class="no-dentists">กำลังโหลดทันตแพทย์...</div>
                                    </div>
                                </div>
                                <div class="field-help">เลือกทันตแพทย์อย่างน้อยหนึ่งคนที่สามารถทำการรักษานี้ได้</div>
                                <div class="error-message">ต้องเลือกทันตแพทย์อย่างน้อยหนึ่งคน</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-actions">
                    <div class="form-info">
                        ช่องที่มีเครื่องหมาย <span class="required">*</span> จำเป็นต้องกรอก
                    </div>
                    <div>
                        <a href="/admin/treatments" class="btn btn-secondary">
                            <i class="fas fa-times"></i>
                            ยกเลิก
                        </a>
                        <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                            <i class="fas fa-plus"></i>
                            เพิ่มการรักษา
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        let allDentists = [];
        let selectedDentistIds = [];
        let isSubmitting = false;

        document.addEventListener('DOMContentLoaded', function() {
            loadDentists();
            loadUserInfo();
            loadNotifications();
            setupFormHandlers();
            setupValidation();
        });

        async function loadDentists() {
            try {
                showLoading(true);
                
                const response = await fetch('/admin/api/dentists');
                if (!response.ok) {
                    throw new Error('ไม่สามารถโหลดข้อมูลทันตแพทย์');
                }
                
                const data = await response.json();
                if (!data.success) {
                    throw new Error(data.error || 'ไม่สามารถโหลดข้อมูลทันตแพทย์');
                }

                allDentists = data.dentists || [];
                setupDentistSelector();
                
                document.getElementById('addTreatmentForm').style.display = 'block';
                
            } catch (error) {
                console.error('Error loading dentists:', error);
                showToast('ไม่สามารถโหลดข้อมูลทันตแพทย์: ' + error.message, 'error');
            } finally {
                showLoading(false);
            }
        }

        function setupDentistSelector() {
            const dropdown = document.getElementById('dentistDropdown');
            
            if (allDentists.length === 0) {
                dropdown.innerHTML = '<div class="no-dentists">ไม่มีทันตแพทย์</div>';
                return;
            }
            
            dropdown.innerHTML = allDentists.map(dentist => `
                <div class="dentist-option" data-id="${dentist.dentist_id}" onclick="toggleDentistSelection(${dentist.dentist_id})">
                    ทพ. ${dentist.fname} ${dentist.lname} - ${dentist.specialty || 'ทั่วไป'}
                </div>
            `).join('');
        }

        function updateSelectedDentistsDisplay() {
            const container = document.getElementById('selectedDentists');
            const selectedDentists = allDentists.filter(d => selectedDentistIds.includes(d.dentist_id));
            
            container.innerHTML = selectedDentists.map(dentist => `
                <div class="dentist-chip">
                    ทพ. ${dentist.fname} ${dentist.lname}
                    <span class="remove-btn" onclick="removeDentist(${dentist.dentist_id})">
                        <i class="fas fa-times"></i>
                    </span>
                </div>
            `).join('') + `
                <div class="add-dentist-btn" onclick="toggleDentistDropdown()">
                    <i class="fas fa-plus"></i>
                    เพิ่มทันตแพทย์
                </div>
            `;
            
            updateFormValidation();
        }

        function updateDentistOptions() {
            const options = document.querySelectorAll('.dentist-option');
            options.forEach(option => {
                const dentistId = parseInt(option.dataset.id);
                if (selectedDentistIds.includes(dentistId)) {
                    option.classList.add('selected');
                } else {
                    option.classList.remove('selected');
                }
            });
        }

        function toggleDentistDropdown() {
            const dropdown = document.getElementById('dentistDropdown');
            dropdown.classList.toggle('show');
            updateDentistOptions();
        }

        function toggleDentistSelection(dentistId) {
            if (selectedDentistIds.includes(dentistId)) {
                selectedDentistIds = selectedDentistIds.filter(id => id !== dentistId);
            } else {
                selectedDentistIds.push(dentistId);
            }
            
            updateSelectedDentistsDisplay();
            updateDentistOptions();
        }

        function removeDentist(dentistId) {
            selectedDentistIds = selectedDentistIds.filter(id => id !== dentistId);
            updateSelectedDentistsDisplay();
            updateDentistOptions();
        }

        function setupFormHandlers() {
            const form = document.getElementById('addTreatmentForm');

            form.addEventListener('submit', handleFormSubmission);

            const durationInput = document.getElementById('duration');
            durationInput.addEventListener('input', function() {
                this.value = this.value.replace(/[^\d]/g, '');
                if (parseInt(this.value) > 480) this.value = '480';
                validateField(this);
                updateFormValidation();
            });

            const nameInput = document.getElementById('treatmentName');
            nameInput.addEventListener('input', function() {
                validateField(this);
                updateFormValidation();
            });

            document.addEventListener('click', function(event) {
                const selector = document.querySelector('.dentist-selector');
                if (!selector.contains(event.target)) {
                    document.getElementById('dentistDropdown').classList.remove('show');
                }
            });
        }

        function setupValidation() {
            const inputs = document.querySelectorAll('.form-control');
            
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });

                input.addEventListener('input', function() {
                    if (this.parentElement.classList.contains('error')) {
                        validateField(this);
                    }
                });
            });
        }

        function validateField(field) {
            const group = field.parentElement;
            const value = field.value.trim();

            group.classList.remove('error', 'success');

            if (field.hasAttribute('required') && !value) {
                group.classList.add('error');
                return false;
            }

            if (field.name === 'duration' && value) {
                const duration = parseInt(value);
                if (isNaN(duration) || duration < 1 || duration > 480) {
                    group.classList.add('error');
                    return false;
                }
            }

            if (field.name === 'name' && value && value.length < 2) {
                group.classList.add('error');
                return false;
            }

            group.classList.add('success');
            return true;
        }

        function updateFormValidation() {
            const nameValid = validateField(document.getElementById('treatmentName'));
            const durationValid = validateField(document.getElementById('duration'));
            const dentistsSelected = selectedDentistIds.length > 0;
            
            const submitBtn = document.getElementById('submitBtn');
            const allValid = nameValid && durationValid && dentistsSelected;
            
            submitBtn.disabled = !allValid;
            
            const dentistGroup = document.querySelector('.dentist-selector').closest('.form-group');
            if (dentistsSelected) {
                dentistGroup.classList.remove('error');
                dentistGroup.classList.add('success');
            } else {
                dentistGroup.classList.remove('success');
                if (document.getElementById('treatmentName').value && document.getElementById('duration').value) {
                    dentistGroup.classList.add('error');
                }
            }
        }

        async function handleFormSubmission(e) {
            e.preventDefault();
            
            if (isSubmitting) return;

            const nameField = document.getElementById('treatmentName');
            const durationField = document.getElementById('duration');
            
            if (!validateField(nameField) || !validateField(durationField)) {
                showToast('กรุณาแก้ไขข้อผิดพลาดในฟอร์ม', 'error');
                return;
            }

            if (selectedDentistIds.length === 0) {
                showToast('ต้องเลือกทันตแพทย์อย่างน้อยหนึ่งคน', 'error');
                return;
            }

            await createTreatment();
        }

        async function createTreatment() {
            isSubmitting = true;
            const submitBtn = document.getElementById('submitBtn');
            
            submitBtn.classList.add('btn-loading');
            submitBtn.disabled = true;

            try {
                const treatmentData = {
                    name: document.getElementById('treatmentName').value.trim(),
                    duration: parseInt(document.getElementById('duration').value),
                    dentist_ids: selectedDentistIds
                };

                const response = await fetch('/admin/api/treatments', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(treatmentData)
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    showToast('สร้างการรักษาสำเร็จ!', 'success');
                    
                    try {
                        await fetch('/admin/api/notifications', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                type: 'treatment_create',
                                title: 'เพิ่มการรักษาใหม่',
                                message: `การรักษา "${treatmentData.name}" ถูกเพิ่มเข้าสู่ระบบแล้ว`
                            })
                        });
                    } catch (notificationError) {
                        console.warn('ไม่สามารถสร้างการแจ้งเตือน:', notificationError);
                    }
                    
                    setTimeout(() => {
                        window.location.href = '/admin/treatments';
                    }, 1500);
                } else {
                    throw new Error(result.error || 'ไม่สามารถสร้างการรักษา');
                }

            } catch (error) {
                console.error('Error creating treatment:', error);
                showToast('ไม่สามารถสร้างการรักษา: ' + error.message, 'error');
            } finally {
                isSubmitting = false;
                submitBtn.classList.remove('btn-loading');
                updateFormValidation();
            }
        }

        function showLoading(show) {
            const loadingState = document.getElementById('loadingState');
            const form = document.getElementById('addTreatmentForm');

            if (show) {
                loadingState.style.display = 'block';
                form.style.display = 'none';
            } else {
                loadingState.style.display = 'none';
            }
        }

        async function loadUserInfo() {
            try {
                const response = await fetch('/admin/profile/api');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        const firstLetter = data.email ? data.email.charAt(0).toUpperCase() : 'A';
                        document.getElementById('userAvatar').textContent = firstLetter;
                        
                        const userDetails = document.querySelector('.user-details strong');
                        if (userDetails) {
                            userDetails.textContent = `สวัสดี ${data.role || 'ผู้ดูแลระบบ'}`;
                        }
                    }
                }
            } catch (error) {
                console.error('Error loading user info:', error);
                document.getElementById('userAvatar').textContent = 'A';
            }
        }

        async function loadNotifications() {
            try {
                const response = await fetch('/admin/api/notifications?limit=10');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        updateNotificationDisplay(data.notifications, data.pagination.unread_count);
                    }
                }
            } catch (error) {
                console.error('Error loading notifications:', error);
                showEmptyNotifications();
            }
        }

        function updateNotificationDisplay(notifications, unreadCount) {
            const badge = document.getElementById('notificationBadge');
            const content = document.getElementById('notificationContent');

            if (unreadCount > 0) {
                badge.textContent = unreadCount > 99 ? '99+' : unreadCount;
                badge.classList.add('show');
            } else {
                badge.classList.remove('show');
            }

            if (notifications.length === 0) {
                showEmptyNotifications();
                return;
            }

            content.innerHTML = notifications.map(notification => {
                const timeAgo = getTimeAgo(new Date(notification.created_at));
                return `
                    <div class="notification-item ${!notification.is_read ? 'unread' : ''}" 
                         onclick="markAsRead(${notification.id})">
                        <div class="notification-title">${notification.title}</div>
                        <div class="notification-message">${notification.message}</div>
                        <div class="notification-time">${timeAgo}</div>
                    </div>
                `;
            }).join('');
        }

        function showEmptyNotifications() {
            document.getElementById('notificationContent').innerHTML = `
                <div class="empty-notifications">
                    <i class="fas fa-bell-slash"></i>
                    <p>ไม่มีการแจ้งเตือนใหม่</p>
                </div>
            `;
        }

        function toggleNotifications() {
            const dropdown = document.getElementById('notificationDropdown');
            const isVisible = dropdown.classList.contains('show');
            
            if (isVisible) {
                dropdown.classList.remove('show');
            } else {
                dropdown.classList.add('show');
                loadNotifications();
            }
        }

        async function markAsRead(notificationId) {
            try {
                const response = await fetch(`/admin/api/notifications/${notificationId}/read`, {
                    method: 'POST'
                });
                
                if (response.ok) {
                    loadNotifications();
                }
            } catch (error) {
                console.error('Error marking notification as read:', error);
            }
        }

        async function markAllAsRead() {
            try {
                const response = await fetch('/admin/api/notifications/read-all', {
                    method: 'POST'
                });
                
                if (response.ok) {
                    loadNotifications();
                    showToast('ทำเครื่องหมายอ่านทั้งหมดแล้ว', 'success');
                }
            } catch (error) {
                console.error('Error marking all notifications as read:', error);
                showToast('ไม่สามารถทำเครื่องหมายอ่านการแจ้งเตือน', 'error');
            }
        }

        function toggleDropdown() {
            const menu = document.getElementById('profileDropdown');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            const icon = {
                success: 'fas fa-check-circle',
                error: 'fas fa-exclamation-triangle',
                warning: 'fas fa-exclamation-circle',
                info: 'fas fa-info-circle'
            };

            toast.innerHTML = `
                <i class="${icon[type]}"></i>
                ${message}
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => {
                    if (toast.parentNode) {
                        toast.remove();
                    }
                }, 300);
            }, 4000);
        }

        function getTimeAgo(date) {
            const now = new Date();
            const diffInSeconds = Math.floor((now - date) / 1000);
            
            if (diffInSeconds < 60) return 'เมื่อสักครู่';
            if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} นาทีที่แล้ว`;
            if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} ชั่วโมงที่แล้ว`;
            if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} วันที่แล้ว`;
            
            return date.toLocaleDateString('th-TH', {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                hour12: false
            });
        }

        document.addEventListener('click', function(event) {
            const profileDropdown = document.querySelector('.profile-dropdown');
            if (!profileDropdown.contains(event.target)) {
                document.getElementById('profileDropdown').style.display = 'none';
            }
            
            const notificationContainer = document.querySelector('.notification-container');
            if (!notificationContainer.contains(event.target)) {
                document.getElementById('notificationDropdown').classList.remove('show');
            }
        });

        document.addEventListener('keydown', function(event) {
            if (event.ctrlKey && event.key === 's') {
                event.preventDefault();
                const submitBtn = document.getElementById('submitBtn');
                if (!submitBtn.disabled) {
                    submitBtn.click();
                }
            }
            
            if (event.key === 'Escape') {
                document.getElementById('notificationDropdown').classList.remove('show');
                document.getElementById('profileDropdown').style.display = 'none';
                document.getElementById('dentistDropdown').classList.remove('show');
            }
        });

        setInterval(() => {
            loadNotifications();
        }, 60000);

    </script>
</body>
</html>