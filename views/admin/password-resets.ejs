<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Reset Monitoring - Admin</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f8f9fa;
            color: #333;
        }

        .header {
            background: white;
            padding: 20px;
            border-bottom: 1px solid #dee2e6;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .header h1 {
            color: #2c5aa0;
            font-size: 28px;
            margin-bottom: 8px;
        }

        .breadcrumb {
            color: #6c757d;
            font-size: 14px;
        }

        .breadcrumb a {
            color: #4285f4;
            text-decoration: none;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 20px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: white;
            border-radius: 12px;
            padding: 24px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: transform 0.2s ease;
        }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 12px;
        }

        .stat-title {
            font-size: 14px;
            color: #6c757d;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stat-icon {
            font-size: 24px;
        }

        .stat-value {
            font-size: 32px;
            font-weight: bold;
            color: #2c5aa0;
            margin-bottom: 4px;
        }

        .stat-change {
            font-size: 12px;
            color: #28a745;
        }

        .actions-bar {
            background: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 30px;
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            align-items: center;
            justify-content: space-between;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: #4285f4;
            color: white;
        }

        .btn-primary:hover {
            background: #3367d6;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn-danger:hover {
            background: #c82333;
        }

        .btn-success {
            background: #28a745;
            color: white;
        }

        .btn-success:hover {
            background: #218838;
        }

        .table-container {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .table-header {
            background: #f8f9fa;
            padding: 20px;
            border-bottom: 1px solid #dee2e6;
        }

        .table-title {
            font-size: 18px;
            font-weight: 600;
            color: #495057;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th {
            background: #f8f9fa;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            color: #495057;
            border-bottom: 2px solid #dee2e6;
        }

        .table td {
            padding: 12px;
            border-bottom: 1px solid #dee2e6;
            vertical-align: middle;
        }

        .table tbody tr:hover {
            background: #f8f9fa;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
            text-transform: uppercase;
        }

        .status-active {
            background: #d4edda;
            color: #155724;
        }

        .status-expired {
            background: #f8d7da;
            color: #721c24;
        }

        .status-completed {
            background: #cce5ff;
            color: #004085;
        }

        .email-cell {
            font-family: monospace;
            font-size: 13px;
        }

        .date-cell {
            font-size: 13px;
            color: #6c757d;
        }

        .loading {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }

        .spinner {
            display: inline-block;
            width: 32px;
            height: 32px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #4285f4;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .alert {
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: none;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-danger {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .chart-container {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }

            .actions-bar {
                flex-direction: column;
                align-items: stretch;
            }

            .table-container {
                overflow-x: auto;
            }

            .table {
                min-width: 600px;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Password Reset Monitoring</h1>
        <div class="breadcrumb">
            <a href="/admin/dashboard">Admin Dashboard</a> / Password Resets
        </div>
    </div>

    <div class="container">
        <!-- Statistics Cards -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Total Requests</div>
                    <div class="stat-icon">üìß</div>
                </div>
                <div class="stat-value"><%= stats.total_requests || 0 %></div>
                <div class="stat-change">All time</div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Active Tokens</div>
                    <div class="stat-icon">‚è≥</div>
                </div>
                <div class="stat-value"><%= stats.active_tokens || 0 %></div>
                <div class="stat-change">Currently active</div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Success Rate</div>
                    <div class="stat-icon">‚úÖ</div>
                </div>
                <div class="stat-value">
                    <%= stats.total_requests > 0 ? Math.round((stats.successful_resets / stats.total_requests) * 100) : 0 %>%
                </div>
                <div class="stat-change">Completion rate</div>
            </div>

            <div class="stat-card">
                <div class="stat-header">
                    <div class="stat-title">Avg. Time</div>
                    <div class="stat-icon">‚è±Ô∏è</div>
                </div>
                <div class="stat-value">
                    <%= stats.avg_completion_time ? Math.round(stats.avg_completion_time) : 0 %><span style="font-size: 16px;">min</span>
                </div>
                <div class="stat-change">To completion</div>
            </div>
        </div>

        <!-- Action Bar -->
        <div class="actions-bar">
            <div>
                <button class="btn btn-success" onclick="refreshData()">
                    üîÑ Refresh Data
                </button>
                <button class="btn btn-primary" onclick="runCleanup()">
                    üßπ Clean Expired
                </button>
            </div>
            <div>
                <button class="btn btn-danger" onclick="exportData()">
                    üìä Export Report
                </button>
            </div>
        </div>

        <!-- Alert Messages -->
        <div id="alert" class="alert"></div>

        <!-- Recent Activity Table -->
        <div class="table-container">
            <div class="table-header">
                <div class="table-title">Recent Password Reset Activity</div>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Email</th>
                        <th>User</th>
                        <th>Role</th>
                        <th>Requested</th>
                        <th>Status</th>
                        <th>Completed</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="activityTable">
                    <% if (recentActivity && recentActivity.length > 0) { %>
                        <% recentActivity.forEach(function(activity) { %>
                            <tr>
                                <td class="email-cell"><%= activity.email %></td>
                                <td><%= activity.user_name || 'Unknown' %></td>
                                <td><%= activity.user_role || 'Unknown' %></td>
                                <td class="date-cell">
                                    <%= new Date(activity.created_at).toLocaleString('th-TH') %>
                                </td>
                                <td>
                                    <span class="status-badge status-<%= activity.status %>">
                                        <%= activity.status %>
                                    </span>
                                </td>
                                <td class="date-cell">
                                    <%= activity.used_at ? new Date(activity.used_at).toLocaleString('th-TH') : '-' %>
                                </td>
                                <td>
                                    <% if (activity.status === 'active') { %>
                                        <button class="btn btn-danger" style="font-size: 12px; padding: 4px 8px;" 
                                                onclick="revokeToken(<%= activity.id %>)">
                                            Revoke
                                        </button>
                                    <% } else { %>
                                        -
                                    <% } %>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="7" style="text-align: center; padding: 40px; color: #6c757d;">
                                No password reset requests found
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <!-- Daily Statistics Chart -->
        <div class="chart-container">
            <h3 style="margin-bottom: 20px; color: #495057;">Daily Statistics (Last 30 Days)</h3>
            <div id="dailyChart">
                <table class="table" style="font-size: 13px;">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Requests</th>
                            <th>Successful</th>
                            <th>Success Rate</th>
                            <th>Avg. Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (dailyStats && dailyStats.length > 0) { %>
                            <% dailyStats.forEach(function(stat) { %>
                                <tr>
                                    <td><%= new Date(stat.date).toLocaleDateString('th-TH') %></td>
                                    <td><%= stat.total_requests %></td>
                                    <td><%= stat.successful_resets %></td>
                                    <td>
                                        <%= stat.total_requests > 0 ? Math.round((stat.successful_resets / stat.total_requests) * 100) : 0 %>%
                                    </td>
                                    <td><%= stat.avg_completion_minutes ? stat.avg_completion_minutes + ' min' : '-' %></td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="5" style="text-align: center; padding: 20px; color: #6c757d;">
                                    No data available for the last 30 days
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        function showAlert(message, type = 'success') {
            const alert = document.getElementById('alert');
            alert.className = `alert alert-${type}`;
            alert.textContent = message;
            alert.style.display = 'block';
            
            setTimeout(() => {
                alert.style.display = 'none';
            }, 5000);
        }

        async function refreshData() {
            try {
                showAlert('Refreshing data...', 'success');
                location.reload();
            } catch (error) {
                showAlert('Error refreshing data: ' + error.message, 'danger');
            }
        }

        async function runCleanup() {
            if (!confirm('Run cleanup for expired password reset tokens?')) {
                return;
            }

            try {
                const response = await fetch('/admin/api/password-resets/cleanup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const result = await response.json();

                if (result.success) {
                    showAlert(`Cleanup completed: ${result.data.deletedCount} tokens removed`, 'success');
                    setTimeout(() => location.reload(), 2000);
                } else {
                    showAlert('Cleanup failed: ' + result.error, 'danger');
                }
            } catch (error) {
                showAlert('Error running cleanup: ' + error.message, 'danger');
            }
        }

        async function revokeToken(tokenId) {
            const reason = prompt('Reason for revoking this token (optional):');
            
            if (reason === null) return; // User cancelled

            try {
                const response = await fetch(`/admin/api/password-resets/${tokenId}/revoke`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ reason })
                });

                const result = await response.json();

                if (result.success) {
                    showAlert('Token revoked successfully', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showAlert('Failed to revoke token: ' + result.error, 'danger');
                }
            } catch (error) {
                showAlert('Error revoking token: ' + error.message, 'danger');
            }
        }

        function exportData() {
            // Simple CSV export
            const data = [];
            const table = document.getElementById('activityTable');
            const rows = table.querySelectorAll('tr');
            
            // Add header
            data.push(['Email', 'User', 'Role', 'Requested', 'Status', 'Completed'].join(','));
            
            // Add data rows
            rows.forEach(row => {
                const cells = row.querySelectorAll('td');
                if (cells.length >= 6) {
                    const rowData = [
                        `"${cells[0].textContent}"`,
                        `"${cells[1].textContent}"`,
                        `"${cells[2].textContent}"`,
                        `"${cells[3].textContent}"`,
                        `"${cells[4].textContent.trim()}"`,
                        `"${cells[5].textContent}"`
                    ];
                    data.push(rowData.join(','));
                }
            });
            
            // Download CSV
            const csvContent = data.join('\n');
            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `password_resets_${new Date().toISOString().split('T')[0]}.csv`;
            a.click();
            window.URL.revokeObjectURL(url);
            
            showAlert('Data exported successfully', 'success');
        }

        // Auto-refresh every 5 minutes
        setInterval(refreshData, 5 * 60 * 1000);
    </script>
</body>
</html>