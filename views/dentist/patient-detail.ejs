<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Detail - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar */
        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        /* Main Content */
        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .back-button {
            background: #6c757d;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
            transition: background-color 0.3s;
        }

        .back-button:hover {
            background: #5a6268;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-icon {
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
            border: 2px solid rgba(74, 144, 226, 0.2);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .avatar:hover {
            transform: scale(1.05);
            border-color: #4A90E2;
        }

        .avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .avatar.no-photo {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            min-width: 180px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            z-index: 1000;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .dropdown-menu a {
            display: block;
            padding: 12px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
            transition: background 0.2s ease;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        .dropdown-menu hr {
            margin: 5px 0;
            border: none;
            height: 1px;
            background: #e1e5e9;
        }

        /* Content */
        .content {
            padding: 30px;
        }

        /* Loading */
        .loading {
            text-align: center;
            padding: 60px 20px;
            display: none;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 3px solid #e0e0e0;
            border-top: 3px solid #4A90E2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .loading p {
            color: #666;
            font-size: 14px;
        }

        /* Error Message */
        .error-message {
            background: #fecaca;
            color: #991b1b;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #ef4444;
            display: none;
        }

        /* Patient Header */
        .patient-header {
            background: white;
            border-radius: 8px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            display: none;
        }

        .patient-header.loaded {
            display: block;
        }

        .patient-title {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
        }

        .patient-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
        }

        .patient-info h1 {
            font-size: 24px;
            color: #333;
            margin: 0;
        }

        .patient-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .detail-label {
            font-weight: 600;
            color: #555;
            min-width: 100px;
        }

        .detail-value {
            color: #333;
        }



        /* Treatment History Section */
        .treatment-history {
            background: white;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            display: none;
        }

        .treatment-history.loaded {
            display: block;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .section-title {
            font-size: 20px;
            color: #333;
            font-weight: 600;
        }

        .filter-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .filter-input {
            padding: 8px 12px;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            font-size: 14px;
        }

        .filter-btn {
            background: #4A90E2;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .filter-btn:hover {
            background: #357abd;
        }

        .add-btn {
            background: #28a745;
        }

        .add-btn:hover {
            background: #218838;
        }

        /* Timeline */
        .treatment-timeline {
            position: relative;
            margin-top: 20px;
        }

        .year-section {
            margin-bottom: 30px;
        }

        .year-header {
            background: #f8f9fa;
            padding: 10px 15px;
            border-radius: 6px;
            margin-bottom: 15px;
            font-weight: 600;
            color: #495057;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .year-header:hover {
            background: #e9ecef;
        }

        .toggle-icon {
            transition: transform 0.3s;
        }

        .year-header.collapsed .toggle-icon {
            transform: rotate(-90deg);
        }

        .treatments-list {
            display: block;
            transition: all 0.3s ease;
        }

        .treatments-list.collapsed {
            display: none;
        }

        .treatment-item {
            background: #fff;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 15px;
            position: relative;
            transition: all 0.3s;
            cursor: pointer;
        }

        .treatment-item:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            transform: translateY(-2px);
            border-color: #4A90E2;
        }

        .treatment-item:hover .treatment-name {
            color: #4A90E2;
        }

        .treatment-date {
            font-size: 14px;
            color: #6c757d;
            margin-bottom: 5px;
        }

        .treatment-name {
            font-size: 16px;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
            transition: color 0.3s;
        }

        .treatment-status {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            text-transform: uppercase;
            margin-bottom: 10px;
        }

        .status-completed,
        .status-confirm {
            background: #d1fae5;
            color: #065f46;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-cancel {
            background: #fecaca;
            color: #991b1b;
        }

        .treatment-diagnosis {
            color: #666;
            font-size: 14px;
            line-height: 1.5;
            margin-top: 10px;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 6px;
        }

        .no-treatments {
            text-align: center;
            padding: 60px 20px;
            color: #666;
            font-style: italic;
        }

        .no-treatments i {
            font-size: 48px;
            color: #ddd;
            margin-bottom: 15px;
        }

        /* Modal Styles */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            display: none;
            align-items: center;
            justify-content: center;
        }

        .modal.show {
            display: flex;
        }

        .modal-content {
            background: white;
            border-radius: 12px;
            width: 90%;
            max-width: 800px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
        }

        .modal-header {
            background: #4A90E2;
            color: white;
            padding: 20px;
            border-radius: 12px 12px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h3 {
            margin: 0;
            font-size: 18px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .close-btn {
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: background 0.3s;
        }

        .close-btn:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        .modal-body {
            padding: 30px;
        }

        .form-section {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #e1e5e9;
        }

        .form-section:last-of-type {
            border-bottom: none;
            margin-bottom: 20px;
        }

        .form-section h4 {
            color: #333;
            font-size: 16px;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
            font-size: 14px;
        }

        .required {
            color: #dc3545;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #4A90E2;
            box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
        }

        .form-group textarea {
            resize: vertical;
            min-height: 80px;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            padding-top: 20px;
            border-top: 1px solid #e1e5e9;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
        }

        .btn-cancel {
            background: #6c757d;
            color: white;
        }

        .btn-cancel:hover {
            background: #5a6268;
        }

        .btn-primary {
            background: #4A90E2;
            color: white;
        }

        .btn-primary:hover {
            background: #357abd;
        }

        .btn:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .patient-details {
                grid-template-columns: 1fr;
            }
            
            .filter-section {
                flex-direction: column;
                align-items: stretch;
            }



            .modal-content {
                width: 95%;
                margin: 20px auto;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>คลินิกยิ้มสวย</h3>
        </div>
        <ul>
            <li><a href="/dentist/dashboard"><i class="fas fa-chart-bar"></i> แดชบอร์ด</a></li>
            <li><a href="/dentist/schedule"><i class="fas fa-calendar-alt"></i> ตารางงาน</a></li>
            <li><a href="/dentist/appointments"><i class="fas fa-hospital"></i> นัดหมาย</a></li>
            <li class="active"><a href="/dentist/patients"><i class="fas fa-users"></i> ผู้ป่วย</a></li>
            <li><a href="/dentist/patient-history"><i class="fas fa-history"></i> ประวัติ</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <a href="/dentist/patients" class="back-button">
                <i class="fas fa-arrow-left"></i> กลับไปหน้าผู้ป่วย
            </a>
            <div class="user-section">
                <i class="fas fa-bell notification-icon" onclick="toggleNotifications()"></i>
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar no-photo" id="userAvatar">
                            <% if (dentist && dentist.photo && dentist.photo !== 'default-avatar.png') { %>
                                <img src="/uploads/<%= dentist.photo %>" alt="Profile" onerror="showInitials()">
                            <% } else { %>
                                <%= (dentist && dentist.fname) ? dentist.fname.charAt(0).toUpperCase() + (dentist.lname ? dentist.lname.charAt(0).toUpperCase() : '') : 'D' %>
                            <% } %>
                        </div>
                        <div class="user-details">
                            <strong>สวัสดี ดร. <%= dentist ? dentist.fname + ' ' + dentist.lname : 'หมอ' %></strong>
                            <small>ทันตแพทย์</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/dentist/profile"><i class="fas fa-user"></i> โปรไฟล์ของฉัน</a>
                        <a href="/dentist/profile/edit"><i class="fas fa-edit"></i> แก้ไขโปรไฟล์</a>
                        <hr />
                        <a href="/logout"><i class="fas fa-sign-out-alt"></i> ออกจากระบบ</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content -->
        <div class="content">
            <!-- Loading -->
            <div class="loading" id="loading">
                <div class="loading-spinner"></div>
                <p>กำลังโหลดข้อมูลผู้ป่วย...</p>
            </div>

            <!-- Error Message -->
            <div class="error-message" id="errorMessage"></div>

            <!-- Patient Header -->
            <div class="patient-header" id="patientHeader">
                <div class="patient-title">
                    <div class="patient-icon">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="patient-info">
                        <h1 id="patientName">กำลังโหลด...</h1>
                    </div>
                </div>
                
                <div class="patient-details" id="patientDetails">
                    <!-- Will be populated by JavaScript -->
                </div>
            </div>

            <!-- Treatment History -->
            <div class="treatment-history" id="treatmentHistory">
                <div class="section-header">
                    <h2 class="section-title">ประวัติการรักษา</h2>
                    <div class="filter-section">
                        <button class="filter-btn add-btn" onclick="openAddTreatmentModal()">
                            <i class="fas fa-plus"></i> เพิ่มประวัติการรักษา
                        </button>
                        <label>ค้นหาตามวันที่:</label>
                        <input type="date" class="filter-input" id="dateFilter">
                        <button class="filter-btn" onclick="filterByDate()">
                            <i class="fas fa-filter"></i> กรอง
                        </button>
                        <button class="filter-btn" onclick="clearFilter()" style="background: #6c757d;">
                            <i class="fas fa-times"></i> ล้าง
                        </button>
                    </div>
                </div>

                <div class="treatment-timeline" id="treatmentTimeline">
                    <!-- Will be populated by JavaScript -->
                </div>
            </div>
        </div>
    </div>

    <!-- Add Treatment History Modal -->
    <div class="modal" id="addTreatmentModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3><i class="fas fa-plus"></i> เพิ่มประวัติการรักษา</h3>
                <button class="close-btn" onclick="closeAddTreatmentModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="addTreatmentForm">
                    <input type="hidden" id="modalPatientId">
                    
                    <div class="form-section">
                        <h4><i class="fas fa-user"></i> ข้อมูลผู้ป่วย</h4>
                        <div id="modalPatientInfo">
                            <!-- Will be populated by JavaScript -->
                        </div>
                    </div>

                    <div class="form-section">
                        <h4><i class="fas fa-tooth"></i> รายละเอียดการรักษา</h4>
                        
                        <div class="form-group">
                            <label for="treatmentSelect">ประเภทการรักษา <span class="required">*</span></label>
                            <select id="treatmentSelect" name="treatmentId" required>
                                <option value="">เลือกการรักษา</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label for="appointmentDateTime">วันที่และเวลา <span class="required">*</span></label>
                            <input type="datetime-local" id="appointmentDateTime" name="appointmentDate" required>
                        </div>

                        <div class="form-group">
                            <label for="diagnosis">การวินิจฉัย <span class="required">*</span></label>
                            <textarea id="diagnosis" name="diagnosis" rows="3" placeholder="กรอกการวินิจฉัย..." required></textarea>
                        </div>

                        <div class="form-group">
                            <label for="treatmentNotes">บันทึกการรักษา</label>
                            <textarea id="treatmentNotes" name="treatmentNotes" rows="4" placeholder="ขั้นตอนการรักษา, เทคนิคที่ใช้..."></textarea>
                        </div>

                        <div class="form-group">
                            <label for="followUpDate">วันนัดติดตาม</label>
                            <input type="date" id="followUpDate" name="followUpDate">
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="button" onclick="closeAddTreatmentModal()" class="btn btn-cancel">
                            <i class="fas fa-times"></i> ยกเลิก
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> บันทึกประวัติการรักษา
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Get patient ID from URL
        const patientId = '<%= patient.patient_id %>';
        let patientData = null;
        let allTreatments = {};

        // Load data on page load
        document.addEventListener('DOMContentLoaded', async function() {
            await loadPatientData();
        });

        // Load patient data
        async function loadPatientData() {
            try {
                showLoading();
                
                const response = await fetch(`/dentist/api/patients/${patientId}/detail`);
                const data = await response.json();
                
                if (data.success) {
                    patientData = data.patient;
                    allTreatments = data.treatmentsByYear;
                    
                    displayPatientInfo(data.patient);
                    displayTreatmentHistory(data.treatmentsByYear);
                    
                    hideLoading();
                } else {
                    showError(data.error || 'ไม่สามารถโหลดข้อมูลผู้ป่วยได้');
                    hideLoading();
                }
                
            } catch (error) {
                console.error('Error loading patient data:', error);
                showError('ไม่สามารถโหลดข้อมูลผู้ป่วยได้ กรุณารีเฟรชหน้าใหม่');
                hideLoading();
            }
        }

        // Display patient information
        function displayPatientInfo(patient) {
            document.getElementById('patientName').textContent = `${patient.fname} ${patient.lname}`;
            
            const detailsHTML = `
                <div class="detail-item">
                    <span class="detail-label">ชื่อ:</span>
                    <span class="detail-value">${patient.fname} ${patient.lname}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">วันเกิด:</span>
                    <span class="detail-value">${patient.formattedDob}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">อายุ:</span>
                    <span class="detail-value">${patient.age || 'ไม่ระบุ'} ปี</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">เบอร์โทร:</span>
                    <span class="detail-value">${patient.phone || 'ไม่ระบุ'}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">ที่อยู่:</span>
                    <span class="detail-value">${patient.address || 'ไม่ระบุ'}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">รหัสผู้ป่วย:</span>
                    <span class="detail-value">#${patient.patient_id}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">บัตรประชาชน:</span>
                    <span class="detail-value">${patient.id_card || 'ไม่ระบุ'}</span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">เป็นผู้ป่วยตั้งแต่:</span>
                    <span class="detail-value">${patient.formattedCreatedAt}</span>
                </div>
            `;
            
            document.getElementById('patientDetails').innerHTML = detailsHTML;
            document.getElementById('patientHeader').classList.add('loaded');
        }

        // Display treatment history
        function displayTreatmentHistory(treatmentsByYear) {
            const timeline = document.getElementById('treatmentTimeline');
            
            if (Object.keys(treatmentsByYear).length === 0) {
                timeline.innerHTML = `
                    <div class="no-treatments">
                        <i class="fas fa-clipboard-list"></i>
                        <h3>ไม่มีประวัติการรักษา</h3>
                        <p>ผู้ป่วยรายนี้ยังไม่มีประวัติการรักษา</p>
                    </div>
                `;
            } else {
                const years = Object.keys(treatmentsByYear).sort((a, b) => b - a);
                let html = '';
                
                years.forEach(year => {
                    const treatments = treatmentsByYear[year];
                    html += `
                        <div class="year-section">
                            <div class="year-header" onclick="toggleYear('${year}')">
                                <span>${year} (${treatments.length} การรักษา)</span>
                                <i class="fas fa-chevron-down toggle-icon" id="icon-${year}"></i>
                            </div>
                            <div class="treatments-list" id="treatments-${year}">
                    `;
                    
                    treatments.forEach(treatment => {
                        html += `
                            <div class="treatment-item" onclick="viewTreatmentDetail(${treatment.queue_id})" data-queue-id="${treatment.queue_id}">
                                <div class="treatment-date">
                                    ${treatment.formattedDate} - ${treatment.formattedTime}
                                </div>
                                <div class="treatment-name">
                                    ${treatment.treatment_name}
                                    ${treatment.duration ? `<small style="color: #666; font-weight: normal;">(${treatment.duration} นาที)</small>` : ''}
                                </div>
                                <span class="treatment-status status-${treatment.queue_status}">
                                    ${treatment.statusText}
                                </span>
                                ${treatment.diagnosis ? `
                                    <div class="treatment-diagnosis">
                                        <strong>การวินิจฉัย:</strong> ${treatment.diagnosis}
                                    </div>
                                ` : ''}
                            </div>
                        `;
                    });
                    
                    html += `
                            </div>
                        </div>
                    `;
                });
                
                timeline.innerHTML = html;
            }
            
            document.getElementById('treatmentHistory').classList.add('loaded');
        }

        // Toggle year section
        function toggleYear(year) {
            const treatmentsList = document.getElementById(`treatments-${year}`);
            const icon = document.getElementById(`icon-${year}`);
            const header = icon.closest('.year-header');
            
            if (treatmentsList.classList.contains('collapsed')) {
                treatmentsList.classList.remove('collapsed');
                header.classList.remove('collapsed');
            } else {
                treatmentsList.classList.add('collapsed');
                header.classList.add('collapsed');
            }
        }

        // Filter by date
        async function filterByDate() {
            const dateFilter = document.getElementById('dateFilter').value;
            
            if (!dateFilter) {
                displayTreatmentHistory(allTreatments);
                return;
            }
            
            try {
                const response = await fetch(`/dentist/api/patients/${patientId}/treatments/search?date=${dateFilter}`);
                const data = await response.json();
                
                if (data.success) {
                    // Group by year
                    const filteredByYear = {};
                    data.treatments.forEach(treatment => {
                        const year = new Date(treatment.time).getFullYear();
                        if (!filteredByYear[year]) {
                            filteredByYear[year] = [];
                        }
                        filteredByYear[year].push(treatment);
                    });
                    
                    displayTreatmentHistory(filteredByYear);
                } else {
                    showError('Failed to filter treatments');
                }
            } catch (error) {
                console.error('Error filtering treatments:', error);
                showError('Failed to filter treatments');
            }
        }

        // Clear filter
        function clearFilter() {
            document.getElementById('dateFilter').value = '';
            displayTreatmentHistory(allTreatments);
        }

        // View treatment detail
        function viewTreatmentDetail(queueId) {
            window.location.href = `/dentist/treatment-history/${queueId}`;
        }

        // Open add treatment modal
        async function openAddTreatmentModal() {
            const modal = document.getElementById('addTreatmentModal');
            modal.classList.add('show');
            
            // Set patient ID
            document.getElementById('modalPatientId').value = patientId;
            
            // Display patient info
            document.getElementById('modalPatientInfo').innerHTML = `
                <div style="background: #f8f9fa; padding: 15px; border-radius: 8px;">
                    <strong>Name:</strong> ${patientData.fname} ${patientData.lname}<br>
                    <strong>Age:</strong> ${patientData.age || 'N/A'} years<br>
                    <strong>Phone:</strong> ${patientData.phone || 'N/A'}
                </div>
            `;
            
            // Load treatments
            try {
                const response = await fetch('/dentist/api/patients/${patientId}/latest-appointments');
                const data = await response.json();
                
                if (data.success && data.treatments) {
                    const select = document.getElementById('treatmentSelect');
                    select.innerHTML = '<option value="">Select Treatment</option>';
                    data.treatments.forEach(treatment => {
                        select.innerHTML += `<option value="${treatment.treatment_id}">${treatment.treatment_name} (${treatment.duration} min)</option>`;
                    });
                }
            } catch (error) {
                console.error('Error loading treatments:', error);
            }
            
            // Set current datetime
            const now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
            document.getElementById('appointmentDateTime').value = now.toISOString().slice(0, 16);
        }

        // Close modal
        function closeAddTreatmentModal() {
            document.getElementById('addTreatmentModal').classList.remove('show');
            document.getElementById('addTreatmentForm').reset();
        }

        // Submit form
        document.getElementById('addTreatmentForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            try {
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';
                submitBtn.disabled = true;
                
                const formData = {
                    patientId: document.getElementById('modalPatientId').value,
                    treatmentId: document.getElementById('treatmentSelect').value,
                    appointmentDate: document.getElementById('appointmentDateTime').value,
                    diagnosis: document.getElementById('diagnosis').value,
                    treatmentNotes: document.getElementById('treatmentNotes').value,
                    followUpDate: document.getElementById('followUpDate').value
                };
                
                const response = await fetch('/dentist/api/treatment-history/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showNotification('บันทึกประวัติการรักษาเรียบร้อยแล้ว', 'success');
                    closeAddTreatmentModal();
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    showNotification('Error: ' + result.error, 'error');
                }
                
            } catch (error) {
                console.error('Error saving treatment:', error);
                showNotification('Failed to save treatment history', 'error');
            } finally {
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });

        // Utility functions
        function showLoading() {
            document.getElementById('loading').style.display = 'block';
        }

        function hideLoading() {
            document.getElementById('loading').style.display = 'none';
        }

        function showError(message) {
            const errorElement = document.getElementById('errorMessage');
            errorElement.textContent = message;
            errorElement.style.display = 'block';
            setTimeout(() => {
                errorElement.style.display = 'none';
            }, 5000);
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${type === 'success' ? '#d1fae5' : type === 'error' ? '#fecaca' : '#f3f4f6'};
                color: ${type === 'success' ? '#065f46' : type === 'error' ? '#991b1b' : '#374151'};
                padding: 15px 20px;
                border-radius: 8px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                z-index: 1001;
                border-left: 4px solid ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#6b7280'};
                max-width: 400px;
                font-size: 14px;
                animation: slideIn 0.3s ease;
            `;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'slideOut 0.3s ease';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Close modal on background click
        document.addEventListener('click', function(e) {
            const modal = document.getElementById('addTreatmentModal');
            if (e.target === modal) {
                closeAddTreatmentModal();
            }
        });
    </script>
</body>
</html>