<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>การนัดหมาย - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar .logo {
            text-align: center;
            padding: 25px 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            background: white;
            padding: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 20px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 4px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 15px 25px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 15px;
            display: flex;
            align-items: center;
            gap: 12px;
            border-radius: 0 25px 25px 0;
            margin-right: 15px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.15);
            color: white;
            transform: translateX(5px);
        }

        .sidebar ul li.active a {
            background-color: rgba(255,255,255,0.2);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        /* Main Content */
        .main {
            margin-left: 250px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .search-section {
            display: flex;
            align-items: center;
            gap: 15px;
            flex: 1;
            max-width: 500px;
        }

        .search-section label {
            font-weight: 500;
            color: #555;
            font-size: 14px;
            min-width: 60px;
        }

        .search-box {
            background: #f8f9fa;
            border: 2px solid #e1e5e9;
            border-radius: 25px;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            width: 100%;
            transition: all 0.3s ease;
        }

        .search-box:focus-within {
            border-color: #4A90E2;
            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        }

        .search-box i {
            color: #666;
            margin-right: 10px;
            font-size: 14px;
        }

        .search-box input {
            border: none;
            background: transparent;
            outline: none;
            width: 100%;
            font-size: 14px;
            color: #333;
        }

        .search-box input::placeholder {
            color: #999;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .notification-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: #666;
            transition: all 0.3s ease;
            position: relative;
        }

        .notification-icon:hover {
            background: #e9ecef;
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: 8px;
            right: 8px;
            background: #dc3545;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 12px;
            padding: 8px 15px;
            border-radius: 25px;
            transition: all 0.3s ease;
        }

        .user-info:hover {
            background: #f8f9fa;
        }

        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 16px;
            font-weight: 600;
            text-transform: uppercase;
            border: 2px solid #e1e5e9;
            position: relative;
            overflow: hidden;
        }

        .avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .user-details {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        .user-details strong {
            font-size: 14px;
            color: #333;
            font-weight: 600;
        }

        .user-details small {
            color: #666;
            font-size: 12px;
            text-transform: capitalize;
        }

        .dropdown-arrow {
            color: #666;
            font-size: 12px;
            transition: transform 0.3s ease;
        }

        .profile-dropdown.open .dropdown-arrow {
            transform: rotate(180deg);
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            min-width: 200px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            z-index: 1000;
            overflow: hidden;
            margin-top: 8px;
        }

        .dropdown-menu.show {
            display: block;
            animation: fadeInDown 0.3s ease;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .dropdown-menu a {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 12px 18px;
            text-decoration: none;
            color: #333;
            font-size: 14px;
            transition: background-color 0.3s ease;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        .dropdown-menu hr {
            margin: 0;
            border: none;
            border-top: 1px solid #e1e5e9;
        }

        /* Content */
        .content {
            padding: 30px;
        }

        .page-header {
            margin-bottom: 30px;
        }

        .page-header h1 {
            font-size: 28px;
            color: #333;
            margin: 0;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .page-header h1 i {
            color: #4A90E2;
        }

        /* Calendar Header */
        .calendar-header {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .calendar-nav-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .month-year {
            font-size: 24px;
            font-weight: 700;
            color: #333;
        }

        .nav-buttons {
            display: flex;
            gap: 8px;
        }

        .nav-btn {
            background-color: #4A90E2;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .nav-btn:hover {
            background-color: #357abd;
            transform: translateY(-1px);
        }

        .nav-btn.today {
            background-color: #28a745;
        }

        .nav-btn.today:hover {
            background-color: #218838;
        }

        /* Week View */
        .week-view {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 15px;
            margin-bottom: 20px;
        }

        .day-header {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 20px 15px;
            text-align: center;
            font-weight: 600;
            color: #495057;
            border-radius: 10px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            min-height: 80px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .day-header:hover {
            background: linear-gradient(135deg, #e3f2fd, #bbdefb);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .day-header.today {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            box-shadow: 0 4px 15px rgba(74, 144, 226, 0.3);
        }

        .day-header.has-appointments {
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            border: 2px solid #ffc107;
        }

        .appointment-count {
            position: absolute;
            top: 8px;
            right: 8px;
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            font-size: 11px;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(220, 53, 69, 0.3);
        }

        /* Appointments Section */
        .appointments-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .section-title {
            font-size: 20px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 600;
        }

        .appointment-count-badge {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(74, 144, 226, 0.3);
        }

        .filters-controls {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .filters-btn {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            color: #495057;
            border: 1px solid #dee2e6;
            padding: 10px 18px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
        }

        .filters-btn:hover {
            background: linear-gradient(135deg, #e9ecef, #dee2e6);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .filters-btn.active {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            border-color: #4A90E2;
        }

        /* Selected Date Info */
        .selected-date-info {
            margin-bottom: 20px;
            padding: 15px 20px;
            background: linear-gradient(135deg, #e3f2fd, #f3e5f5);
            border-radius: 10px;
            border-left: 4px solid #4A90E2;
            font-size: 14px;
            color: #1565c0;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* Appointments Table */
        .table-container {
            overflow-x: auto;
            border-radius: 10px;
            border: 1px solid #e1e5e9;
        }

        .appointments-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            margin: 0;
        }

        .appointments-table thead {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        }

        .appointments-table th {
            padding: 18px 15px;
            text-align: left;
            font-weight: 600;
            color: #495057;
            font-size: 14px;
            border-bottom: 2px solid #dee2e6;
            white-space: nowrap;
        }

        .appointments-table td {
            padding: 18px 15px;
            border-bottom: 1px solid #f1f3f4;
            color: #495057;
            font-size: 14px;
            vertical-align: middle;
        }

        .appointments-table tbody tr {
            transition: background-color 0.3s ease;
        }

        .appointments-table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .time-slot {
            font-weight: 600;
            color: #333;
            font-family: 'Courier New', monospace;
        }

        .patient-name {
            color: #4A90E2;
            font-weight: 600;
            cursor: pointer;
        }

        .patient-name:hover {
            text-decoration: underline;
        }

        .treatment-type {
            color: #666;
            font-weight: 500;
        }

        .status-badge {
            padding: 8px 14px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .status-badge.pending {
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            color: #856404;
            border: 1px solid #ffc107;
        }

        .status-badge.confirm {
            background: linear-gradient(135deg, #cfe2ff, #b6d4fe);
            color: #084298;
            border: 1px solid #0d6efd;
        }

        .status-badge.completed {
            background: linear-gradient(135deg, #d1fae5, #a7f3d0);
            color: #065f46;
            border: 1px solid #10b981;
        }

        .status-badge.cancel {
            background: linear-gradient(135deg, #fecaca, #fca5a5);
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        .actions-cell {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .action-btn {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            border: none;
            padding: 8px 14px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
            white-space: nowrap;
        }

        .action-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .action-btn.confirm {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .action-btn.confirm:hover {
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }

        .action-btn.danger {
            background: linear-gradient(135deg, #dc3545, #c82333);
        }

        .action-btn.danger:hover {
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
        }

        .no-appointments {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .no-appointments i {
            font-size: 64px;
            color: #ddd;
            margin-bottom: 20px;
        }

        .no-appointments h3 {
            font-size: 20px;
            color: #999;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .no-appointments p {
            color: #999;
            font-size: 14px;
        }

        /* Loading States */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #4A90E2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Notification */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
            z-index: 1000;
            max-width: 400px;
            display: flex;
            align-items: center;
            gap: 10px;
            font-weight: 500;
            animation: slideInRight 0.3s ease;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .notification.success {
            background: linear-gradient(135deg, #d1fae5, #a7f3d0);
            color: #065f46;
            border-left: 4px solid #10b981;
        }

        .notification.error {
            background: linear-gradient(135deg, #fecaca, #fca5a5);
            color: #991b1b;
            border-left: 4px solid #ef4444;
        }

        .notification.info {
            background: linear-gradient(135deg, #dbeafe, #bfdbfe);
            color: #1e40af;
            border-left: 4px solid #3b82f6;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .sidebar {
                width: 220px;
            }
            .main {
                margin-left: 220px;
            }
        }

        @media (max-width: 768px) {
            .main {
                margin-left: 0;
            }
            
            .sidebar {
                display: none;
            }
            
            .content {
                padding: 20px;
            }
            
            .week-view {
                grid-template-columns: repeat(7, 1fr);
                gap: 8px;
            }
            
            .day-header {
                padding: 15px 8px;
                min-height: 60px;
                font-size: 12px;
            }
            
            .appointments-table th,
            .appointments-table td {
                padding: 12px 8px;
                font-size: 12px;
            }

            .section-header {
                flex-direction: column;
                align-items: stretch;
            }

            .filters-controls {
                justify-content: center;
            }
        }

        @media (max-width: 480px) {
            .search-section {
                flex-direction: column;
                align-items: stretch;
            }
            
            .user-section {
                justify-content: space-between;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li><a href="/dentist/dashboard"><i class="fas fa-chart-bar"></i> แดชบอร์ด</a></li>
            <li><a href="/dentist/schedule"><i class="fas fa-calendar-alt"></i> ตารางงาน</a></li>
            <li class="active"><a href="/dentist/appointments"><i class="fas fa-hospital"></i> การนัดหมาย</a></li>
            <li><a href="/dentist/patients"><i class="fas fa-users"></i> ผู้ป่วย</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <div class="search-section">
                <label>ค้นหา:</label>
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="ค้นหาด้วยชื่อผู้ป่วย รายการรักษา หรือโทรศัพท์..." id="searchInput" />
                </div>
            </div>
            
            <div class="user-section">
                <div class="notification-icon" onclick="toggleNotifications()" title="การแจ้งเตือน">
                    <i class="fas fa-bell"></i>
                    <span class="notification-badge" id="notificationBadge">3</span>
                </div>
                
                <div class="profile-dropdown" id="profileDropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar" id="userAvatar">
                            <% if (dentist && dentist.photo && dentist.photo !== 'default-avatar.png') { %>
                                <img src="/uploads/<%= dentist.photo %>" alt="โปรไฟล์" onerror="showInitials()">
                            <% } else { %>
                                <%= (dentist && dentist.fname) ? dentist.fname.charAt(0).toUpperCase() + (dentist.lname ? dentist.lname.charAt(0).toUpperCase() : '') : 'ท' %>
                            <% } %>
                        </div>
                        <div class="user-details">
                            <strong id="userName">ทพ. <%= dentist.fname %> <%= dentist.lname %></strong>
                            <small>ทันตแพทย์</small>
                        </div>
                        <i class="fas fa-caret-down dropdown-arrow"></i>
                    </div>
                    <div class="dropdown-menu" id="dropdownMenu">
                        <a href="/dentist/profile">
                            <i class="fas fa-user"></i> โปรไฟล์ของฉัน
                        </a>
                        <a href="/dentist/profile/change-password">
                            <i class="fas fa-key"></i> เปลี่ยนรหัสผ่าน
                        </a>
                        <hr />
                        <a href="/logout">
                            <i class="fas fa-sign-out-alt"></i> ออกจากระบบ
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content -->
        <div class="content">
            <!-- Page Header -->
            <div class="page-header">
                <h1><i class="fas fa-hospital"></i> จัดการการนัดหมาย</h1>
            </div>

            <!-- Calendar Section -->
            <div class="calendar-header">
                <div class="calendar-nav-bar">
                    <h3 class="month-year" id="currentMonth">
                        <%= new Date().toLocaleDateString('th-TH', {month: 'long', year: 'numeric'}) %>
                    </h3>
                    <div class="nav-buttons">
                        <button class="nav-btn" onclick="changeWeek(-1)" title="สัปดาห์ก่อนหน้า">
                            <i class="fas fa-chevron-left"></i><i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="nav-btn" onclick="changeMonth(-1)" title="เดือนก่อนหน้า">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="nav-btn today" onclick="goToToday()" title="วันนี้">
                            <i class="fas fa-home"></i> วันนี้
                        </button>
                        <button class="nav-btn" onclick="changeMonth(1)" title="เดือนถัดไป">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                        <button class="nav-btn" onclick="changeWeek(1)" title="สัปดาห์ถัดไป">
                            <i class="fas fa-chevron-right"></i><i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
                
                <div class="week-view" id="weekView">
                    <!-- สัปดาห์ปัจจุบันจะถูกสร้างด้วย JavaScript -->
                </div>
            </div>

            <!-- Appointments Section -->
            <div class="appointments-section">
                <div class="section-header">
                    <div class="section-title">
                        <i class="fas fa-list-alt"></i>
                        <span id="sectionTitle">การนัดหมายทั้งหมด</span>
                        <span class="appointment-count-badge" id="appointmentCount">
                            <%= stats ? stats.total : (appointments ? appointments.length : 0) %>
                        </span>
                    </div>
                    <div class="filters-controls">
                        <button class="filters-btn" onclick="showTodayAppointments()" id="todayBtn">
                            <i class="fas fa-calendar-day"></i> วันนี้
                        </button>
                        <button class="filters-btn" onclick="showUpcomingAppointments()" id="upcomingBtn">
                            <i class="fas fa-arrow-right"></i> ถัดไป
                        </button>
                        <button class="filters-btn active" onclick="showAllAppointments()" id="allBtn">
                            <i class="fas fa-list"></i> ทั้งหมด
                        </button>
                    </div>
                </div>

                <div class="selected-date-info" id="selectedDateInfo">
                    <i class="fas fa-info-circle"></i>
                    แสดงการนัดหมายทั้งหมด (รวม: <%= stats ? stats.total : (appointments ? appointments.length : 0) %>)
                </div>

                <div class="table-container">
                    <% if (appointments && appointments.length > 0) { %>
                    <table class="appointments-table" id="appointmentsTable">
                        <thead>
                            <tr>
                                <th><i class="fas fa-calendar"></i> วันที่</th>
                                <th><i class="fas fa-clock"></i> เวลา</th>
                                <th><i class="fas fa-user"></i> ผู้ป่วย</th>
                                <th><i class="fas fa-tooth"></i> การรักษา</th>
                                <th><i class="fas fa-info-circle"></i> สถานะ</th>
                                <th><i class="fas fa-cogs"></i> การดำเนินการ</th>
                            </tr>
                        </thead>
                        <tbody id="appointmentsBody">
                            <% appointments.forEach(function(appointment) { %>
                            <tr data-appointment-id="<%= appointment.queue_id %>" data-status="<%= appointment.queue_status %>">
                                <td><%= new Date(appointment.time).toLocaleDateString('en-GB') %></td>
                                <td class="time-slot"><%= new Date(appointment.time).toLocaleTimeString('en-GB', {hour: '2-digit', minute: '2-digit', hour12: false}) %></td>
                                <td class="patient-name" onclick="viewPatient(<%= appointment.patient_id || 'null' %>)">
                                    <%= appointment.fname %> <%= appointment.lname %>
                                    <% if (appointment.phone) { %>
                                        <br><small style="color: #666; font-weight: normal;"><%= appointment.phone %></small>
                                    <% } %>
                                </td>
                                <td class="treatment-type">
                                    <%= appointment.treatment_name %>
                                    <% if (appointment.duration) { %>
                                        <br><small style="color: #666;">(<%= appointment.duration %> นาที)</small>
                                    <% } %>
                                </td>
                                <td>
                                    <span class="status-badge <%= appointment.queue_status %>">
                                        <% if (appointment.queue_status === 'completed') { %>
                                            <i class="fas fa-check-circle"></i> รักษาเสร็จแล้ว
                                        <% } else if (appointment.queue_status === 'confirm') { %>
                                            <i class="fas fa-user-md"></i> รอรักษา
                                        <% } else if (appointment.queue_status === 'pending') { %>
                                            <i class="fas fa-clock"></i> รอยืนยัน
                                        <% } else if (appointment.queue_status === 'cancel') { %>
                                            <i class="fas fa-times-circle"></i> ยกเลิก
                                        <% } else { %>
                                            <%= appointment.queue_status %>
                                        <% } %>
                                    </span>
                                </td>
                                <td>
                                    <div class="actions-cell">
                                        <% if (appointment.queue_status === 'pending' || appointment.queue_status === 'confirm') { %>
                                            <!-- นัดที่ยังไม่ได้รักษา (รอยืนยันหรือยืนยันแล้ว) -->
                                            <button onclick="addHistory(<%= appointment.queue_id %>)" class="action-btn confirm" title="เพิ่มประวัติการรักษา">
                                                <i class="fas fa-plus-circle"></i> เพิ่มประวัติ
                                            </button>
                                        <% } else if (appointment.queue_status === 'completed') { %>
                                            <!-- นัดที่รักษาเสร็จแล้ว -->
                                            <button onclick="viewTreatmentHistory(<%= appointment.queue_id %>)" class="action-btn" title="ดูประวัติการรักษา">
                                                <i class="fas fa-file-medical"></i> ดูประวัติ
                                            </button>
                                        <% } else if (appointment.queue_status === 'cancel') { %>
                                            <!-- นัดที่ยกเลิก -->
                                            <button onclick="viewAppointment(<%= appointment.queue_id %>)" class="action-btn" title="ดูรายละเอียด" style="opacity: 0.6;">
                                                <i class="fas fa-eye"></i> รายละเอียด
                                            </button>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <% } else { %>
                    <div class="no-appointments" id="noAppointments">
                        <i class="fas fa-calendar-times"></i>
                        <h3>ยังไม่มีการนัดหมาย</h3>
                        <p>ขณะนี้ยังไม่มีรายการนัดหมาย รายการใหม่จะแสดงที่นี่</p>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let currentDate = new Date();
        let allAppointments = <%- JSON.stringify(appointments || []) %>;
        let stats = <%- JSON.stringify(stats || {total: 0, today: 0, pending: 0, completed: 0, cancelled: 0}) %>;

        // Debug: แสดงข้อมูลใน Console
        console.log('=== DEBUG: รายการนัดหมายทั้งหมด ===');
        console.table(allAppointments.map(a => ({
            ไอดี: a.queue_id,
            ผู้ป่วย: a.fname + ' ' + a.lname,
            สถานะ: a.queue_status,
            เวลา: new Date(a.time).toLocaleString('th-TH'),
            มีการวินิจฉัยหรือไม่: a.diagnosis ? 'มี' : 'ไม่มี'
        })));

        console.log('=== DEBUG: สถิติ ===');
        console.log(stats);

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            initializeAvatar();
            generateWeekView();
            loadTodaysAppointments();
        });

        // Avatar initialization
        function initializeAvatar() {
            const avatarEl = document.getElementById('userAvatar');
            
            if (avatarEl.querySelector('img')) {
                return;
            }
            
            if (!avatarEl.textContent.trim()) {
                const userName = document.getElementById('userName').textContent;
                const nameParts = userName.replace('ทพ. ', '').split(' ');
                const initials = nameParts.map(part => part.charAt(0)).join('').substring(0, 2).toUpperCase();
                
                const blueColors = [
                    '#4A90E2', '#2196F3', '#03A9F4', '#00BCD4',
                    '#5DADE2', '#3498DB', '#2980B9', '#1976D2'
                ];
                const colorIndex = userName.length % blueColors.length;
                
                avatarEl.style.background = blueColors[colorIndex];
                avatarEl.textContent = initials;
            }
        }

        function showInitials() {
            const avatar = document.getElementById('userAvatar');
            const img = avatar.querySelector('img');
            if (img) {
                img.remove();
                const userName = document.getElementById('userName').textContent;
                const nameParts = userName.replace('ทพ. ', '').split(' ');
                const initials = nameParts.map(part => part.charAt(0)).join('').substring(0, 2).toUpperCase();
                
                avatar.style.background = '#4A90E2';
                avatar.textContent = initials;
            }
        }

        // Generate week view calendar
        function generateWeekView() {
            const weekView = document.getElementById('weekView');
            const today = new Date();
            
            const startOfWeek = new Date(currentDate);
            const day = startOfWeek.getDay();
            startOfWeek.setDate(startOfWeek.getDate() - day);

            weekView.innerHTML = '';
            
            const dayNames = ['อา', 'จ', 'อ', 'พ', 'พฤ', 'ศ', 'ส'];
            const fullDayNames = ['วันอาทิตย์', 'วันจันทร์', 'วันอังคาร', 'วันพุธ', 'วันพฤหัสบดี', 'วันศุกร์', 'วันเสาร์'];
            
            for (let i = 0; i < 7; i++) {
                const date = new Date(startOfWeek);
                date.setDate(startOfWeek.getDate() + i);
                
                const dateStr = date.toISOString().split('T')[0];
                const dayAppointments = countAppointmentsForDate(dateStr);
                
                const dayHeader = document.createElement('div');
                dayHeader.className = 'day-header';
                dayHeader.innerHTML = `
                    <div style="font-weight: 700;">${dayNames[i]}</div>
                    <div style="font-size: 18px; margin-top: 5px;">${date.getDate()}</div>
                `;
                dayHeader.title = `${fullDayNames[i]}, ${date.toLocaleDateString('th-TH')}`;
                dayHeader.onclick = () => filterByDate(dateStr);
                
                if (date.toDateString() === today.toDateString()) {
                    dayHeader.classList.add('today');
                }
                
                if (dayAppointments > 0) {
                    dayHeader.classList.add('has-appointments');
                    const badge = document.createElement('div');
                    badge.className = 'appointment-count';
                    badge.textContent = dayAppointments;
                    dayHeader.appendChild(badge);
                }
                
                weekView.appendChild(dayHeader);
            }
        }

        function countAppointmentsForDate(dateStr) {
            return allAppointments.filter(apt => {
                const aptDate = new Date(apt.time).toISOString().split('T')[0];
                return aptDate === dateStr;
            }).length;
        }

        function filterByDate(date) {
            const rows = document.querySelectorAll('#appointmentsBody tr');
            const dateInfo = document.getElementById('selectedDateInfo');
            let visibleCount = 0;
            
            const targetDate = new Date(date);
            const formattedDate = targetDate.toLocaleDateString('th-TH', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            
            rows.forEach(row => {
                const appointmentDateStr = row.cells[0].textContent;
                const appointmentDate = convertToComparableDate(appointmentDateStr);
                const targetDateStr = targetDate.toLocaleDateString('en-GB');
                
                if (appointmentDate === targetDateStr) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            updateFilterResults(visibleCount, `การนัดหมายสำหรับ ${formattedDate}`, 'วันที่ที่เลือก');
            setActiveFilter(null);
        }

        function convertToComparableDate(dateStr) {
            return dateStr;
        }

        function showTodayAppointments() {
            const today = new Date().toISOString().split('T')[0];
            filterByDate(today);
            setActiveFilter('todayBtn');
        }

        function showUpcomingAppointments() {
            const rows = document.querySelectorAll('#appointmentsBody tr');
            const now = new Date();
            let visibleCount = 0;
            
            rows.forEach(row => {
                const appointmentDateStr = row.cells[0].textContent;
                const appointmentTimeStr = row.cells[1].textContent;
                const appointmentDateTime = parseAppointmentDateTime(appointmentDateStr, appointmentTimeStr);
                
                if (appointmentDateTime > now) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            updateFilterResults(visibleCount, 'แสดงการนัดหมายที่กำลังจะมาถึง', 'กำลังจะมาถึง');
            setActiveFilter('upcomingBtn');
        }

        function showAllAppointments() {
            const rows = document.querySelectorAll('#appointmentsBody tr');
            
            rows.forEach(row => {
                row.style.display = '';
            });
            
            updateFilterResults(allAppointments.length, `แสดงการนัดหมายทั้งหมด (รวม: ${allAppointments.length})`, 'การนัดหมายทั้งหมด');
            setActiveFilter('allBtn');
            
            toggleTableVisibility(allAppointments.length > 0);
        }

        function parseAppointmentDateTime(dateStr, timeStr) {
            const [day, month, year] = dateStr.split('/');
            const [hours, minutes] = timeStr.split(':');
            return new Date(year, month - 1, day, hours, minutes);
        }

        function updateFilterResults(count, message, title) {
            document.getElementById('appointmentCount').textContent = count;
            document.getElementById('sectionTitle').textContent = title;
            document.getElementById('selectedDateInfo').innerHTML = `<i class="fas fa-info-circle"></i> ${message}`;
            
            toggleTableVisibility(count > 0);
        }

        function setActiveFilter(activeId) {
            ['todayBtn', 'upcomingBtn', 'allBtn'].forEach(id => {
                const btn = document.getElementById(id);
                if (btn) {
                    btn.classList.toggle('active', btn.id === activeId);
                }
            });
        }

        function toggleTableVisibility(show) {
            const table = document.getElementById('appointmentsTable');
            const noAppointments = document.getElementById('noAppointments');
            
            if (table) table.style.display = show ? 'table' : 'none';
            if (noAppointments) noAppointments.style.display = show ? 'none' : 'block';
        }

        function changeMonth(direction) {
            currentDate.setMonth(currentDate.getMonth() + direction);
            updateMonthDisplay();
            generateWeekView();
            showAllAppointments();
        }

        function changeWeek(direction) {
            currentDate.setDate(currentDate.getDate() + (direction * 7));
            updateMonthDisplay();
            generateWeekView();
        }

        function goToToday() {
            currentDate = new Date();
            updateMonthDisplay();
            generateWeekView();
            setTimeout(() => showTodayAppointments(), 100);
        }

        function updateMonthDisplay() {
            const monthNames = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน',
                'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'];
            
            document.getElementById('currentMonth').textContent = 
                `${monthNames[currentDate.getMonth()]} ${currentDate.getFullYear() + 543}`;
        }

        function loadTodaysAppointments() {
            setTimeout(() => {
                showTodayAppointments();
            }, 100);
        }

        // Action functions
        function viewAppointment(queueId) {
            showLoading();
            window.location.href = `/dentist/appointments/${queueId}`;
        }

        function viewPatient(patientId) {
            if (patientId && patientId !== 'null') {
                showLoading();
                window.location.href = `/dentist/patients/${patientId}`;
            }
        }

        // ฟังก์ชันเพิ่มประวัติการรักษา
        function addHistory(queueId) {
            console.log('เพิ่มประวัติให้คิว:', queueId);
            showLoading();
            window.location.href = `/dentist/add-history?queueId=${queueId}`;
        }

        // ฟังก์ชันดูประวัติการรักษา
        function viewTreatmentHistory(queueId) {
            console.log('เปิดดูประวัติการรักษาของคิว:', queueId);
            showLoading();
            window.location.href = `/dentist/treatment-history/${queueId}`;
        }


        function updateAppointmentRow(queueId, newStatus) {
            const row = document.querySelector(`tr[data-appointment-id="${queueId}"]`);
            if (row) {
                row.dataset.status = newStatus;
                
                const statusCell = row.querySelector('.status-badge');
                if (statusCell) {
                    statusCell.className = `status-badge ${newStatus}`;
                    if (newStatus === 'completed') {
                        statusCell.innerHTML = '<i class="fas fa-check-circle"></i> รักษาเสร็จแล้ว';
                    } else if (newStatus === 'confirm') {
                        statusCell.innerHTML = '<i class="fas fa-user-md"></i> รอรักษา';
                    } else if (newStatus === 'pending') {
                        statusCell.innerHTML = '<i class="fas fa-clock"></i> รอยืนยัน';
                    } else if (newStatus === 'cancel') {
                        statusCell.innerHTML = '<i class="fas fa-times-circle"></i> ยกเลิก';
                    }
                }
                
                const actionsCell = row.querySelector('.actions-cell');
                if (actionsCell) {
                    if (newStatus === 'completed') {
                        actionsCell.innerHTML = `
                            <button onclick="viewTreatmentHistory(${queueId})" class="action-btn" title="ดูประวัติการรักษา">
                                <i class="fas fa-file-medical"></i> ดูประวัติ
                            </button>
                        `;
                    } else if (newStatus === 'cancel') {
                        actionsCell.innerHTML = `
                            <button onclick="viewAppointment(${queueId})" class="action-btn" title="ดูรายละเอียด" style="opacity: 0.6;">
                                <i class="fas fa-eye"></i> รายละเอียด
                            </button>
                        `;
                    } else if (newStatus === 'pending' || newStatus === 'confirm') {
                        actionsCell.innerHTML = `
                            <button onclick="addHistory(${queueId})" class="action-btn confirm" title="เพิ่มประวัติการรักษา">
                                <i class="fas fa-plus-circle"></i> เพิ่มประวัติ
                            </button>
                        `;
                    }
                }
            }
        }

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('#appointmentsBody tr');
            let visibleCount = 0;
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                if (text.includes(searchTerm)) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            if (searchTerm) {
                updateFilterResults(visibleCount, `ผลการค้นหา "${e.target.value}" (พบ ${visibleCount} รายการ)`, 'ผลการค้นหา');
                setActiveFilter(null);
            } else {
                showAllAppointments();
            }
        });

        // UI Helper functions
        function toggleDropdown() {
            const dropdown = document.getElementById('profileDropdown');
            const menu = document.getElementById('dropdownMenu');
            dropdown.classList.toggle('open');
            menu.classList.toggle('show');
        }

        function toggleNotifications() {
            showNotification('ฟีเจอร์การแจ้งเตือนจะพร้อมใช้งานเร็ว ๆ นี้!', 'info');
        }

        function showLoading() {
            const loadingEl = document.createElement('div');
            loadingEl.id = 'globalLoading';
            loadingEl.innerHTML = '<div class="loading"></div>';
            loadingEl.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(255,255,255,0.8);
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 9999;
            `;
            document.body.appendChild(loadingEl);
        }

        function hideLoading() {
            const loadingEl = document.getElementById('globalLoading');
            if (loadingEl) {
                loadingEl.remove();
            }
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            
            const icon = type === 'success' ? 'check-circle' : 
                        type === 'error' ? 'exclamation-circle' : 'info-circle';
            
            notification.innerHTML = `
                <i class="fas fa-${icon}"></i>
                <span>${message}</span>
            `;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'slideInRight 0.3s ease reverse';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            const profileDropdown = document.getElementById('profileDropdown');
            if (!profileDropdown.contains(e.target)) {
                profileDropdown.classList.remove('open');
                document.getElementById('dropdownMenu').classList.remove('show');
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.key) {
                    case 'f':
                        e.preventDefault();
                        document.getElementById('searchInput').focus();
                        break;
                    case '1':
                        e.preventDefault();
                        showTodayAppointments();
                        break;
                    case '2':
                        e.preventDefault();
                        showUpcomingAppointments();
                        break;
                    case '3':
                        e.preventDefault();
                        showAllAppointments();
                        break;
                }
            }
        });
    </script>
</body>
</html>
