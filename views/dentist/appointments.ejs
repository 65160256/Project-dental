<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Appointments - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar - ปรับให้เหมือนหน้า Schedule */
        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 100;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        /* Main Content */
        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar - ปรับให้เหมือนหน้า Schedule */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 50;
        }

        .search-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .search-section label {
            font-weight: 500;
            color: #555;
            font-size: 14px;
        }

        .search-box {
            background: #f8f9fa;
            border: 1px solid #e1e5e9;
            border-radius: 20px;
            padding: 8px 15px;
            display: flex;
            align-items: center;
            width: 250px;
            transition: all 0.3s ease;
        }

        .search-box:focus-within {
            border-color: #4A90E2;
            box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
        }

        .search-box i {
            color: #666;
            margin-right: 8px;
            font-size: 14px;
        }

        .search-box input {
            border: none;
            background: transparent;
            outline: none;
            width: 100%;
            font-size: 13px;
        }

        .search-box input::placeholder {
            color: #999;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-icon {
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            position: relative;
            transition: color 0.3s ease;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #dc3545;
            color: white;
            border-radius: 50%;
            width: 16px;
            height: 16px;
            font-size: 9px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
            transition: opacity 0.3s ease;
        }

        .user-info:hover {
            opacity: 0.8;
        }

        /* Gmail-style Avatar - เหมือนหน้า Schedule */
        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
            border: 2px solid rgba(74, 144, 226, 0.2);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .avatar:hover {
            transform: scale(1.05);
            border-color: #4A90E2;
        }

        .avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .avatar.no-photo {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-arrow {
            color: #666;
            font-size: 12px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            min-width: 180px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            z-index: 1000;
            animation: slideDown 0.3s ease;
            margin-top: 5px;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .dropdown-menu.show {
            display: block;
        }

        .dropdown-menu a {
            display: block;
            padding: 12px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
            transition: background 0.2s ease;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        .dropdown-menu hr {
            margin: 5px 0;
            border: none;
            height: 1px;
            background: #e1e5e9;
        }

        /* Content */
        .content {
            padding: 30px;
        }

        .page-header {
            margin-bottom: 30px;
        }

        .page-header h1 {
            font-size: 28px;
            color: #333;
            margin: 0;
            font-weight: 600;
        }

        /* Calendar Header */
        .calendar-header {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .calendar-nav-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #f1f3f4;
        }

        .month-year {
            font-size: 20px;
            font-weight: 600;
            color: #333;
        }

        .nav-buttons {
            display: flex;
            gap: 5px;
            background: #f8f9fa;
            padding: 3px;
            border-radius: 8px;
        }

        .nav-btn {
            padding: 8px 16px;
            border: none;
            background: transparent;
            color: #666;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .nav-btn:hover {
            background: #e9ecef;
        }

        .nav-btn.today {
            background: #4A90E2;
            color: white;
            box-shadow: 0 2px 4px rgba(74, 144, 226, 0.3);
        }

        .nav-btn.today:hover {
            background: #357abd;
        }

        /* Week View */
        .week-view {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 15px;
        }

        .day-header {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 20px 15px;
            text-align: center;
            font-weight: 600;
            color: #495057;
            border-radius: 10px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            min-height: 80px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .day-header:hover {
            background: linear-gradient(135deg, #e3f2fd, #bbdefb);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .day-header.today {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            box-shadow: 0 4px 15px rgba(74, 144, 226, 0.3);
        }

        .day-header.has-appointments {
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            border: 2px solid #ffc107;
        }

        .appointment-count {
            position: absolute;
            top: 8px;
            right: 8px;
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            font-size: 11px;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(220, 53, 69, 0.3);
        }

        /* Appointments Section */
        .appointments-section {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            flex-wrap: wrap;
            gap: 15px;
        }

        .section-title {
            font-size: 18px;
            color: #333;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 600;
        }

        .appointment-count-badge {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            padding: 6px 14px;
            border-radius: 20px;
            font-size: 13px;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(74, 144, 226, 0.3);
        }

        .filters-controls {
            display: flex;
            gap: 5px;
            background: #f8f9fa;
            padding: 3px;
            border-radius: 8px;
        }

        .filters-btn {
            padding: 8px 16px;
            border: none;
            background: transparent;
            color: #666;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .filters-btn:hover {
            background: #e9ecef;
        }

        .filters-btn.active {
            background: #4A90E2;
            color: white;
            box-shadow: 0 2px 4px rgba(74, 144, 226, 0.3);
        }

        /* Selected Date Info */
        .selected-date-info {
            margin-bottom: 20px;
            padding: 12px 18px;
            background: linear-gradient(135deg, #e3f2fd, #f3e5f5);
            border-radius: 8px;
            border-left: 4px solid #4A90E2;
            font-size: 13px;
            color: #1565c0;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* Appointments Table */
        .table-container {
            overflow-x: auto;
            border-radius: 10px;
            border: 1px solid #e1e5e9;
        }

        .appointments-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            margin: 0;
        }

        .appointments-table thead {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        }

        .appointments-table th {
            padding: 15px 12px;
            text-align: left;
            font-weight: 600;
            color: #555;
            font-size: 13px;
            border-bottom: 2px solid #e1e5e9;
            white-space: nowrap;
        }

        .appointments-table td {
            padding: 15px 12px;
            border-bottom: 1px solid #f1f3f4;
            color: #495057;
            font-size: 13px;
            vertical-align: middle;
        }

        .appointments-table tbody tr {
            transition: background-color 0.3s ease;
        }

        .appointments-table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .time-slot {
            font-weight: 600;
            color: #333;
            font-family: 'Courier New', monospace;
        }

        .patient-name {
            color: #4A90E2;
            font-weight: 600;
            cursor: pointer;
        }

        .patient-name:hover {
            text-decoration: underline;
        }

        .treatment-type {
            color: #666;
            font-weight: 500;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .status-badge.pending {
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            color: #856404;
            border: 1px solid #ffc107;
        }

        .status-badge.completed,
        .status-badge.confirm {
            background: linear-gradient(135deg, #d1fae5, #a7f3d0);
            color: #065f46;
            border: 1px solid #10b981;
        }

        .status-badge.cancel {
            background: linear-gradient(135deg, #fecaca, #fca5a5);
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        .actions-cell {
            display: flex;
            gap: 6px;
            flex-wrap: wrap;
        }

        .action-btn {
            padding: 6px 12px;
            border: none;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
            border-radius: 6px;
            cursor: pointer;
            font-size: 11px;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 4px;
            white-space: nowrap;
        }

        .action-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .action-btn.confirm {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .action-btn.confirm:hover {
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }

        .action-btn.danger {
            background: linear-gradient(135deg, #dc3545, #c82333);
        }

        .action-btn.danger:hover {
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
        }

        .no-appointments {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .no-appointments i {
            font-size: 64px;
            color: #ddd;
            margin-bottom: 20px;
        }

        .no-appointments h3 {
            font-size: 18px;
            color: #999;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .no-appointments p {
            color: #999;
            font-size: 13px;
        }

        /* Loading States */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #4A90E2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Toast Notification - เหมือนหน้า Schedule */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
            z-index: 1001;
            max-width: 400px;
            font-size: 14px;
            animation: slideInRight 0.3s ease;
            border-left: 4px solid #4A90E2;
        }

        .toast.success { border-left-color: #28a745; }
        .toast.error { border-left-color: #dc3545; }
        .toast.info { border-left-color: #3b82f6; }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .top-bar {
                padding: 10px 15px;
                flex-direction: column;
                gap: 10px;
            }
            
            .search-box {
                width: 200px;
            }
            
            .content {
                padding: 20px 15px;
            }
            
            .week-view {
                gap: 8px;
            }
            
            .day-header {
                padding: 15px 8px;
                min-height: 60px;
                font-size: 12px;
            }
            
            .appointments-table th,
            .appointments-table td {
                padding: 10px 8px;
                font-size: 11px;
            }

            .section-header {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li><a href="/dentist/dashboard"><i class="fas fa-chart-bar"></i> Dashboard</a></li>
            <li><a href="/dentist/schedule"><i class="fas fa-calendar-alt"></i> Work Schedule</a></li>
            <li class="active"><a href="/dentist/appointments"><i class="fas fa-hospital"></i> Appointments</a></li>
            <li><a href="/dentist/patients"><i class="fas fa-users"></i> Patients</a></li>
            <li><a href="/dentist/patient-history"><i class="fas fa-history"></i> History</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <div class="search-section">
                <label>Search:</label>
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Search by patient name, treatment..." id="searchInput" autocomplete="off" />
                </div>
            </div>
            
            <div class="user-section">
                <i class="fas fa-bell notification-icon" onclick="toggleNotifications()" title="Notifications">
                    <% if (typeof notificationCount !== 'undefined' && notificationCount > 0) { %>
                    <span class="notification-badge" id="notificationBadge"><%= notificationCount %></span>
                    <% } %>
                </i>
                
                <div class="profile-dropdown" id="profileDropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar no-photo" id="userAvatar">
                            <% if (dentist && dentist.photo && dentist.photo !== 'default-avatar.png') { %>
                                <img src="/uploads/<%= dentist.photo %>" alt="Profile" onerror="showInitials()">
                            <% } else { %>
                                <%= (dentist && dentist.fname) ? dentist.fname.charAt(0).toUpperCase() + (dentist.lname ? dentist.lname.charAt(0).toUpperCase() : '') : 'D' %>
                            <% } %>
                        </div>
                        <div class="user-details">
                            <strong>Dr. <%= dentist ? dentist.fname + ' ' + dentist.lname : 'Doctor' %></strong>
                            <small>dentist</small>
                        </div>
                        <i class="fas fa-caret-down dropdown-arrow"></i>
                    </div>
                    <div class="dropdown-menu" id="dropdownMenu">
                        <a href="/dentist/profile">
                            <i class="fas fa-user"></i> My Profile
                        </a>
                        <a href="/dentist/profile/change-password">
                            <i class="fas fa-key"></i> Change Password
                        </a>
                        <hr />
                        <a href="/logout">
                            <i class="fas fa-sign-out-alt"></i> Log Out
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content -->
        <div class="content">
            <!-- Page Header -->
            <div class="page-header">
                <h1>Appointments Management</h1>
            </div>

            <!-- Calendar Section -->
            <div class="calendar-header">
                <div class="calendar-nav-bar">
                    <h3 class="month-year" id="currentMonth">September 2025</h3>
                    <div class="nav-buttons">
                        <button class="nav-btn" onclick="changeWeek(-1)" title="Previous Week">
                            <i class="fas fa-chevron-left"></i><i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="nav-btn" onclick="changeMonth(-1)" title="Previous Month">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <button class="nav-btn today" onclick="goToToday()" title="Today">
                            <i class="fas fa-home"></i> Today
                        </button>
                        <button class="nav-btn" onclick="changeMonth(1)" title="Next Month">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                        <button class="nav-btn" onclick="changeWeek(1)" title="Next Week">
                            <i class="fas fa-chevron-right"></i><i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
                
                <div class="week-view" id="weekView">
                    <!-- Week will be generated by JavaScript -->
                </div>
            </div>

            <!-- Appointments Section -->
            <div class="appointments-section">
                <div class="section-header">
                    <div class="section-title">
                        <span id="sectionTitle">All Appointments</span>
                        <span class="appointment-count-badge" id="appointmentCount"><%= stats ? stats.total : (appointments ? appointments.length : 0) %></span>
                    </div>
                    <div class="filters-controls">
                        <button class="filters-btn" onclick="showTodayAppointments()" id="todayBtn">
                            <i class="fas fa-calendar-day"></i> Today
                        </button>
                        <button class="filters-btn" onclick="showUpcomingAppointments()" id="upcomingBtn">
                            <i class="fas fa-arrow-right"></i> Upcoming
                        </button>
                        <button class="filters-btn active" onclick="showAllAppointments()" id="allBtn">
                            <i class="fas fa-list"></i> All
                        </button>
                    </div>
                </div>

                <div class="selected-date-info" id="selectedDateInfo">
                    <i class="fas fa-info-circle"></i>
                    Showing all appointments (Total: <%= stats ? stats.total : (appointments ? appointments.length : 0) %>)
                </div>

                <div class="table-container">
                    <% if (appointments && appointments.length > 0) { %>
                    <table class="appointments-table" id="appointmentsTable">
                        <thead>
                            <tr>
                                <th><i class="fas fa-calendar"></i> Date</th>
                                <th><i class="fas fa-clock"></i> Time</th>
                                <th><i class="fas fa-user"></i> Patient</th>
                                <th><i class="fas fa-tooth"></i> Treatment</th>
                                <th><i class="fas fa-info-circle"></i> Status</th>
                                <th><i class="fas fa-cogs"></i> Actions</th>
                            </tr>
                        </thead>
                        <tbody id="appointmentsBody">
                            <% appointments.forEach(function(appointment) { %>
                            <tr data-appointment-id="<%= appointment.queue_id %>" data-status="<%= appointment.queue_status %>">
                                <td><%= new Date(appointment.time).toLocaleDateString('en-GB') %></td>
                                <td class="time-slot"><%= new Date(appointment.time).toLocaleTimeString('en-GB', {hour: '2-digit', minute: '2-digit', hour12: false}) %></td>
                                <td class="patient-name" onclick="viewPatient(<%= appointment.patient_id || 'null' %>)">
                                    <%= appointment.fname %> <%= appointment.lname %>
                                    <% if (appointment.phone) { %>
                                        <br><small style="color: #666; font-weight: normal;"><%= appointment.phone %></small>
                                    <% } %>
                                </td>
                                <td class="treatment-type">
                                    <%= appointment.treatment_name %>
                                    <% if (appointment.duration) { %>
                                        <br><small style="color: #666;">(<%= appointment.duration %> min)</small>
                                    <% } %>
                                </td>
                                <td>
                                    <span class="status-badge <%= appointment.queue_status %>">
                                        <% if (appointment.queue_status === 'completed' || appointment.queue_status === 'confirm') { %>
                                            <i class="fas fa-check"></i> รักษาแล้ว
                                        <% } else if (appointment.queue_status === 'pending') { %>
                                            <i class="fas fa-clock"></i> รอรักษา
                                        <% } else if (appointment.queue_status === 'cancel') { %>
                                            <i class="fas fa-times"></i> ยกเลิก
                                        <% } else { %>
                                            <%= appointment.queue_status %>
                                        <% } %>
                                    </span>
                                </td>
                                <td>
                                    <div class="actions-cell">
                                        <button onclick="viewAppointment(<%= appointment.queue_id %>)" class="action-btn" title="View Details">
                                            <i class="fas fa-eye"></i> View
                                        </button>
                                        <% if (appointment.queue_status === 'pending') { %>
                                        <button onclick="completeAppointment(<%= appointment.queue_id %>)" class="action-btn confirm" title="Mark as Complete">
                                            <i class="fas fa-check"></i> Complete
                                        </button>
                                        <button onclick="cancelAppointment(<%= appointment.queue_id %>)" class="action-btn danger" title="Cancel Appointment">
                                            <i class="fas fa-times"></i> Cancel
                                        </button>
                                        <% } %>
                                    </div>
                                </td>
                            </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <% } else { %>
                    <div class="no-appointments" id="noAppointments">
                        <i class="fas fa-calendar-times"></i>
                        <h3>No appointments scheduled</h3>
                        <p>There are no appointments at this time. New appointments will appear here.</p>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables - ดึงข้อมูลจาก backend
        let currentDate = new Date();
        let allAppointments = <%- JSON.stringify(appointments || []) %>;
        let stats = <%- JSON.stringify(stats || {total: 0, today: 0, pending: 0, completed: 0, cancelled: 0}) %>;
        
        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            initializeAvatar();
            generateWeekView();
            loadTodaysAppointments();
            updateMonthDisplay();
        });

        // Gmail-style Avatar Generation
        function initializeAvatar() {
            const avatarEl = document.getElementById('userAvatar');
            const userName = avatarEl.textContent || avatarEl.innerText;
            
            // ถ้ามีรูปภาพอยู่แล้ว ไม่ต้องทำอะไร
            if (avatarEl.querySelector('img')) {
                return;
            }
            
            // ใช้สีฟ้าเป็นหลัก
            const blueColors = [
                '#4A90E2', '#2196F3', '#03A9F4', '#00BCD4',
                '#5DADE2', '#3498DB', '#2980B9', '#1976D2'
            ];
            const colorIndex = userName.length % blueColors.length;
            avatarEl.style.background = blueColors[colorIndex];
        }

        // Show initials if image fails to load
        function showInitials() {
            const avatar = document.getElementById('userAvatar');
            const img = avatar.querySelector('img');
            if (img) {
                img.remove();
                avatar.innerHTML = avatar.dataset.initials || 'D';
            }
        }

        // Generate week view calendar
        function generateWeekView() {
            const weekView = document.getElementById('weekView');
            const today = new Date();
            
            const startOfWeek = new Date(currentDate);
            const day = startOfWeek.getDay();
            startOfWeek.setDate(startOfWeek.getDate() - day);

            weekView.innerHTML = '';
            
            const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
            const fullDayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            
            for (let i = 0; i < 7; i++) {
                const date = new Date(startOfWeek);
                date.setDate(startOfWeek.getDate() + i);
                
                const dateStr = date.toISOString().split('T')[0];
                const dayAppointments = countAppointmentsForDate(dateStr);
                
                const dayHeader = document.createElement('div');
                dayHeader.className = 'day-header';
                dayHeader.innerHTML = `
                    <div style="font-weight: 700;">${dayNames[i]}</div>
                    <div style="font-size: 18px; margin-top: 5px;">${date.getDate()}</div>
                `;
                dayHeader.title = `${fullDayNames[i]}, ${date.toLocaleDateString('en-GB')}`;
                dayHeader.onclick = () => filterByDate(dateStr);
                
                if (date.toDateString() === today.toDateString()) {
                    dayHeader.classList.add('today');
                }
                
                if (dayAppointments > 0) {
                    dayHeader.classList.add('has-appointments');
                    const badge = document.createElement('div');
                    badge.className = 'appointment-count';
                    badge.textContent = dayAppointments;
                    dayHeader.appendChild(badge);
                }
                
                weekView.appendChild(dayHeader);
            }
        }

        // Count appointments for a specific date
        function countAppointmentsForDate(dateStr) {
            return allAppointments.filter(apt => {
                const aptDate = new Date(apt.time).toISOString().split('T')[0];
                return aptDate === dateStr;
            }).length;
        }

        // Filter appointments by date
        function filterByDate(date) {
            const rows = document.querySelectorAll('#appointmentsBody tr');
            const dateInfo = document.getElementById('selectedDateInfo');
            let visibleCount = 0;
            
            const targetDate = new Date(date);
            const formattedDate = targetDate.toLocaleDateString('en-GB', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
            
            rows.forEach(row => {
                const appointmentDateStr = row.cells[0].textContent;
                const appointmentDate = convertToComparableDate(appointmentDateStr);
                const targetDateStr = targetDate.toLocaleDateString('en-GB');
                
                if (appointmentDate === targetDateStr) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            updateFilterResults(visibleCount, `Appointments for ${formattedDate}`, 'Selected Date');
            setActiveFilter(null);
        }

        // Convert date string to comparable format
        function convertToComparableDate(dateStr) {
            return dateStr;
        }

        // Show today's appointments
        function showTodayAppointments() {
            const today = new Date().toISOString().split('T')[0];
            filterByDate(today);
            setActiveFilter('todayBtn');
        }

        // Show upcoming appointments
        function showUpcomingAppointments() {
            const rows = document.querySelectorAll('#appointmentsBody tr');
            const now = new Date();
            let visibleCount = 0;
            
            rows.forEach(row => {
                const appointmentDateStr = row.cells[0].textContent;
                const appointmentTimeStr = row.cells[1].textContent;
                const appointmentDateTime = parseAppointmentDateTime(appointmentDateStr, appointmentTimeStr);
                
                if (appointmentDateTime > now) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            updateFilterResults(visibleCount, 'Showing upcoming appointments', 'Upcoming Appointments');
            setActiveFilter('upcomingBtn');
        }

        // Show all appointments
        function showAllAppointments() {
            const rows = document.querySelectorAll('#appointmentsBody tr');
            
            rows.forEach(row => {
                row.style.display = '';
            });
            
            updateFilterResults(allAppointments.length, `Showing all appointments (Total: ${allAppointments.length})`, 'All Appointments');
            setActiveFilter('allBtn');
            
            toggleTableVisibility(allAppointments.length > 0);
        }

        // Parse appointment date and time
        function parseAppointmentDateTime(dateStr, timeStr) {
            const [day, month, year] = dateStr.split('/');
            const [hours, minutes] = timeStr.split(':');
            return new Date(year, month - 1, day, hours, minutes);
        }

        // Update filter results display
        function updateFilterResults(count, message, title) {
            document.getElementById('appointmentCount').textContent = count;
            document.getElementById('sectionTitle').textContent = title;
            document.getElementById('selectedDateInfo').innerHTML = `<i class="fas fa-info-circle"></i> ${message}`;
            
            toggleTableVisibility(count > 0);
        }

        // Set active filter button
        function setActiveFilter(activeId) {
            ['todayBtn', 'upcomingBtn', 'allBtn'].forEach(id => {
                const btn = document.getElementById(id);
                if (btn) {
                    btn.classList.toggle('active', btn.id === activeId);
                }
            });
        }

        // Toggle table visibility
        function toggleTableVisibility(show) {
            const table = document.getElementById('appointmentsTable');
            const noAppointments = document.getElementById('noAppointments');
            
            if (table) table.style.display = show ? 'table' : 'none';
            if (noAppointments) noAppointments.style.display = show ? 'none' : 'block';
        }

        // Navigation functions
        function changeMonth(direction) {
            currentDate.setMonth(currentDate.getMonth() + direction);
            updateMonthDisplay();
            generateWeekView();
            showAllAppointments();
        }

        function changeWeek(direction) {
            currentDate.setDate(currentDate.getDate() + (direction * 7));
            updateMonthDisplay();
            generateWeekView();
        }

        function goToToday() {
            currentDate = new Date();
            updateMonthDisplay();
            generateWeekView();
            setTimeout(() => showTodayAppointments(), 100);
        }

        function updateMonthDisplay() {
            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',
                'July', 'August', 'September', 'October', 'November', 'December'];
            
            document.getElementById('currentMonth').textContent = 
                `${monthNames[currentDate.getMonth()]} ${currentDate.getFullYear()}`;
        }

        // Load today's appointments on page load
        function loadTodaysAppointments() {
            setTimeout(() => {
                showTodayAppointments();
            }, 100);
        }

        // Action functions
        function viewAppointment(queueId) {
            showLoading();
            window.location.href = `/dentist/appointments/${queueId}`;
        }

        function viewPatient(patientId) {
            if (patientId && patientId !== 'null') {
                showLoading();
                window.location.href = `/dentist/patients/${patientId}`;
            }
        }

        function completeAppointment(queueId) {
            if (confirm('Mark this appointment as completed?')) {
                showLoading();
                
                fetch('/dentist/api/appointment/complete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ queueId: queueId, status: 'completed' })
                })
                .then(response => response.json())
                .then(data => {
                    hideLoading();
                    if (data.success) {
                        showToast('Appointment marked as completed successfully!', 'success');
                        updateAppointmentRow(queueId, 'completed');
                    } else {
                        showToast('Error: ' + data.error, 'error');
                    }
                })
                .catch(error => {
                    hideLoading();
                    console.error('Error:', error);
                    showToast('Connection error occurred', 'error');
                });
            }
        }

        function cancelAppointment(queueId) {
            if (confirm('Are you sure you want to cancel this appointment?')) {
                showLoading();
                
                fetch('/dentist/api/appointment/cancel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ queueId: queueId })
                })
                .then(response => response.json())
                .then(data => {
                    hideLoading();
                    if (data.success) {
                        showToast('Appointment cancelled successfully!', 'success');
                        updateAppointmentRow(queueId, 'cancel');
                    } else {
                        showToast('Error: ' + data.error, 'error');
                    }
                })
                .catch(error => {
                    hideLoading();
                    console.error('Error:', error);
                    showToast('Connection error occurred', 'error');
                });
            }
        }

        // Update appointment row after action
        function updateAppointmentRow(queueId, newStatus) {
            const row = document.querySelector(`tr[data-appointment-id="${queueId}"]`);
            if (row) {
                row.dataset.status = newStatus;
                
                // Update status badge
                const statusCell = row.querySelector('.status-badge');
                if (statusCell) {
                    statusCell.className = `status-badge ${newStatus}`;
                    if (newStatus === 'completed') {
                        statusCell.innerHTML = '<i class="fas fa-check"></i> รักษาแล้ว';
                    } else if (newStatus === 'cancel') {
                        statusCell.innerHTML = '<i class="fas fa-times"></i> ยกเลิก';
                    }
                }
                
                // Update actions
                const actionsCell = row.querySelector('.actions-cell');
                if (actionsCell && newStatus !== 'pending') {
                    const actionBtns = actionsCell.querySelectorAll('.action-btn:not([onclick*="viewAppointment"])');
                    actionBtns.forEach(btn => btn.remove());
                }
            }
        }

        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('#appointmentsBody tr');
            let visibleCount = 0;
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                if (text.includes(searchTerm)) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            if (searchTerm) {
                updateFilterResults(visibleCount, `Search results for "${e.target.value}" (${visibleCount} found)`, 'Search Results');
                setActiveFilter(null);
            } else {
                showAllAppointments();
            }
        });

        // UI Helper functions
        function toggleDropdown() {
            const menu = document.getElementById('dropdownMenu');
            menu.classList.toggle('show');
        }

        function toggleNotifications() {
            showToast('Notifications feature coming soon!', 'info');
        }

        function showLoading() {
            const loadingEl = document.createElement('div');
            loadingEl.id = 'globalLoading';
            loadingEl.innerHTML = '<div class="loading"></div>';
            loadingEl.style.cssText = `
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(255,255,255,0.8);
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 9999;
            `;
            document.body.appendChild(loadingEl);
        }

        function hideLoading() {
            const loadingEl = document.getElementById('globalLoading');
            if (loadingEl) {
                loadingEl.remove();
            }
        }

        // Toast notification
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            const icon = {
                success: 'fas fa-check-circle',
                error: 'fas fa-exclamation-circle',
                info: 'fas fa-info-circle'
            }[type] || 'fas fa-info-circle';
            
            toast.innerHTML = `
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="${icon}"></i>
                    <span>${message}</span>
                </div>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.style.animation = 'slideInRight 0.3s ease reverse';
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            const profileDropdown = document.getElementById('profileDropdown');
            if (!profileDropdown.contains(e.target)) {
                document.getElementById('dropdownMenu').classList.remove('show');
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.key) {
                    case 'f':
                        e.preventDefault();
                        document.getElementById('searchInput').focus();
                        break;
                    case '1':
                        e.preventDefault();
                        showTodayAppointments();
                        break;
                    case '2':
                        e.preventDefault();
                        showUpcomingAppointments();
                        break;
                    case '3':
                        e.preventDefault();
                        showAllAppointments();
                        break;
                }
            }
        });
    </script>
</body>
</html>