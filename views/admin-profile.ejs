<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile - Smile Clinic</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            margin: 0;
        }

        /* Sidebar - Consistent with other pages */
        .sidebar {
            width: 180px;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            position: fixed;
            height: 100vh;
            padding: 0;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar .logo {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar .logo .logo-icon {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: white;
            padding: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: #4A90E2;
        }

        .sidebar .logo h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .sidebar ul {
            list-style: none;
            padding: 10px 0;
            margin: 0;
        }

        .sidebar ul li {
            margin: 2px 0;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            color: rgba(255,255,255,0.9);
            text-decoration: none;
            transition: all 0.3s ease;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar ul li.active a,
        .sidebar ul li:hover a {
            background-color: rgba(255,255,255,0.2);
            color: white;
            border-radius: 8px;
            margin: 0 10px;
        }

        /* Main Content */
        .main {
            margin-left: 180px;
            padding: 0;
            min-height: 100vh;
        }

        /* Top Bar */
        .top-bar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            position: relative;
        }

        .topbar-left {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .topbar-left h2 {
            margin: 0;
            font-size: 20px;
            color: #333;
            font-weight: 600;
        }

        .back-btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #f8f9fa;
            border: 1px solid #e1e5e9;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            color: #666;
        }

        .back-btn:hover {
            background: #4A90E2;
            color: white;
            border-color: #4A90E2;
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .notification-container {
            position: relative;
        }

        .notification-icon {
            position: relative;
            width: 20px;
            height: 20px;
            cursor: pointer;
            color: #666;
            transition: color 0.3s ease;
        }

        .notification-icon:hover {
            color: #4A90E2;
        }

        .notification-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: 600;
            display: none;
        }

        .notification-badge.show {
            display: flex;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .notification-dropdown {
            position: absolute;
            top: 100%;
            right: -10px;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 12px;
            min-width: 380px;
            max-width: 420px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            z-index: 2000;
            display: none;
            max-height: 500px;
            overflow: hidden;
        }

        .notification-dropdown.show {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .notification-header {
            padding: 20px;
            border-bottom: 1px solid #e1e5e9;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .notification-header h3 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

        .notification-content {
            max-height: 400px;
            overflow-y: auto;
            padding: 10px;
        }

        .notification-item {
            padding: 12px;
            border-bottom: 1px solid #f1f3f4;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .notification-item:hover {
            background-color: #f8f9fa;
        }

        .notification-item:last-child {
            border-bottom: none;
        }

        .notification-title {
            font-weight: 600;
            color: #333;
            font-size: 13px;
            margin-bottom: 3px;
        }

        .notification-message {
            color: #666;
            font-size: 12px;
            margin-bottom: 5px;
            line-height: 1.3;
        }

        .notification-time {
            color: #999;
            font-size: 11px;
        }

        .profile-dropdown {
            position: relative;
        }

        .user-info {
            display: flex;
            align-items: center;
            cursor: pointer;
            gap: 10px;
        }

        .avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #4A90E2;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .user-details strong {
            display: block;
            font-size: 13px;
            color: #333;
        }

        .user-details small {
            color: #666;
            font-size: 11px;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: white;
            border: 1px solid #e1e5e9;
            border-radius: 6px;
            min-width: 160px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .dropdown-menu a {
            display: block;
            padding: 10px 15px;
            text-decoration: none;
            color: #333;
            font-size: 13px;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        /* Content */
        .content {
            padding: 30px;
        }

        /* Alert Messages */
        .alert {
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .alert.success {
            background: #d1f2eb;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }

        .alert.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .alert i {
            font-size: 16px;
        }

        /* Profile Card */
        .profile-card {
            background: white;
            border-radius: 16px;
            padding: 40px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            max-width: 600px;
            margin: 0 auto;
            text-align: center;
        }

        .profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 25px;
            font-size: 48px;
            color: white;
            font-weight: 600;
            text-transform: uppercase;
        }

        .profile-card h2 {
            font-size: 28px;
            color: #333;
            margin: 0 0 10px 0;
            font-weight: 600;
        }

        .last-login {
            color: #666;
            font-size: 14px;
            margin-bottom: 30px;
            padding: 8px 16px;
            background: #f8f9fa;
            border-radius: 20px;
            display: inline-block;
        }

        .profile-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
            text-align: left;
        }

        .info-item {
            padding: 20px;
            background: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #e1e5e9;
        }

        .info-item label {
            display: block;
            font-size: 12px;
            font-weight: 600;
            color: #666;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .info-item .value {
            font-size: 16px;
            color: #333;
            font-weight: 500;
        }

        .info-item .password-value {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .password-dots {
            font-family: monospace;
            letter-spacing: 3px;
            color: #666;
        }

        .toggle-password {
            background: none;
            border: none;
            color: #4A90E2;
            cursor: pointer;
            font-size: 12px;
            padding: 0;
        }

        .toggle-password:hover {
            text-decoration: underline;
        }

        /* Buttons */
        .buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-top: 30px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            min-width: 140px;
            justify-content: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4A90E2, #2DA8FF);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.3);
        }

        .btn-secondary {
            background: #6c757d;
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn-danger:hover {
            background: #c82333;
            transform: translateY(-2px);
        }

        /* Modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 3000;
            display: none;
            align-items: center;
            justify-content: center;
        }

        .modal.show {
            display: flex;
        }

        .modal-content {
            background: white;
            border-radius: 16px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            position: relative;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e1e5e9;
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #666;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .close:hover {
            background: #f8f9fa;
            color: #333;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            font-size: 13px;
            font-weight: 600;
            color: #555;
            margin-bottom: 8px;
        }

        .form-group input {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #e1e5e9;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #4A90E2;
            box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.1);
        }

        .password-input {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #666;
            cursor: pointer;
            padding: 4px;
        }

        .password-toggle:hover {
            color: #4A90E2;
        }

        /* Form Buttons */
        .form-buttons {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid #e1e5e9;
        }

        /* Toast notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 12px 20px;
            border-radius: 8px;
            color: white;
            font-size: 14px;
            font-weight: 500;
            z-index: 4000;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            max-width: 300px;
            display: none;
        }

        .toast.success {
            background: #10b981;
        }

        .toast.error {
            background: #ef4444;
        }

        .toast.info {
            background: #3b82f6;
        }

        .toast.show {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOutRight {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                height: auto;
                position: relative;
            }
            
            .main {
                margin-left: 0;
            }
            
            .top-bar {
                flex-direction: column;
                gap: 15px;
                align-items: stretch;
            }
            
            .profile-info {
                grid-template-columns: 1fr;
            }
            
            .buttons {
                flex-direction: column;
            }
            
            .form-buttons {
                flex-direction: column;
            }
        }

        /* Loading states */
        .loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 2px solid rgba(255,255,255,0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <div class="logo-icon">🦷</div>
            <h3>Smile Clinic</h3>
        </div>
        <ul>
            <li><a href="/admin/dashboard"><i class="fas fa-chart-bar"></i> Dashboard</a></li>
            <li><a href="/admin/schedule"><i class="fas fa-calendar-alt"></i> Schedule</a></li>
            <li><a href="/admin/appointments"><i class="fas fa-hospital"></i> Appointments</a></li>
            <li><a href="/admin/dentists"><i class="fas fa-user-md"></i> Dentists</a></li>
            <li><a href="/admin/patients"><i class="fas fa-users"></i> Patients</a></li>
            <li><a href="/admin/treatments"><i class="fas fa-tooth"></i> Treatments</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main">
        <!-- Top Bar -->
        <div class="top-bar">
            <div class="topbar-left">
                <a href="/admin/dashboard" class="back-btn" title="Back to Dashboard">
                    <i class="fas fa-arrow-left"></i>
                </a>
                <h2>My Profile</h2>
            </div>
            <div class="user-section">
                <div class="notification-container">
                    <i class="fas fa-bell notification-icon" onclick="toggleNotifications()"></i>
                    <div class="notification-badge" id="notificationBadge">0</div>
                    
                    <div class="notification-dropdown" id="notificationDropdown">
                        <div class="notification-header">
                            <h3>Notifications</h3>
                        </div>
                        <div class="notification-content" id="notificationContent">
                            <div style="text-align: center; color: #666; padding: 20px;">
                                <i class="fas fa-bell-slash" style="font-size: 24px; margin-bottom: 10px; color: #ccc;"></i>
                                <p>No new notifications</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="profile-dropdown">
                    <div class="user-info" onclick="toggleDropdown()">
                        <div class="avatar" id="userAvatar">A</div>
                        <div class="user-details">
                            <strong>Hello Admin</strong>
                            <small>administrator</small>
                        </div>
                        <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="dropdown-menu" id="profileDropdown">
                        <a href="/admin/profile"><i class="fas fa-user"></i> My Profile</a>
                        <hr />
                        <a href="/logout"><i class="fas fa-sign-out-alt"></i> Log Out</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Content -->
        <div class="content">
            <!-- Alert Messages -->
            <div id="alertContainer"></div>

            <!-- Profile Card -->
            <div class="profile-card">
                <div class="profile-image" id="profileAvatar">A</div>
                <h2 id="userRole">Administrator</h2>
                <p class="last-login" id="lastLogin">Last Login: Loading...</p>

                <div class="profile-info">
                    <div class="info-item">
                        <label>Username</label>
                        <div class="value" id="username">Loading...</div>
                    </div>
                    <div class="info-item">
                        <label>Email Address</label>
                        <div class="value" id="email">Loading...</div>
                    </div>
                    <div class="info-item">
                        <label>Role</label>
                        <div class="value" id="role">Loading...</div>
                    </div>
                    <div class="info-item">
                        <label>Password</label>
                        <div class="password-value">
                            <span class="password-dots">••••••••</span>
                            <button class="toggle-password" onclick="showChangePasswordModal()">
                                <i class="fas fa-edit"></i> Change
                            </button>
                        </div>
                    </div>
                </div>

                <div class="buttons">
                    <button class="btn btn-primary" onclick="showChangePasswordModal()">
                        <i class="fas fa-key"></i>
                        Change Password
                    </button>
                    <button class="btn btn-secondary" onclick="refreshProfile()">
                        <i class="fas fa-sync-alt"></i>
                        Refresh
                    </button>
                    <a href="/logout" class="btn btn-danger">
                        <i class="fas fa-sign-out-alt"></i>
                        Log Out
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Change Password Modal -->
    <div id="changePasswordModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Change Password</h3>
                <button class="close" onclick="closeChangePasswordModal()">&times;</button>
            </div>
            <form id="changePasswordForm">
                <div class="form-group">
                    <label for="currentPassword">Current Password</label>
                    <div class="password-input">
                        <input type="password" id="currentPassword" name="currentPassword" required>
                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('currentPassword')">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <label for="newPassword">New Password</label>
                    <div class="password-input">
                        <input type="password" id="newPassword" name="newPassword" required minlength="6">
                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('newPassword')">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <label for="confirmPassword">Confirm New Password</label>
                    <div class="password-input">
                        <input type="password" id="confirmPassword" name="confirmPassword" required minlength="6">
                        <button type="button" class="password-toggle" onclick="togglePasswordVisibility('confirmPassword')">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                </div>
                <div class="form-buttons">
                    <button type="button" class="btn btn-secondary" onclick="closeChangePasswordModal()">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary" id="submitPasswordBtn">
                        <i class="fas fa-save"></i>
                        Update Password
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" class="toast">
        <i class="fas fa-check-circle"></i>
        <span id="toastMessage">Success message</span>
    </div>

    <script>
        let userProfileData = {};
        let notificationData = [];

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initializing Profile page...');
            loadUserProfile();
            loadNotifications();
            setupEventListeners();
        });

        // Setup event listeners
        function setupEventListeners() {
            // Change password form
            document.getElementById('changePasswordForm').addEventListener('submit', handlePasswordChange);

            // Close modal when clicking outside
            document.addEventListener('click', function(event) {
                const profileDropdown = document.querySelector('.profile-dropdown');
                if (!profileDropdown.contains(event.target)) {
                    document.getElementById('profileDropdown').style.display = 'none';
                }
                
                const notificationContainer = document.querySelector('.notification-container');
                if (!notificationContainer.contains(event.target)) {
                    document.getElementById('notificationDropdown').classList.remove('show');
                }
                
                const modal = document.getElementById('changePasswordModal');
                if (event.target === modal) {
                    closeChangePasswordModal();
                }
            });

            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    closeChangePasswordModal();
                    document.getElementById('notificationDropdown').classList.remove('show');
                    document.getElementById('profileDropdown').style.display = 'none';
                }
            });
        }

        // Load user profile data
        async function loadUserProfile() {
            try {
                showLoading(true);
                const response = await fetch('/admin/profile/api');
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.success) {
                    userProfileData = data;
                    updateProfileDisplay(data);
                } else {
                    throw new Error(data.error || 'Failed to load profile');
                }
            } catch (error) {
                console.error('Error loading profile:', error);
                showToast('Failed to load profile information', 'error');
                showAlert('Failed to load profile information. Please refresh the page.', 'error');
            } finally {
                showLoading(false);
            }
        }

        // Update profile display
        function updateProfileDisplay(data) {
            // Update avatar
            const firstLetter = data.email.charAt(0).toUpperCase();
            document.getElementById('profileAvatar').textContent = firstLetter;
            document.getElementById('userAvatar').textContent = firstLetter;

            // Update profile information
            document.getElementById('userRole').textContent = data.role || 'Administrator';
            document.getElementById('username').textContent = data.username || data.email;
            document.getElementById('email').textContent = data.email;
            document.getElementById('role').textContent = data.role || 'Administrator';
            
            // Update last login
            if (data.last_login) {
                const lastLogin = new Date(data.last_login);
                document.getElementById('lastLogin').textContent = 
                    `Last Login: ${lastLogin.toLocaleDateString('en-US', { 
                        year: 'numeric', 
                        month: 'long', 
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit'
                    })}`;
            } else {
                document.getElementById('lastLogin').textContent = 'Last Login: Never';
            }
        }

        // Handle password change
        async function handlePasswordChange(event) {
            event.preventDefault();
            
            const form = event.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());
            
            // Validate passwords match
            if (data.newPassword !== data.confirmPassword) {
                showToast('New passwords do not match', 'error');
                return;
            }
            
            // Validate password length
            if (data.newPassword.length < 6) {
                showToast('Password must be at least 6 characters long', 'error');
                return;
            }
            
            try {
                showPasswordChangeLoading(true);
                
                const response = await fetch('/admin/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (response.ok && result.success) {
                    showToast('Password changed successfully! Please log in again.', 'success');
                    closeChangePasswordModal();
                    form.reset();
                    
                    // Redirect to login after 2 seconds
                    setTimeout(() => {
                        window.location.href = '/login';
                    }, 2000);
                } else {
                    throw new Error(result.message || 'Failed to change password');
                }
            } catch (error) {
                console.error('Error changing password:', error);
                showToast(error.message || 'Failed to change password', 'error');
            } finally {
                showPasswordChangeLoading(false);
            }
        }

        // Show/hide password change loading
        function showPasswordChangeLoading(show) {
            const submitBtn = document.getElementById('submitPasswordBtn');
            const form = document.getElementById('changePasswordForm');
            
            if (show) {
                submitBtn.innerHTML = '<div class="spinner"></div> Updating...';
                submitBtn.disabled = true;
                form.classList.add('loading');
            } else {
                submitBtn.innerHTML = '<i class="fas fa-save"></i> Update Password';
                submitBtn.disabled = false;
                form.classList.remove('loading');
            }
        }

        // Show/hide loading state
        function showLoading(show) {
            const profileCard = document.querySelector('.profile-card');
            if (show) {
                profileCard.classList.add('loading');
            } else {
                profileCard.classList.remove('loading');
            }
        }

        // Show change password modal
        function showChangePasswordModal() {
            document.getElementById('changePasswordModal').classList.add('show');
            document.getElementById('currentPassword').focus();
        }

        // Close change password modal
        function closeChangePasswordModal() {
            document.getElementById('changePasswordModal').classList.remove('show');
            document.getElementById('changePasswordForm').reset();
        }

        // Toggle password visibility
        function togglePasswordVisibility(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                input.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        // Refresh profile data
        async function refreshProfile() {
            showToast('Refreshing profile...', 'info');
            await loadUserProfile();
            showToast('Profile refreshed successfully', 'success');
        }

        // Load notifications
        async function loadNotifications() {
            try {
                const response = await fetch('/admin/api/notifications?limit=10');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        notificationData = data.notifications;
                        renderNotifications();
                        updateNotificationBadge();
                    }
                }
            } catch (error) {
                console.error('Error loading notifications:', error);
                showEmptyNotifications();
            }
        }

        // Render notifications
        function renderNotifications() {
            const notificationContent = document.getElementById('notificationContent');
            
            if (!notificationData || notificationData.length === 0) {
                showEmptyNotifications();
                return;
            }

            const sortedNotifications = notificationData.sort((a, b) => 
                new Date(b.created_at) - new Date(a.created_at)
            );
            
            notificationContent.innerHTML = sortedNotifications.map(notification => `
                <div class="notification-item" data-id="${notification.id}">
                    <div class="notification-title">${notification.title}</div>
                    <div class="notification-message">${notification.message}</div>
                    <div class="notification-time">${formatNotificationDate(notification.created_at)}</div>
                </div>
            `).join('');
        }

        // Show empty notifications
        function showEmptyNotifications() {
            const notificationContent = document.getElementById('notificationContent');
            notificationContent.innerHTML = `
                <div style="text-align: center; color: #666; padding: 20px;">
                    <i class="fas fa-bell-slash" style="font-size: 24px; margin-bottom: 10px; color: #ccc;"></i>
                    <p>No new notifications</p>
                </div>
            `;
        }

        // Format notification date
        function formatNotificationDate(dateString) {
            try {
                const date = new Date(dateString);
                const now = new Date();
                const diffInMinutes = Math.floor((now - date) / (1000 * 60));
                
                if (diffInMinutes < 1) return 'Just now';
                if (diffInMinutes < 60) return `${diffInMinutes} minutes ago`;
                
                const diffInHours = Math.floor(diffInMinutes / 60);
                if (diffInHours < 24) return `${diffInHours} hours ago`;
                
                const diffInDays = Math.floor(diffInHours / 24);
                if (diffInDays < 7) return `${diffInDays} days ago`;
                
                return date.toLocaleDateString();
            } catch (error) {
                return 'Unknown';
            }
        }

        // Update notification badge
        function updateNotificationBadge() {
            const unreadCount = notificationData.filter(n => !n.is_read).length;
            const badge = document.getElementById('notificationBadge');
            
            if (unreadCount > 0) {
                badge.textContent = unreadCount > 99 ? '99+' : unreadCount;
                badge.classList.add('show');
            } else {
                badge.classList.remove('show');
            }
        }

        // Toggle notifications dropdown
        function toggleNotifications() {
            const dropdown = document.getElementById('notificationDropdown');
            const isVisible = dropdown.classList.contains('show');
            
            if (isVisible) {
                dropdown.classList.remove('show');
            } else {
                dropdown.classList.add('show');
                loadNotifications();
            }
        }

        // Toggle profile dropdown
        function toggleDropdown() {
            const menu = document.getElementById('profileDropdown');
            menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
        }

        // Show alert message
        function showAlert(message, type = 'info') {
            const alertContainer = document.getElementById('alertContainer');
            const alertId = 'alert-' + Date.now();
            
            const alertDiv = document.createElement('div');
            alertDiv.id = alertId;
            alertDiv.className = `alert ${type}`;
            
            const icon = {
                'success': 'check-circle',
                'error': 'exclamation-circle',
                'info': 'info-circle'
            }[type] || 'info-circle';
            
            alertDiv.innerHTML = `
                <i class="fas fa-${icon}"></i>
                <span>${message}</span>
                <button onclick="closeAlert('${alertId}')" style="margin-left: auto; background: none; border: none; color: inherit; cursor: pointer; padding: 0; font-size: 16px;">
                    <i class="fas fa-times"></i>
                </button>
            `;
            
            alertContainer.appendChild(alertDiv);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                closeAlert(alertId);
            }, 5000);
        }

        // Close alert
        function closeAlert(alertId) {
            const alert = document.getElementById(alertId);
            if (alert) {
                alert.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => {
                    if (alert.parentNode) {
                        alert.remove();
                    }
                }, 300);
            }
        }

        // Show toast notification
        function showToast(message, type = 'info') {
            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toastMessage');
            
            // Remove existing classes
            toast.className = `toast ${type}`;
            
            const icon = {
                'success': 'check-circle',
                'error': 'exclamation-circle',
                'info': 'info-circle'
            }[type] || 'info-circle';
            
            toast.innerHTML = `
                <i class="fas fa-${icon}"></i>
                <span>${message}</span>
            `;
            
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.style.animation = 'slideOutRight 0.3s ease';
                setTimeout(() => {
                    toast.classList.remove('show');
                    toast.style.animation = '';
                }, 300);
            }, 4000);
        }

        // Handle online/offline status
        window.addEventListener('online', () => {
            showToast('Connection restored', 'success');
            loadUserProfile();
            loadNotifications();
        });

        window.addEventListener('offline', () => {
            showToast('Connection lost', 'error');
        });

        // Enhanced error handling
        window.addEventListener('error', function(e) {
            console.error('JavaScript error:', e.error);
            showToast('An unexpected error occurred', 'error');
        });

        // Check for URL parameters (for displaying messages from server)
        function checkUrlParameters() {
            const urlParams = new URLSearchParams(window.location.search);
            const success = urlParams.get('success');
            const error = urlParams.get('error');
            
            if (success) {
                showAlert(decodeURIComponent(success), 'success');
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }
            
            if (error) {
                showAlert(decodeURIComponent(error), 'error');
                // Clean URL
                window.history.replaceState({}, document.title, window.location.pathname);
            }
        }

        // Call checkUrlParameters when page loads
        document.addEventListener('DOMContentLoaded', checkUrlParameters);

        // Auto-refresh notifications every 2 minutes
        setInterval(() => {
            loadNotifications();
        }, 120000);
    </script>
</body>
</html>